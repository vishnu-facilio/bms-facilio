# Configurations
db.executeSingleStatement=false


module.child.name=WITH RecursiveCte AS\n (SELECT m.moduleid, m.orgid, m.name, m.display_name, m.table_name, m.module_type, m.is_trash_enabled, m.data_interval, m.show_as_view, m.criteria_id, m.extends_id FROM modules m \n WHERE orgid = ? and name = ?\n UNION ALL\n SELECT m1.moduleid, m1.orgid, m1.name, m1.display_name, m1.table_name, m1.module_type, m1.is_trash_enabled, m1.data_interval,m1.show_as_view, m1.criteria_id, m1.extends_id FROM modules m1\n INNER JOIN RecursiveCte RCTE ON m1.moduleid = RCTE.extends_id\n )\n SELECT moduleid, orgid, name, display_name, table_name, module_type, is_trash_enabled, data_interval, show_as_view, criteria_id, extends_id FROM RecursiveCte
module.child.id=WITH RecursiveCte AS\n ( \n SELECT m.moduleid, m.orgid, m.name, m.display_name, m.table_name, m.module_type, m.is_trash_enabled, m.data_interval, m.show_as_view, m.criteria_id, m.extends_id FROM modules m \n WHERE orgid = ? and moduleid = ? \n UNION ALL \n SELECT m1.moduleid, m1.orgid, m1.name, m1.display_name, m1.table_name, m1.module_type, m1.is_trash_enabled, m1.data_interval, m1.show_as_view,m1.criteria_id, m1.extends_id FROM modules m1 \n INNER JOIN RecursiveCte RCTE ON m1.moduleid = RCTE.extends_id \n ) \n SELECT moduleid, orgid, name, display_name, table_name, module_type, is_trash_enabled, data_interval, show_as_view, criteria_id, extends_id FROM RecursiveCte

module.submodule.get=WITH RecursiveCte AS\n ( \n SELECT m.moduleid, m.orgid, m.name, m.display_name, m.table_name, m.module_type, m.is_trash_enabled, m.data_interval, m.show_as_view, m.criteria_id, m.extends_id FROM modules m \n WHERE orgid = ? and name = ? \n UNION ALL \n SELECT m1.moduleid, m1.orgid, m1.name, m1.display_name, m1.table_name, m1.module_type, m1.is_trash_enabled, m1.data_interval, m1.show_as_view,m1.criteria_id, m1.extends_id FROM modules m1 \n INNER JOIN RecursiveCte RCTE ON m1.moduleid = RCTE.extends_id \n ) \n SELECT child_module_id from submodulesrel where parent_module_id in (select moduleid FROM RecursiveCte where module_type in ({0}))

module.submodule.all.name=with recursivecte as\n (select m.moduleid, m.extends_id from modules m\n where orgid = ? and name = ?\n union all \n select m1.moduleid, m1.extends_id from modules m1 \n inner join recursivecte rcte on m1.moduleid = rcte.extends_id\n )\n select child_module_id from submodulesrel inner join recursivecte on submodulesrel.parent_module_id = recursivecte.moduleid
module.submodule.all.id=with recursivecte as\n (select m.moduleid, m.extends_id from modules m\n where orgid = ? and moduleid = ?\n union all \n select m1.moduleid, m1.extends_id from modules m1 \n inner join recursivecte rcte on m1.moduleid = rcte.extends_id\n )\n select child_module_id from submodulesrel inner join recursivecte on submodulesrel.parent_module_id = recursivecte.moduleid
module.submodule.type.id=with recursivecte as\n (select m.moduleid, m.extends_id from modules m\n where orgid = ? and moduleid = ?\n union all \n select m1.moduleid, m1.extends_id from modules m1 \n inner join recursivecte rcte on m1.moduleid = rcte.extends_id\n )\n select child_module_id from submodulesrel inner join modules childmodules on submodulesrel.child_module_id = childmodules.moduleid inner join recursivecte on submodulesrel.parent_module_id = recursivecte.moduleid where childmodules.module_type in ({0})

module.extended.id=with recursivecte as\n (select m.moduleid, m.extends_id from modules m\n where orgid = ? and moduleid = ?\n union all \n select m1.moduleid, m1.extends_id from modules m1 \n inner join recursivecte rcte on m1.moduleid = rcte.extends_id\n ) select moduleid from recursivecte

module.child.modules= SELECT moduleid, orgid, name, display_name, table_name, module_type, is_trash_enabled, data_interval, show_as_view, extends_id from modules where orgid = ? AND extends_id = ?

# report date aggr query
year.expr=format(dateadd(s, {$place_holder1$}, (DATEADD(s, {$place_holder$}/1000, '1970-01-01 00:00:00'))),'yyyy')
monthandyear.expr=format(dateadd(s, {$place_holder1$}, (DATEADD(s, {$place_holder$}/1000, '1970-01-01 00:00:00'))),'yyyy MM')
weekandyear.expr=convert(varchar, datepart(year, dateadd(s, {$place_holder1$}, (DATEADD(s, {$place_holder$}/1000, '1970-01-01 00:00:00'))))) + ' ' + convert(varchar, datepart(week, dateadd(s, {$place_holder1$}, (DATEADD(s, {$place_holder$}/1000, '1970-01-01 00:00:00')))))
fulldate.expr=format(dateadd(s, {$place_holder1$}, (DATEADD(s, {$place_holder$}/1000, '1970-01-01 00:00:00'))),'yyyy MM dd')
dateandtime.expr=format(dateadd(s, {$place_holder1$}, (DATEADD(s, {$place_holder$}/1000, '1970-01-01 00:00:00'))),'yyyy MM dd HH:mm')
month.expr=format(dateadd(s, {$place_holder1$}, (DATEADD(s, {$place_holder$}/1000, '1970-01-01 00:00:00'))),'MM')
week.expr=datepart(week, dateadd(s, {$place_holder1$}, (DATEADD(s, {$place_holder$}/1000, '1970-01-01 00:00:00'))))
weekday.expr=datepart(weekday, dateadd(s, {$place_holder1$}, (DATEADD(s, {$place_holder$}/1000, '1970-01-01 00:00:00'))))
daysofmonth.expr=DAY(dateadd(s, {$place_holder1$}, (DATEADD(s, {$place_holder$}/1000, '1970-01-01 00:00:00'))))
hoursofday.expr=format(dateadd(s, {$place_holder1$}, (DATEADD(s, {$place_holder$}/1000, '1970-01-01 00:00:00'))),'HH')
hoursofdayonly.expr=format(dateadd(s, {$place_holder1$}, (DATEADD(s, {$place_holder$}/1000, '1970-01-01 00:00:00'))),'yyyy MM dd HH')
quaterly.expr=DATEPART(year, dateadd(s, {$place_holder1$}, (DATEADD(s, {$place_holder$}/1000, '1970-01-01 00:00:00')))), DATEPART(quarter, dateadd(s, {$place_holder1$}, (DATEADD(s, {$place_holder$}/1000, '1970-01-01 00:00:00'))))



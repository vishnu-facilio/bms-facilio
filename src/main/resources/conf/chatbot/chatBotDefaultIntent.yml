- 
   name: "system_greet_intent"
   displayName: "System Greeting Intent"
   type: 1
   localId : 1
   actions:
    - 
        action: 
            actionType: 29
            status: 1
   invokeSamples:
    -
        sampleLocalId : 1
        sample: "hi"
    -
        sampleLocalId : 2
        sample: "hello"
    -
        sampleLocalId : 3
        sample: "Hai"
        
- 
   name: "system_greet_question_1_intent"
   displayName: "System Greeting Question Intent"
   type: 1
   localId : 2
   actions:
    - 
        action: 
            actionType: 29
            status: 1
   invokeSamples:
    -
        sampleLocalId : 1
        sample: "how are you"
    -
        sampleLocalId : 2
        sample: "Whatâ€™s up"
    -
        sampleLocalId : 3
        sample: "How are you doing"
    -
        sampleLocalId : 4
        sample: "How do you do"
    -
        sampleLocalId : 5
        sample: "Whazzup"
        
        
- 
   name: "system_name_query_intent"
   displayName: "System Name Query Intent"
   type: 1
   localId : 3
   withParams : true
   params:
   -
      name : 'myname'
      askAs : "I don't have a name, can you suggest a name for me?"
      dataType : 1
      mlType : 1
      localId : 1
   actions:
    - 
        action: 
            actionType: 29
            status: 1
   invokeSamples:
    -
        sampleLocalId : 1
        sample: "what is your name"
    -
        sampleLocalId : 2
        sample: "What do you call yourself"
    -
        sampleLocalId : 3
        sample: "What are you named"
    -
        sampleLocalId : 4
        sample: "may i have your name"
    -
        sampleLocalId : 5
        sample: "How may I address you"
         
- 
   name: "system_intent_not_fount_intent"
   displayName: "System Intent not Fount Intent"
   type: 3
   localId : 4
   actions:
      - 
        action: 
            actionType: 29
            status: 1
            
- 
   name: "system_terminate_session_intent"
   displayName: "System Terminate Session Intent"
   type: 1
   localId : 5
   actions:
    - 
        action: 
            actionType: 29
            status: 1
   invokeSamples:
    -
        sampleLocalId : 1
        sample: "exit"
    -
        sampleLocalId : 2
        sample: "stop it"
    -
        sampleLocalId : 3
        sample: "terminate"
       
- 
   name: "system_create_wo_intent"
   displayName: "System create wo Intent"
   type: 1
   localId : 7
   withParams : true
   params:
   -
      name : 'subject'
      askAs : 'Enter the Subject?'
      dataType : 1
      mlType : 1
      localId : 1
   -
      name : 'description'
      askAs : 'Tell us something more about the problem'
      dataType : 1
      mlType : 1
      localId : 2
   actions:
    - 
        action: 
            actionType: 30
            status: 1
            templateJson: 
                type: 18
                resultWorkflowContext :
                   isV2Script : true
                   workflowV2String : 'String test(Map data){
    
                                         wo = {};
                                         wo.subject = data.subject;
                                         wo.description = data.description;
                                         wo.sourceType = 7; 
                                           
                                         cri = {
                                           criteria : [id != 0],
                                           limit : 1,
                                           orderBy : "id" asc,
                                         };
                                         
                                         site = Module("site").fetch(cri)[0];
                                         wo.siteId = site.id;
                                         wo.site = site.id;
                                         
                                         WorkOrder().add(wo);
                                         
                                         return "Workorder created Successfully.";
                                       }'   
   invokeSamples:
    -
       sampleLocalId : 1
       sample: "create wo"
    -
       sampleLocalId : 2
       sample: "create a wo"
    -
       sampleLocalId : 3
       sample: "create workorder"
    -
       sampleLocalId : 4
       sample: "create a workorder"
    -
       sampleLocalId : 5
       sample: "file a workorder"
    -
       sampleLocalId : 6
       sample: "file wo"
    -
       sampleLocalId : 7
       sample: "make a workorder"
    -
       sampleLocalId : 8
       sample: "make wo"
       
- 
   name: "system_what_is_workorder_question_intent"
   displayName: "System what is workorder question Intent"
   type: 1
   localId : 8
   actions:
    - 
        action: 
            actionType: 29
            status: 1
   invokeSamples:
    -
        sampleLocalId : 1
        sample: "what is workorder"
    -
        sampleLocalId : 2
        sample: "what is wo"
        
- 
   name: "system_vm_create_page_direction_intent"
   displayName: "System vm create page direction Intent"
   type: 1
   localId : 9
   actions:
    - 
        action: 
            actionType: 29
            status: 1
   invokeSamples:
    -
        sampleLocalId : 1
        sample: "where can i create a vm"
    -
        sampleLocalId : 2
        sample: "where can i create a virtual meter"
    -
        sampleLocalId : 3
        sample: "how can i create a virtual meter"
    -
        sampleLocalId : 4
        sample: "how can i create a vm"
    -
        sampleLocalId : 5
        sample: "how to create a vm"
    -
        sampleLocalId : 6
        sample: "how to create a virtual meter"
    -
        sampleLocalId : 7
        sample: "where to create a virtual meter"
    -
        sampleLocalId : 8
        sample: "where to create a vm"
        
- 
   name: "system_facilio_blog_page_query_intent"
   displayName: "System facilio blog page query Intent"
   type: 1
   localId : 10
   actions:
    - 
        action: 
            actionType: 29
            status: 1
   invokeSamples:
    -
        sampleLocalId : 1
        sample: "where can i find your blog"
    -
        sampleLocalId : 2
        sample: "where can i find blog posts"
    -
        sampleLocalId : 3
        sample: "how to view facilio blog"
    -
        sampleLocalId : 4
        sample: "how to view blog"
    -
        sampleLocalId : 5
        sample: "give me your blog address"
    -
        sampleLocalId : 6
        sample: "where to find your blog"
    -
        sampleLocalId : 7
        sample: "where to find your facilio blog"
        
- 
   name: "system_what_is_your_age_intent"
   displayName: "System what is your age Intent"
   type: 1
   localId : 12
   actions:
    - 
        action: 
            actionType: 29
            status: 1
   invokeSamples:
    -
        sampleLocalId : 1
        sample: "what is your age"
    -
        sampleLocalId : 2
        sample: "how old are you"
    -
        sampleLocalId : 3
        sample: "may i have your age"
        
- 
   name: "system_what_is_your_gender_intent"
   displayName: "System what is your age Intent"
   type: 1
   localId : 12
   actions:
    - 
        action: 
            actionType: 29
            status: 1
   invokeSamples:
    -
        sampleLocalId : 1
        sample: "what is your gender"
    -
        sampleLocalId : 2
        sample: "may i have your gender"
        
- 
   name: "system_update_wo_note_intent"
   displayName: "System update wo Intent"
   type: 1
   localId : 13
   withParams : true
   params:
   -
      name : 'woId'
      askAs : "Select your workrequest"
      dataType : 2
      mlType : 1
      localId : 1
   -
      name : 'note'
      askAs : "Enter your note"
      dataType : 1
      mlType : 1
      localId : 2
   contextWorkflow :
       isV2Script : true
       workflowV2String : 'ChatBotAction test(Map data){
                             if(data.woId == null) {
                             
                                db = {
								    criteria : [sourceType != 7],
								    limit : 10,
								    orderBy: "createdTime" desc
							    };
                                
                              	wos = WorkOrder().fetch(db);
                                
                                woMapList = [];
                                
                                for each index,wo in wos {
                                    woMap = {};
                                    woMap.id = wo.id;
                                    woMap.label = wo.subject;
                                    
                                    woMapList.add(woMap);
                                }
                                
                                return chatBot().param("woId","Select your workrequest",woMapList);
                             }
                             if(data.woId != null && data.note == null) {
                                return chatBot().param("note","Enter your note");
                             }
                             if(data.woId != null && data.note != null) {
                             
                                return chatBot().execute();
                             }
                           }' 
   actions:
    - 
        action: 
            actionType: 30
            status: 1
            templateJson: 
                type: 18
                resultWorkflowContext :
                   isV2Script : true
                   workflowV2String : 'String test(Map data){
    
                                         WorkOrder().addNote(data.woId,data.note);
                                         
                                         return "Note updated Successfully.";
                                       }'  
   invokeSamples:
    -
       sampleLocalId : 1
       sample: "add note to wo"
    -
       sampleLocalId : 2
       sample: "add note to a wo"
    -
       sampleLocalId : 3
       sample: "add note workorder"
    -
       sampleLocalId : 4
       sample: "add note to workorder"

- 
   name: "system_show_open_workorder_count_intent"
   displayName: "System show open workorder count Intent"
   type: 1
   localId : 14
   withParams : false
   actions:
    - 
        responseType : 2
        action: 
            actionType: 30
            status: 1
            templateJson: 
                type: 18
                resultWorkflowContext :
                   isV2Script : true
                   workflowV2String : 'Number test(Map data){
    
                                         wos = WorkOrder().fetch([id != null]);
                                         
                                         count = 0;
                                         if(wos != null) {
                                            count = wos.size();
                                         }
                                         
                                         return count;
                                       }'  
   invokeSamples:
    -
       sampleLocalId : 1
       sample: "show open wo count"
    -
       sampleLocalId : 2
       sample: "give me open wo count"

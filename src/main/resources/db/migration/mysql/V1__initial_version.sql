
-- Create Organizations Table
CREATE TABLE IF NOT EXISTS Organizations (
	ORGID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	ORGNAME VARCHAR(100),
	FACILIODOMAINNAME VARCHAR(50),
	LOGO_ID BIGINT,
	PHONE CHAR(20),
	MOBILE CHAR(20),
	FAX CHAR(50),
	STREET CHAR(255),
  	CITY CHAR(255),
  	STATE CHAR(255),
  	ZIP CHAR(255),
  	COUNTRY CHAR(255),
  	CURRENCY CHAR(100),
  	TIMEZONE CHAR(100),
  	CREATED_TIME BIGINT,
  	DELETED_TIME BIGINT DEFAULT -1
);

-- Create Users Table
CREATE TABLE IF NOT EXISTS Users (
	USERID BIGINT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(255),
	USER_VERIFIED BOOLEAN,
	EMAIL VARCHAR(150),
	PASSWORD VARCHAR(150),
	PHOTO_ID BIGINT,
	TIMEZONE CHAR(100),
	LANGUAGE CHAR(50),
	PHONE CHAR(20),
	MOBILE CHAR(20),
	STREET VARCHAR(255),
	CITY VARCHAR(255),
	STATE VARCHAR(255),
	ZIP VARCHAR(255),
	COUNTRY VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS UserSessions (
	SESSIONID BIGINT AUTO_INCREMENT PRIMARY KEY,
	USERID BIGINT,
	SESSION_TYPE INT,
	TOKEN VARCHAR(1000),
	START_TIME BIGINT DEFAULT -1,
	END_TIME BIGINT DEFAULT -1,
	IS_ACTIVE BOOLEAN,
	IPADDRESS VARCHAR(200),
	USER_AGENT VARCHAR(3000),
	SESSION_INFO VARCHAR(5000),
	USER_TYPE VARCHAR(100),
	CONSTRAINT USERSESSIONS_FK_USERID FOREIGN KEY (USERID) REFERENCES Users(USERID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS `faciliousers` (
`id` int( 11 ) NOT NULL AUTO_INCREMENT ,
`username` varchar( 200 ) NOT NULL ,
`email` varchar( 200 ) NOT NULL ,
`mobile` char(20) DEFAULT NULL,
USERID BIGINT NOT NULL,
PRIMARY KEY ( `id` ) ,
UNIQUE KEY `username` ( `username` ) ,
UNIQUE KEY `email` ( `email` ),
CONSTRAINT faciliousers_FK_USERID FOREIGN KEY (USERID) REFERENCES Users(USERID) ON UPDATE CASCADE
)  DEFAULT CHARSET = utf8;

CREATE TABLE IF NOT EXISTS User_Mobile_Setting (
	USER_MOBILE_SETTING_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	USERID BIGINT NOT NULL,
	MOBILE_INSTANCE_ID VARCHAR(500) NOT NULL,
	CREATED_TIME BIGINT,
	IS_FROM_PORTAL BOOLEAN DEFAULT FALSE,
	CONSTRAINT UNIQUE_INSTANCE_ID UNIQUE(USERID, MOBILE_INSTANCE_ID),
	CONSTRAINT USER_MOBILE_SETTING_FK_USERID FOREIGN KEY (USERID) REFERENCES Users(USERID)
);

-- Create Roles Table
CREATE TABLE IF NOT EXISTS Role (
	ROLE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(50),
	DESCRIPTION VARCHAR(500),
	CREATED_TIME BIGINT,
	CONSTRAINT ROLE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Permission (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	ROLE_ID BIGINT NOT NULL,
	MODULE_NAME VARCHAR(100),
	PERMISSION BIGINT NOT NULL,
	CONSTRAINT PERMISSION_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT PERMISSION_FK_ROLEID FOREIGN KEY (ROLE_ID) REFERENCES Role(ROLE_ID)
);

CREATE TABLE IF NOT EXISTS FacilioFile (
  FILE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  FILE_NAME CHAR(255),
  FILE_PATH CHAR(255),
  FILE_SIZE BIGINT,
  CONTENT_TYPE CHAR(255),
  UPLOADED_BY BIGINT,
  UPLOADED_TIME BIGINT,
  IS_DELETED BOOLEAN,
  CONSTRAINT FILE_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Modules (
	MODULEID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	DISPLAY_NAME VARCHAR(150),
	TABLE_NAME VARCHAR(50) NOT NULL,
	EXTENDS_ID BIGINT,
	MODULE_TYPE TINYINT NOT NULL,
	IS_TRASH_ENABLED BOOLEAN,
	DATA_INTERVAL INT,
	SHOW_AS_VIEW BOOLEAN,
	CONSTRAINT MODULES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT MODULES_FK_PARENT FOREIGN KEY (EXTENDS_ID) REFERENCES Modules(MODULEID),
	CONSTRAINT MODULES_UNQIUE UNIQUE(ORGID, NAME)
);



CREATE TABLE IF NOT EXISTS Resources (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(1000),
	PHOTO_ID BIGINT,
	RESOURCE_TYPE TINYINT NOT NULL,
	SPACE_ID BIGINT,
	CONTROLLER_ID BIGINT,
	SYS_DELETED BOOLEAN,
	SITE_ID BIGINT,
	QR_VALUE VARCHAR(500),
	CONSTRAINT RESOURCES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT RESOURCES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT RESOURCES_FK_SPACE_ID FOREIGN KEY (SPACE_ID) REFERENCES Resources(ID),
	CONSTRAINT RESOURCES_FK_PHOTO_ID FOREIGN KEY (PHOTO_ID) REFERENCES FacilioFile (FILE_ID),
	CONSTRAINT RESOURCES_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Resources(ID),
	CONSTRAINT RESOURCES_UNIQYE_QR_VALUE UNIQUE (ORGID, QR_VALUE)
);

CREATE INDEX RESOURCES_NAME ON Resources (ORGID,MODULEID,NAME);

-- Create ORG_Users Table
CREATE TABLE IF NOT EXISTS ORG_Users (
	ORG_USERID BIGINT PRIMARY KEY,
	USERID BIGINT,
	ORGID BIGINT NOT NULL,
	INVITEDTIME BIGINT,
	LICENSE INT,
	ISDEFAULT BOOLEAN,
	USER_STATUS BOOLEAN,
	INVITATION_ACCEPT_STATUS BOOLEAN,
	ROLE_ID BIGINT,
	USER_TYPE TINYINT,
	DELETED_TIME BIGINT DEFAULT -1,
	PORTAL_VERIFIED TINYINT DEFAULT NULL,
	CONSTRAINT ORG_USERS_FK_ORG_USERID FOREIGN KEY (ORG_USERID) REFERENCES Resources(ID) ON DELETE CASCADE,
	CONSTRAINT ORG_USERS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ORG_USERS_FK_USERID FOREIGN KEY (USERID) REFERENCES Users(USERID) ON UPDATE CASCADE,
	CONSTRAINT ORG_USERS_FK_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES Role(ROLE_ID)
);

CREATE TABLE IF NOT EXISTS Weather_Stations (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  NAME VARCHAR(100) NOT NULL,
  LAT DOUBLE NOT NULL,
  LNG DOUBLE NOT NULL,
  CONSTRAINT Weather_Stations_UNIQUE_ID UNIQUE(LAT,LNG)
);

CREATE TABLE IF NOT EXISTS Locations (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  MODULEID BIGINT NOT NULL,
  NAME CHAR(255) NOT NULL,
  STREET CHAR(255),
  CITY CHAR(255),
  STATE CHAR(255),
  ZIP CHAR(255),
  COUNTRY CHAR(255),
  LAT DOUBLE NOT NULL,
  LNG DOUBLE NOT NULL,
  CONTACT_ID BIGINT NULL,
  PHONE CHAR(100),
  FAX_PHONE CHAR(100),
  CONSTRAINT LOCATIONS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT LOCATIONS_MODULEID_FK FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
  CONSTRAINT LOCATIONS_CONTACT_FK FOREIGN KEY (CONTACT_ID) REFERENCES ORG_Users (ORG_USERID)
);

CREATE TABLE IF NOT EXISTS BaseSpace (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	AREA DOUBLE(9,3),
	SPACE_TYPE TINYINT NOT NULL, 
	OPERATION_HOURS_START FLOAT,
	OPERATION_HOURS_END FLOAT,
	MAX_OCCUPANCY INT,
	LOCAL_ID INT,
	SITE_ID BIGINT,
	BUILDING_ID BIGINT,
	FLOOR_ID BIGINT,
	SPACE_ID1 BIGINT,
	SPACE_ID2 BIGINT,
	SPACE_ID3 BIGINT,
	SPACE_ID4 BIGINT,
	CONSTRAINT BASE_SPACE_FK_ID FOREIGN KEY (ID) REFERENCES Resources(ID) ON DELETE CASCADE,
	CONSTRAINT BASE_SPACE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT BASE_SPACE_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT BASE_SPACE_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES BaseSpace (ID),
	CONSTRAINT BASE_SPACE_FK_BUILDING_ID FOREIGN KEY (BUILDING_ID) REFERENCES BaseSpace (ID),
	CONSTRAINT BASE_SPACE_FK_FLOOR_ID FOREIGN KEY (FLOOR_ID) REFERENCES BaseSpace (ID),
	CONSTRAINT BASE_SPACE_FK_SPACE_ID1 FOREIGN KEY (SPACE_ID1) REFERENCES BaseSpace (ID),
	CONSTRAINT BASE_SPACE_FK_SPACE_ID2 FOREIGN KEY (SPACE_ID2) REFERENCES BaseSpace (ID),
	CONSTRAINT BASE_SPACE_FK_SPACE_ID3 FOREIGN KEY (SPACE_ID3) REFERENCES BaseSpace (ID),
	CONSTRAINT BASE_SPACE_FK_SPACE_ID4 FOREIGN KEY (SPACE_ID4) REFERENCES BaseSpace (ID)
);

CREATE TABLE IF NOT EXISTS Site (
       ID BIGINT PRIMARY KEY,
       ORGID BIGINT NOT NULL,
       MODULEID BIGINT NOT NULL,
       LOCATION_ID BIGINT,
       MANAGED_BY BIGINT,
       NO_OF_BUILDINGS INT,
       GROSS_FLOOR_AREA DOUBLE(9,3),
       SITE_TYPE INT,
       WEATHER_STATION BIGINT,
       CDD_BASE_TEMPERATURE DOUBLE,
       HDD_BASE_TEMPERATURE DOUBLE,
       WDD_BASE_TEMPERATURE DOUBLE,
       STRING_CF1 VARCHAR(50),
       STRING_CF2 VARCHAR(50),
       STRING_CF3 VARCHAR(50),
       STRING_CF4 VARCHAR(50),
       STRING_CF5 VARCHAR(50),
       NUMBER_CF1 BIGINT,
       NUMBER_CF2 BIGINT,
       NUMBER_CF3 BIGINT,
       NUMBER_CF4 BIGINT,
       NUMBER_CF5 BIGINT,
       DECIMAL_CF1 DOUBLE(9,3),
       DECIMAL_CF2 DOUBLE(9,3),
       DECIMAL_CF3 DOUBLE(9,3),
       DECIMAL_CF4 DOUBLE(9,3),
       DECIMAL_CF5 DOUBLE(9,3),
       BOOLEAN_CF1 BOOLEAN,
       BOOLEAN_CF2 BOOLEAN,
       BOOLEAN_CF3 BOOLEAN,
       BOOLEAN_CF4 BOOLEAN,
       BOOLEAN_CF5 BOOLEAN,
       DATE_CF1 BIGINT,
       DATE_CF2 BIGINT,
       DATE_CF3 BIGINT,
       DATE_CF4 BIGINT,
       DATE_CF5 BIGINT,
       DATETIME_CF1 BIGINT,
       DATETIME_CF2 BIGINT,
       DATETIME_CF3 BIGINT,
       DATETIME_CF4 BIGINT,
       DATETIME_CF5 BIGINT,
       CONSTRAINT SITE_FK_ID FOREIGN KEY (ID) REFERENCES BaseSpace(ID) ON DELETE CASCADE,
       CONSTRAINT SITE_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
       CONSTRAINT SITE_FK_MANAGED_BY FOREIGN KEY (MANAGED_BY) REFERENCES ORG_Users (ORG_USERID),
       CONSTRAINT SITE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
       CONSTRAINT SITE_FK_LOCATION_ID FOREIGN KEY (LOCATION_ID) REFERENCES Locations(ID),
       CONSTRAINT SITE_FK_WEATHER_STATION FOREIGN KEY (WEATHER_STATION) REFERENCES Weather_Stations(ID)
);




CREATE TABLE IF NOT EXISTS Global_FacilioAuthToken (
	`id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	authtoken DOUBLE not null,
	ORGID BIGINT not null,
	USERID BIGINT not null,
	CONSTRAINT Global_FacilioAuthToken_USERID_FK FOREIGN KEY (USERID) REFERENCES ORG_Users (ORG_USERID),
	CONSTRAINT Global_FacilioAuthToken_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

-- Create GLobal_Domain_Index
CREATE TABLE IF NOT EXISTS Global_Domain_Index (
	DOMAINNAME VARCHAR(50),
	ORGID BIGINT NOT NULL 
);

-- Creating org_units table

CREATE TABLE IF NOT EXISTS Org_Units (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  METRIC int(11) DEFAULT NULL,
  UNIT int(11) DEFAULT NULL,
  CONSTRAINT ORG_UNITS_ORG_ID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID)
);

-- Create Jobs Table
CREATE TABLE IF NOT EXISTS Jobs (
	JOBID BIGINT,
	ORGID BIGINT,
	JOBNAME VARCHAR(50),
	IS_ACTIVE BOOLEAN,
	TRANSACTION_TIMEOUT INT,
	IS_PERIODIC BOOLEAN,	
	PERIOD INT,
	SCHEDULE_INFO VARCHAR(1000),
	NEXT_EXECUTION_TIME BIGINT,
	EXECUTOR_NAME VARCHAR(50),
	END_EXECUTION_TIME BIGINT,
	MAX_EXECUTION INT,
	CURRENT_EXECUTION_COUNT INT,
	STATUS tinyint(4) NOT NULL DEFAULT 3,
    JOB_SERVER_ID bigint(20) NOT NULL DEFAULT 0,
    CURRENT_EXECUTION_TIME bigint(20) NOT NULL DEFAULT 0,
    EXECUTION_ERROR_COUNT tinyint(4) NOT NULL DEFAULT 0,
	CONSTRAINT JOBS_PK PRIMARY KEY (JOBID, JOBNAME),
	CONSTRAINT JOBS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

-- Create Jobs Table
CREATE TABLE IF NOT EXISTS System_Jobs (
	JOBID BIGINT,
	ORGID BIGINT NOT NULL,
	LAST_EXECUTION_TIME BIGINT,
	CONSTRAINT SYSTEM_JOBS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT SYSTEM_JOBS_FK_JOBID FOREIGN KEY (JOBID) REFERENCES Jobs(JOBID)
);

CREATE TABLE IF NOT EXISTS UtilityProviders (
	UTILITYID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	USERID BIGINT,
	LOGINURL TEXT,
	USERNAME TEXT,
	PASSWORD TEXT,
	STATUS INT,
	CONSTRAINT UTILITY_PROVIDERS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT UTILITY_PROVIDERS_FK_USERID FOREIGN KEY (USERID) REFERENCES ORG_Users(USERID) 
);


CREATE TABLE IF NOT EXISTS `Groups` (
	GROUPID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	GROUP_NAME VARCHAR(255),
	GROUP_EMAIL VARCHAR(255),
	GROUP_DESC VARCHAR(1000),
	IS_ACTIVE BOOLEAN NOT NULL,
	CREATED_TIME BIGINT,
	CREATED_BY BIGINT,
	PARENT BIGINT,
	SITE_ID BIGINT,
	CONSTRAINT GROUPS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT GROUPS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site (ID)
);

CREATE TABLE IF NOT EXISTS `GroupMembers` (
	MEMBERID BIGINT AUTO_INCREMENT PRIMARY KEY,
	GROUPID BIGINT,
	ORGID BIGINT NOT NULL,
	ORG_USERID BIGINT,
	MEMBER_ROLE INT,
	CONSTRAINT GROUP_MEMBERS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT GROUP_MEMBERS_FK_GROUPID FOREIGN KEY (GROUPID) REFERENCES `Groups`(GROUPID) ON DELETE CASCADE,
	CONSTRAINT GROUP_MEMBERS_FK_USERID FOREIGN KEY (ORG_USERID) REFERENCES ORG_Users(ORG_USERID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS ORGCache	(
   ORGID BIGINT NOT NULL,
   URL VARCHAR(500),
   CONTENT TEXT,
   EXPIREAT BIGINT,
   CONSTRAINT ORG_CACHE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS SubModulesRel (
	PARENT_MODULE_ID BIGINT,
	ORGID BIGINT NOT NULL,
	CHILD_MODULE_ID BIGINT,
	PRIMARY KEY (PARENT_MODULE_ID, CHILD_MODULE_ID),
	CONSTRAINT SUB_MODULES_REL_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT SUB_MODULES_REL_PARENT_FK FOREIGN KEY (PARENT_MODULE_ID) REFERENCES Modules(MODULEID) ON DELETE CASCADE,
	CONSTRAINT SUB_MODULES_REL_CHILD_FK FOREIGN KEY (CHILD_MODULE_ID) REFERENCES Modules(MODULEID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Fields (
	FIELDID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	DISPLAY_NAME VARCHAR(150),
	DISPLAY_TYPE TINYINT,
	COLUMN_NAME VARCHAR(50),
	SEQUENCE_NUMBER TINYINT,
	DATA_TYPE TINYINT NOT NULL,
	IS_DEFAULT BOOLEAN,
	IS_MAIN_FIELD BOOLEAN,
	REQUIRED BOOLEAN,
	DISABLED BOOLEAN,
	STYLE_CLASS VARCHAR(50),
	ICON VARCHAR(20),
	PLACE_HOLDER VARCHAR(50),
	CONSTRAINT FIELDS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT FIELDS_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT FIELDS_NAME_UNIQUE UNIQUE (ORGID, MODULEID, NAME),
	CONSTRAINT FIELDS_COLUMN_NAME_UNIQUE UNIQUE (ORGID, MODULEID, COLUMN_NAME)
);

CREATE TABLE IF NOT EXISTS LookupFields (
	FIELDID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	LOOKUP_MODULE_ID BIGINT,
	SPECIAL_TYPE VARCHAR(25),
	CONSTRAINT LOOKUP_FIELDS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT LOOKUP_FIELDS_FK_FIELDID FOREIGN KEY (FIELDID) REFERENCES Fields(FIELDID) ON DELETE CASCADE,
	CONSTRAINT LOOKUP_FIELDS_FK_MODULE_ID FOREIGN KEY (LOOKUP_MODULE_ID) REFERENCES Modules(MODULEID)
);

CREATE TABLE IF NOT EXISTS NumberFields (
	FIELDID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	UNIT VARCHAR(50),
	METRIC INT,
	UNIT_ID INT,
	IS_COUNTER_FIELD BOOLEAN,
	CONSTRAINT NUMBER_FIELDS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT NUMBER_FIELDS_FK_FIELDID FOREIGN KEY (FIELDID) REFERENCES Fields(FIELDID) ON DELETE CASCADE 
);

CREATE TABLE IF NOT EXISTS BooleanFields (
	FIELDID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	TRUE_VAL VARCHAR(100),
	FALSE_VAL VARCHAR(100),
	CONSTRAINT BOOLEAN_FIELDS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT BOOLEAN_FIELDS_FK_FIELDID FOREIGN KEY (FIELDID) REFERENCES Fields(FIELDID) ON DELETE CASCADE 
);

CREATE TABLE IF NOT EXISTS EnumFieldValues (
	FIELDID BIGINT NOT NULL,
	ORGID BIGINT NOT NULL,
	IDX INT NOT NULL,
	VAL VARCHAR(100) NOT NULL,
	PRIMARY KEY(ORGID,FIELDID,IDX),
	CONSTRAINT ENUM_FIELD_VALUES_UNIQUE UNIQUE (ORGID,FIELDID,VAL),
	CONSTRAINT ENUM_FIELD_VALUES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ENUM_FIELD_VALUES_FK_FIELDID FOREIGN KEY (FIELDID) REFERENCES Fields(FIELDID) ON DELETE CASCADE 
);

CREATE TABLE IF NOT EXISTS FileFields (
	FIELDID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	FORMAT TINYINT,
	CONSTRAINT FILE_FIELDS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT FILE_FIELDS_FK_FIELDID FOREIGN KEY (FIELDID) REFERENCES Fields(FIELDID) ON DELETE CASCADE 
);

CREATE TABLE IF NOT EXISTS Shift_Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	SHIFT_ENTRY TINYINT NOT NULL,
	CONSTRAINT SHIFT_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT SHIFT_READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT SHIFT_READINGS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES ORG_Users(ORG_USERID)
);

-- Create indexes for Shift_Reading table
CREATE INDEX SHIFT_READINGS_PARENT_ID_INDEX on Shift_Readings (PARENT_ID);
CREATE INDEX SHIFT_READINGS_PARENT_ID_TTIME_INDEX ON Shift_Readings (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX SHIFT_READINGS_TTIME_INDEX ON Shift_Readings (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS BusinessHours (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	CONSTRAINT BUSINESS_HOURS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS SingleDayBusinessHours (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	DAY_OF_WEEK TINYINT NOT NULL,
	START_TIME TIME NOT NULL,
	END_TIME TIME NOT NULL,
	CONSTRAINT SINGLE_DAY_BUSINESS_HOURS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT SINGLE_DAY_BUSINESS_HOURS FOREIGN KEY (PARENT_ID) REFERENCES BusinessHours(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS ResizedFile (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  FILE_ID BIGINT NOT NULL,
  ORGID BIGINT NOT NULL,
  WIDTH INT,
  HEIGHT INT,
  FILE_PATH CHAR(255),
  FILE_SIZE BIGINT,
  CONTENT_TYPE CHAR(255),
  GENERATED_TIME BIGINT,
  URL VARCHAR(8000),
  EXPIRY_TIME BIGINT,
  CONSTRAINT RESIZEDFILE_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT RESIZEDFILE_FK_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile(FILE_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Common_Job_Props (
	JOBID BIGINT NOT NULL,
	ORGID BIGINT NOT NULL,
	JOBNAME VARCHAR(50) NOT NULL,
	PROPS VARCHAR(10000) NOT NULL,
	CONSTRAINT COMMON_JOB_PROPS_PK PRIMARY KEY (JOBID, JOBNAME),
	CONSTRAINT COMMON_JOB_PROPS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Workflow (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  WORKFLOW_XML_STRING VARCHAR(10000) DEFAULT NULL,
  UI_MODE TINYINT,
  IS_LOG_NEEDED TINYINT,
  CONSTRAINT WORKFLOW_ORG_ID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID)
);

CREATE TABLE IF NOT EXISTS Workflow_Field (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  WORKFLOW_ID BIGINT DEFAULT NULL,
  MODULEID BIGINT DEFAULT NULL,
  FIELD_ID BIGINT DEFAULT NULL,
  RESOURCE_ID BIGINT DEFAULT NULL,
  AGGREGATION INT DEFAULT NULL,
  CONSTRAINT WORKFLOW_FIELDS_FIELD_ID FOREIGN KEY (FIELD_ID) REFERENCES Fields (FIELDID),
  CONSTRAINT WORKFLOW_FIELDS_MODULE_ID FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID),
  CONSTRAINT WORKFLOW_FIELDS_ORG_ID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT WORKFLOW_FIELDS_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources (ID),
  CONSTRAINT WORKFLOW_FIELDS_WORKLFOW_ID FOREIGN KEY (WORKFLOW_ID) REFERENCES Workflow (ID) ON DELETE CASCADE,
  CONSTRAINT WORKFLOW_FIELDS_UNIQUE_ID UNIQUE(ORGID, MODULEID, FIELD_ID, RESOURCE_ID)
);

CREATE TABLE IF NOT EXISTS Workflow_Log (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  WORKFLOW_ID BIGINT NOT NULL,
  EXECUTION_TIME BIGINT NOT NULL,
  INPUT_PARAMS VARCHAR(1000) NULL,
  VARIABLE_MAP VARCHAR(5000) NULL,
  RESULT VARCHAR(1000) NULL,
  CONSTRAINT WORKFLOW_LOG_ORG_ID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT WORKFLOW_LOG_WORKLFOW_ID FOREIGN KEY (WORKFLOW_ID) REFERENCES Workflow (ID) ON DELETE CASCADE
 );



CREATE TABLE IF NOT EXISTS Accessible_Space (
	ORGID BIGINT NOT NULL,
	ORG_USER_ID BIGINT,
	BS_ID BIGINT,
	SITE_ID BIGINT,
	PRIMARY KEY (ORG_USER_ID, BS_ID),
	CONSTRAINT ACCESSIBLE_SPACE_BS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT ACCESSIBLE_SPACE_ORG_USER_ID_FK FOREIGN KEY (ORG_USER_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT ACCESSIBLE_SPACE_BS_ID_FK FOREIGN KEY (BS_ID) REFERENCES BaseSpace(ID),
	CONSTRAINT ACCESSIBLE_SPACE_SITE_ID_FK FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS Resource_Readings (
	RESOURCE_ID BIGINT,
	ORGID BIGINT NOT NULL,
	READING_ID BIGINT,
	PRIMARY KEY (RESOURCE_ID,READING_ID),
	CONSTRAINT RESOURCE_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT RESOURCE_READINGS_FK_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources(ID) ON DELETE CASCADE,
	CONSTRAINT RESOURCE_READINGS_FK_READING_ID FOREIGN KEY (READING_ID) REFERENCES Modules(MODULEID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Current_Occupancy_Reading (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_SPACE BIGINT NOT NULL,
	CURRENT_OCCUPANCY INT NOT NULL,
	CONSTRAINT CURRENT_OCCUPANCY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CURRENT_OCCUPANCY_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT CURRENT_OCCUPANCY_FK_PARENT_SPACE FOREIGN KEY (PARENT_SPACE) REFERENCES BaseSpace (ID)
);
-- Create indexes for Energy_Data table
CREATE INDEX CURRENT_OCCUPANCY_PARENT_ID_INDEX on Current_Occupancy_Reading (PARENT_SPACE);
CREATE INDEX CURRENT_OCCUPANCY_PARENT_ID_TTIME_INDEX ON Current_Occupancy_Reading (ORGID, MODULEID, PARENT_SPACE, TTIME);
CREATE INDEX CURRENT_OCCUPANCY_TTIME_INDEX ON Current_Occupancy_Reading (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS Assigned_Occupancy_Reading (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_SPACE BIGINT NOT NULL,
	ASSIGNED_OCCUPANCY INT NOT NULL,
	CONSTRAINT ASSIGNED_OCCUPANCY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ASSIGNED_OCCUPANCY_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ASSIGNED_OCCUPANCY_FK_PARENT_SPACE FOREIGN KEY (PARENT_SPACE) REFERENCES BaseSpace (ID)
);
-- Create indexes for Energy_Data table
CREATE INDEX ASSIGNED_OCCUPANCY_PARENT_ID_INDEX on Assigned_Occupancy_Reading (PARENT_SPACE);
CREATE INDEX ASSIGNED_OCCUPANCY_PARENT_ID_TTIME_INDEX ON Assigned_Occupancy_Reading (ORGID, MODULEID, PARENT_SPACE, TTIME);
CREATE INDEX ASSIGNED_OCCUPANCY_TTIME_INDEX ON Assigned_Occupancy_Reading (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS Temperature_Reading (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_SPACE BIGINT NOT NULL,
	TEMPERATURE DOUBLE(9,3) NOT NULL,
	CONSTRAINT TEMPERATURE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TEMPERATURE_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TEMPERATURE_FK_PARENT_SPACE FOREIGN KEY (PARENT_SPACE) REFERENCES BaseSpace (ID)
);
-- Create indexes for Energy_Data table
CREATE INDEX TEMPERATURE_PARENT_ID_INDEX on Temperature_Reading (PARENT_SPACE);
CREATE INDEX TEMPERATURE_PARENT_ID_TTIME_INDEX ON Temperature_Reading (ORGID, MODULEID, PARENT_SPACE, TTIME);
CREATE INDEX TEMPERATURE_TTIME_INDEX ON Temperature_Reading (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS Humidity_Reading (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_SPACE BIGINT NOT NULL,
	HUMIDITY INT NOT NULL,
	CONSTRAINT HUMIDITY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT HUMIDITY_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT HUMIDITY_FK_PARENT_SPACE FOREIGN KEY (PARENT_SPACE) REFERENCES BaseSpace (ID)
);
-- Create indexes for Energy_Data table
CREATE INDEX HUMIDITY_PARENT_ID_INDEX on Humidity_Reading (PARENT_SPACE);
CREATE INDEX HUMIDITY_PARENT_ID_TTIME_INDEX ON Humidity_Reading (ORGID, MODULEID, PARENT_SPACE, TTIME);
CREATE INDEX HUMIDITY_TTIME_INDEX ON Humidity_Reading (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS CO2_Reading (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_SPACE BIGINT NOT NULL,
	CO2 DOUBLE(9,3) NOT NULL,
	CONSTRAINT CO2_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CO2_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT CO2_FK_PARENT_SPACE FOREIGN KEY (PARENT_SPACE) REFERENCES BaseSpace (ID)
);
-- Create indexes for Energy_Data table
CREATE INDEX CO2_PARENT_ID_INDEX on CO2_Reading (PARENT_SPACE);
CREATE INDEX CO2_PARENT_ID_TTIME_INDEX ON CO2_Reading (ORGID, MODULEID, PARENT_SPACE, TTIME);
CREATE INDEX CO2_TTIME_INDEX ON CO2_Reading (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS Set_Point_Reading (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_SPACE BIGINT NOT NULL,
	SET_POINT DOUBLE(9,3) NOT NULL,
	CONSTRAINT SET_POINT_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT SET_POINT_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT SET_POINT_FK_PARENT_SPACE FOREIGN KEY (PARENT_SPACE) REFERENCES BaseSpace (ID)
);
-- Create indexes for Energy_Data table
CREATE INDEX SET_POINT_PARENT_ID_INDEX on Set_Point_Reading (PARENT_SPACE);
CREATE INDEX SET_POINT_PARENT_ID_TTIME_INDEX ON Set_Point_Reading (ORGID, MODULEID, PARENT_SPACE, TTIME);
CREATE INDEX SET_POINT_TTIME_INDEX ON Set_Point_Reading (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS Weather_Reading (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	SUMMARY VARCHAR(100),
	ICON INT(11),
	TEMPERATURE DOUBLE,
	HUMIDITY DOUBLE,
	DEW_POINT DOUBLE,
	PRESSURE DOUBLE,
	APPARENT_TEMPERATURE DOUBLE,
	PRECIPITATION_INTENSITY DOUBLE,
	PRECIPITATION_INTENSITY_ERROR DOUBLE,
	PRECIPITATION_PROBABILITY DOUBLE,
	PRECIPITATION_TYPE INT(11),
	WIND_SPEED DOUBLE,
	WIND_GUST DOUBLE,
	WIND_BEARING DOUBLE,
	CLOUD_COVER DOUBLE,
	UV_INDEX DOUBLE,
	VISIBILITY DOUBLE,
	OZONE DOUBLE,
	NEAREST_STORM_DISTANCE DOUBLE,
	NEAREST_STORM_BEARING DOUBLE,
	CONSTRAINT WEATHER_READING_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WEATHER_READING_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT WEATHER_READING_FK_PARENT_SPACE FOREIGN KEY (PARENT_ID) REFERENCES BaseSpace (ID)
);
-- Create indexes for Weather_Reading table
CREATE INDEX WEATHER_READING_PARENT_ID_INDEX on Weather_Reading (PARENT_ID);
CREATE INDEX WEATHER_READING_PARENT_ID_TTIME_INDEX ON Weather_Reading (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX WEATHER_READING_TTIME_INDEX ON Weather_Reading (ORGID, MODULEID, TTIME);


CREATE TABLE IF NOT EXISTS Weather_Reading_Daily (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	SUMMARY VARCHAR(1000),
	ICON INT(11),
	HUMIDITY DOUBLE,
	DEW_POINT DOUBLE,
	PRESSURE DOUBLE,
	PRECIPITATION_INTENSITY DOUBLE,
	PRECIPITATION_PROBABILITY DOUBLE,
	PRECIPITATION_TYPE INT(11),
    PRECIPITATION_INTENSITY_ERROR DOUBLE,
	WIND_SPEED DOUBLE,
	WIND_GUST DOUBLE,
	WIND_BEARING DOUBLE,
	CLOUD_COVER DOUBLE,
	UV_INDEX DOUBLE,
	VISIBILITY DOUBLE,
	OZONE DOUBLE,
	MOON_PHASE DOUBLE,
	APPARENT_TEMPERATURE_LOW DOUBLE,
    APPARENT_TEMPERATURE_LOW_TIME BIGINT,
    APPARENT_TEMPERATURE_HIGH DOUBLE,
  	APPARENT_TEMPERATURE_HIGH_TIME BIGINT,
  	TEMPERATURE_LOW DOUBLE,
  	TEMPERATURE_LOW_TIME BIGINT,
  	TEMPERATURE_HIGH DOUBLE,
  	TEMPERATURE_HIGH_TIME BIGINT,
  	PRECIPITATION_INTENSITY_MAX DOUBLE,
  	PRECIPITATION_INTENSITY_MAX_TIME BIGINT,
  	SUNRISE_TIME BIGINT,
  	SUNSET_TIME BIGINT,
  	WIND_GUST_TIME BIGINT,
  	UV_INDEX_TIME BIGINT,
	CONSTRAINT WEATHER_READING_DAILY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WEATHER_READING_DAILY_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT WEATHER_READING_DAILY_FK_PARENT_SPACE FOREIGN KEY (PARENT_ID) REFERENCES BaseSpace (ID)
);
-- Create indexes for Weather_Reading table
CREATE INDEX WEATHER_READING_DAILY_PARENT_ID_INDEX on Weather_Reading_Daily (PARENT_ID);
CREATE INDEX WEATHER_READING_DAILY_PARENT_ID_TTIME_INDEX ON Weather_Reading_Daily (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX WEATHER_READING_DAILY_TTIME_INDEX ON Weather_Reading_Daily (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS Weather_Reading_Hourly_Forecast (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	FORECAST_TIME BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	SUMMARY VARCHAR(100),
	ICON INT(11),
	TEMPERATURE DOUBLE,
	HUMIDITY DOUBLE,
	DEW_POINT DOUBLE,
	PRESSURE DOUBLE,
	APPARENT_TEMPERATURE DOUBLE,
	PRECIPITATION_INTENSITY DOUBLE,
	PRECIPITATION_INTENSITY_ERROR DOUBLE,
	PRECIPITATION_PROBABILITY DOUBLE,
	PRECIPITATION_TYPE INT(11),
	WIND_SPEED DOUBLE,
	WIND_GUST DOUBLE,
	WIND_BEARING DOUBLE,
	CLOUD_COVER DOUBLE,
	UV_INDEX DOUBLE,
	VISIBILITY DOUBLE,
	OZONE DOUBLE,
	CONSTRAINT WEATHER_READING_HOURLY_FORECAST_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WEATHER_READING_HOURLY_FORECAST_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT WEATHER_READING_HOURLY_FORECAST_FK_PARENT_SPACE FOREIGN KEY (PARENT_ID) REFERENCES BaseSpace (ID)
);
-- Create indexes for Weather_Reading table
CREATE INDEX WEATHER_READING_HOURLY_FORECAST_PARENT_ID_INDEX on Weather_Reading_Hourly_Forecast (PARENT_ID);
CREATE INDEX WEATHER_READING_HOURLY_FORECAST_PARENT_ID_TTIME_INDEX ON Weather_Reading_Hourly_Forecast (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX WEATHER_READING_HOURLY_FORECAST_TTIME_INDEX ON Weather_Reading_Hourly_Forecast (ORGID, MODULEID, TTIME);


CREATE TABLE IF NOT EXISTS Weather_Reading_Daily_Forecast (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	FORECAST_TIME BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	SUMMARY VARCHAR(1000),
	ICON INT(11),
	HUMIDITY DOUBLE,
	DEW_POINT DOUBLE,
	PRESSURE DOUBLE,
	PRECIPITATION_INTENSITY DOUBLE,
	PRECIPITATION_PROBABILITY DOUBLE,
	PRECIPITATION_TYPE INT(11),
    PRECIPITATION_INTENSITY_ERROR DOUBLE,
	WIND_SPEED DOUBLE,
	WIND_GUST DOUBLE,
	WIND_BEARING DOUBLE,
	CLOUD_COVER DOUBLE,
	UV_INDEX DOUBLE,
	VISIBILITY DOUBLE,
	OZONE DOUBLE,
	MOON_PHASE DOUBLE,
	APPARENT_TEMPERATURE_LOW DOUBLE,
    APPARENT_TEMPERATURE_LOW_TIME BIGINT,
    APPARENT_TEMPERATURE_HIGH DOUBLE,
  	APPARENT_TEMPERATURE_HIGH_TIME BIGINT,
  	TEMPERATURE_LOW DOUBLE,
  	TEMPERATURE_LOW_TIME BIGINT,
  	TEMPERATURE_HIGH DOUBLE,
  	TEMPERATURE_HIGH_TIME BIGINT,
  	PRECIPITATION_INTENSITY_MAX DOUBLE,
  	PRECIPITATION_INTENSITY_MAX_TIME BIGINT,
  	SUNRISE_TIME BIGINT,
  	SUNSET_TIME BIGINT,
  	WIND_GUST_TIME BIGINT,
  	UV_INDEX_TIME BIGINT,
	CONSTRAINT WEATHER_READING_DAILY_FORECAST_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WEATHER_READING_DAILY_FORECAST_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT WEATHER_READING_DAILY_FORECAST_FK_PARENT_SPACE FOREIGN KEY (PARENT_ID) REFERENCES BaseSpace (ID)
);
-- Create indexes for Weather_Reading table
CREATE INDEX WEATHER_READING_DAILY_FORECAST_PARENT_ID_INDEX on Weather_Reading_Daily_Forecast (PARENT_ID);
CREATE INDEX WEATHER_READING_DAILY_FORECAST_PARENT_ID_TTIME_INDEX ON Weather_Reading_Daily_Forecast (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX WEATHER_READING_DAILY_FORECAST_TTIME_INDEX ON Weather_Reading_Daily_Forecast (ORGID, MODULEID, TTIME);


CREATE TABLE IF NOT EXISTS Psychrometric_Reading (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	DEWPOINT_TEMPERATURE DOUBLE,
	WETBULB_TEMPERATURE DOUBLE,
	ENTHALPY DOUBLE,
	CONSTRAINT PSYCHROMETRIC_READING_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT PSYCHROMETRIC_READING_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT PSYCHROMETRIC_READING_FK_PARENT_SPACE FOREIGN KEY (PARENT_ID) REFERENCES BaseSpace (ID)
);
-- Create indexes for Psychrometric_Reading table
CREATE INDEX PSYCHROMETRIC_READING_PARENT_ID_INDEX on Psychrometric_Reading (PARENT_ID);
CREATE INDEX PSYCHROMETRIC_READING_PARENT_ID_TTIME_INDEX ON Psychrometric_Reading (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX PSYCHROMETRIC_READING_TTIME_INDEX ON Psychrometric_Reading (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS CDD_Reading (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	CDD DOUBLE,
	CONSTRAINT CDD_READING_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CDD_READING_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT CDD_READING_FK_PARENT_SPACE FOREIGN KEY (PARENT_ID) REFERENCES BaseSpace (ID)
);
-- Create indexes for CDD_Reading table
CREATE INDEX CDD_READING_PARENT_ID_INDEX on CDD_Reading (PARENT_ID);
CREATE INDEX CDD_READING_PARENT_ID_TTIME_INDEX ON CDD_Reading (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX CDD_READING_TTIME_INDEX ON CDD_Reading (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS HDD_Reading (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	HDD DOUBLE,
	CONSTRAINT HDD_READING_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT HDD_READING_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT HDD_READING_FK_PARENT_SPACE FOREIGN KEY (PARENT_ID) REFERENCES BaseSpace (ID)
);
-- Create indexes for CDD_Reading table
CREATE INDEX HDD_READING_PARENT_ID_INDEX on HDD_Reading (PARENT_ID);
CREATE INDEX HDD_READING_PARENT_ID_TTIME_INDEX ON HDD_Reading (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX HDD_READING_TTIME_INDEX ON HDD_Reading (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS WDD_Reading (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	WDD DOUBLE,
	CONSTRAINT WDD_READING_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WDD_READING_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT WDD_READING_FK_PARENT_SPACE FOREIGN KEY (PARENT_ID) REFERENCES BaseSpace (ID)
);
-- Create indexes for CDD_Reading table
CREATE INDEX WDD_READING_PARENT_ID_INDEX on WDD_Reading (PARENT_ID);
CREATE INDEX WDD_READING_PARENT_ID_TTIME_INDEX ON WDD_Reading (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX WDD_READING_TTIME_INDEX ON WDD_Reading (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS BaseSpace_Photos (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_SPACE BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	PHOTO_ID BIGINT NOT NULL,
	CONSTRAINT BASESPACE_PHOTOS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT BASESPACE_PHOTOS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT BASESPACE_PHOTOS_FK_PARENT_SPACE FOREIGN KEY (PARENT_SPACE) REFERENCES BaseSpace (ID),
	CONSTRAINT BASESPACE_PHOTOS_FK_PHOTO_ID FOREIGN KEY (PHOTO_ID) REFERENCES FacilioFile (FILE_ID)
);

CREATE TABLE IF NOT EXISTS BaseSpace_Attachments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_SPACE BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	FILE_ID BIGINT NOT NULL,
	CONSTRAINT BASESPACE_ATTACHEMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT BASESPACE_ATTACHEMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT BASESPACE_ATTACHEMENTS_FK_PARENT_SPACE FOREIGN KEY (PARENT_SPACE) REFERENCES BaseSpace (ID),
	CONSTRAINT BASESPACE_ATTACHEMENTS_FK_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile (FILE_ID)
);

CREATE TABLE IF NOT EXISTS BaseSpace_Notes (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	CREATED_BY BIGINT,
	CREATED_TIME BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000) NOT NULL,
	CONSTRAINT BASESPACE_NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT BASESPACE_NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT BASESPACE_NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT BASESPACE_NOTES_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES BaseSpace (ID)
);




CREATE TABLE IF NOT EXISTS `Groups` (
	GROUPID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	GROUP_NAME VARCHAR(255),
	GROUP_EMAIL VARCHAR(255),
	GROUP_DESC VARCHAR(1000),
	IS_ACTIVE BOOLEAN NOT NULL,
	CREATED_TIME BIGINT,
	CREATED_BY BIGINT,
	PARENT BIGINT,
	SITE_ID BIGINT,
	CONSTRAINT GROUPS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT GROUPS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site (ID)
);

CREATE TABLE IF NOT EXISTS `GroupMembers` (
	MEMBERID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	GROUPID BIGINT,
	ORG_USERID BIGINT,
	MEMBER_ROLE INT,
	CONSTRAINT GROUP_MEMBERS_FK_ORGID FOREIGN KEY (GROUPID) REFERENCES `Groups`(GROUPID) ON DELETE CASCADE,
	CONSTRAINT GROUP_MEMBERS_FK_USERID FOREIGN KEY (ORG_USERID) REFERENCES ORG_Users(ORG_USERID) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS Forms (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	NAME VARCHAR(255) NOT NULL,
	DISPLAYNAME VARCHAR(255) NOT NULL,
	DESCRIPTION VARCHAR(1000),
	MODULEID BIGINT NOT NULL,
	FORM_TYPE TINYINT NOT NULL,
	LABEL_POSITION TINYINT NOT NULL,
	SHOW_IN_MOBILE BOOLEAN DEFAULT TRUE,
	HIDE_IN_LIST BOOLEAN DEFAULT FALSE,
	CONSTRAINT FORMS_UNIQUE UNIQUE (ORGID, MODULEID, NAME),
	CONSTRAINT FORMS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT FORMS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT FORMS_FK_SITEID FOREIGN KEY (SITE_ID) REFERENCES Site (ID)
);

CREATE TABLE IF NOT EXISTS Form_Section (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	FORMID BIGINT NOT NULL,
	NAME VARCHAR(100),
	SEQUENCE_NUMBER TINYINT NOT NULL,
	SHOW_LABEL BOOLEAN DEFAULT FALSE,
	CONSTRAINT FORMSECTION_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT FORMSECTION_FORMID FOREIGN KEY (FORMID) REFERENCES Forms(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Form_Fields (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	FORMID BIGINT NOT NULL,
	SECTIONID BIGINT,
	DISPLAYNAME VARCHAR(255) NOT NULL,
	NAME VARCHAR(100), -- Only if no Facilio Field available
	FIELDID BIGINT,
	DISPLAY_TYPE TINYINT NOT NULL,
	REQUIRED BOOLEAN DEFAULT false NOT NULL,
	SEQUENCE_NUMBER TINYINT NOT NULL,
	SPAN TINYINT NOT NULL DEFAULT 1,
	DEFAULT_VALUE VARCHAR(500),
	CONSTRAINT FORMFIELDS_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT FORMFIELDS_FORMID FOREIGN KEY (FORMID) REFERENCES Forms(ID) ON DELETE CASCADE,
	CONSTRAINT FORMFIELDS_SECTIONID FOREIGN KEY (SECTIONID) REFERENCES Form_Section(ID) ON DELETE CASCADE,
	CONSTRAINT FORMFIELDS_FIELDID FOREIGN KEY (FIELDID) REFERENCES Fields(FIELDID),
	CONSTRAINT FORMFIELDS_FK_SITEID FOREIGN KEY (SITE_ID) REFERENCES Site (ID)
);

CREATE TABLE IF NOT EXISTS Building (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	LOCATION_ID BIGINT,
	MANAGED_BY BIGINT,
	GROSS_FLOOR_AREA DOUBLE(10,3),
	NO_OF_FLOORS INT,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	DECIMAL_CF1 DOUBLE(9,3),
	DECIMAL_CF2 DOUBLE(9,3),
	DECIMAL_CF3 DOUBLE(9,3),
	DECIMAL_CF4 DOUBLE(9,3),
	DECIMAL_CF5 DOUBLE(9,3),
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,
	SITE_ID BIGINT NOT NULL,
	CONSTRAINT BUILDING_FK_ID FOREIGN KEY (ID) REFERENCES BaseSpace(ID) ON DELETE CASCADE,
	CONSTRAINT BUILDING_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT BUILDING_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT BUILDING_FK_LOCATION_ID FOREIGN KEY (LOCATION_ID) REFERENCES Locations(ID),
	CONSTRAINT BUILDING_FK_MANAGED_BY FOREIGN KEY (MANAGED_BY) REFERENCES ORG_Users (ORG_USERID),
	CONSTRAINT BUILDING_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);




CREATE TABLE IF NOT EXISTS Agent_Data (
        ID bigint(20) AUTO_INCREMENT PRIMARY KEY,
        DEVICE_DETAILS varchar(500),
        Conn_status tinyint(1),
        ORGID bigint(20) NOT NULL,
        NAME varchar(250) NOT NULL UNIQUE,
        DISPLAY_NAME varchar(250) DEFAULT NULL,
        DATA_INTERVAL bigint(20) DEFAULT 10 not null,
        TYPE INT,
        VERSION varchar(20),
        LAST_MODIFIED_TIME bigint(20),
        CREATED_TIME bigint(20),
        LAST_DATA_RECEIVED_TIME bigint(30),
        STATE int(1),
        SITE_ID bigint(20),
        WRITABLE tinyint DEFAULT 0,
        DELETED_TIME BIGINT,
        CONSTRAINT AGENT_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
        CONSTRAINT AGENT_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)


);
CREATE TABLE IF NOT EXISTS Agent_Log(
        ID bigint(20) AUTO_INCREMENT PRIMARY KEY,
        ORGID bigint(20) NOT NULL,
        AGENT_ID BIGINT(20),
        DEVICE_ID varchar(20),
        COMMAND BIGINT(1),
        COMMAND_STATUS BIGINT(1),
        MSG_ID BIGINT(20),
        CONTENT VARCHAR(500),
        TIME bigint(30),
    CONSTRAINT Agent_Log_FK_AGENT_ID FOREIGN KEY (AGENT_ID) REFERENCES Agent_Data(ID),
    CONSTRAINT Agent_Log_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Agent_Metrics(
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    ORGID BIGINT NOT NULL,
	AGENT_ID BIGINT NOT NULL,
	PUBLISH_TYPE INT NOT NULL,
    NO_OF_MSGS BIGINT(20),
    SIZE BIGINT(30),
    LAST_UPDATED_TIME BIGINT(20),
    CREATED_TIME BIGINT(20),
    CONSTRAINT Agent_METRICS_FK_AGENT_ID FOREIGN KEY (AGENT_ID) REFERENCES Agent_Data(ID),
    CONSTRAINT AGENT_METRICS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);
CREATE TABLE IF NOT EXISTS Controller (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(250) NOT NULL,
	DISPLAY_NAME VARCHAR(250) DEFAULT NULL,
	MAC_ADDR VARCHAR(100) NOT NULL,
	DATA_INTERVAL INT,
	BATCHES_PER_CYCLE TINYINT,
	SITE_ID BIGINT,
	AGENT_ID BIGINT,
	WRITABLE tinyint DEFAULT 0,
	ACTIVE BOOLEAN NOT NULL,
	CONTROLLER_TYPE INT,
	DESTINATION_ID VARCHAR(200),
	INSTANCE_NUMBER BIGINT,
	BROADCAST_IP VARCHAR(100),
	SUBNET_PREFIX  INT,
	NETWORK_NUMBER BIGINT,
	CONTROLLER_PROPS VARCHAR(1000),
	CREATED_TIME BIGINT NOT NULL,
	LAST_MODIFIED_TIME BIGINT NOT NULL,
	LAST_DATA_RECEIVED_TIME BIGINT,
	DELETED_TIME BIGINT,
	CONSTRAINT CONTROLLER_FK_AGENT_ID FOREIGN KEY (AGENT_ID) REFERENCES Agent_Data(ID),
	CONSTRAINT CONTROLLER_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CONTROLLER_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID),
	CONSTRAINT CONTROLLER_UNIQUE_ORGID_MAC_ADDR UNIQUE(ORGID, MAC_ADDR)
);
ALTER TABLE Resources ADD CONSTRAINT RESOURCES_FK_CONTROLLER_ID FOREIGN KEY (CONTROLLER_ID) REFERENCES Controller (ID) ON DELETE SET NULL;


CREATE TABLE IF NOT EXISTS Controller_Activity (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	CONTROLLER_MAC_ADDR VARCHAR(100) NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	RECORD_TIME BIGINT NOT NULL,
	CONSTRAINT CONTROLLER_ACTIVITY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CONTROLLER_ACTIVITY_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE INDEX CONTROLLER_ACTIVITY_ORG_MAC_ADDR_TIME ON Controller_Activity (ORGID,CONTROLLER_MAC_ADDR,RECORD_TIME);

CREATE TABLE IF NOT EXISTS Controller_Activity_Records ( -- Having separate table because Controller_Activity will be queried frequently
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	CURRENT_RECORDS LONGTEXT NOT NULL,
	CONSTRAINT CONTROLLER_ACTIVITY_RECORDS_FK_ID FOREIGN KEY (ID) REFERENCES Controller_Activity(ID) ON DELETE CASCADE,
	CONSTRAINT CONTROLLER_ACTIVITY_RECORDS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CONTROLLER_ACTIVITY_RECORDS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)	
);

CREATE TABLE IF NOT EXISTS Controller_Activity_Watcher (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	RECORD_TIME BIGINT NOT NULL,
	DATA_INTERVAL INT NOT NULL,
	LEVEL TINYINT NOT NULL,
	COMPLETION_STATUS BOOLEAN,
	CONSTRAINT CONTROLLER_ACTIVITY_WATCHER_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CONTROLLER_ACTIVITY_WATCHER_UNIQUE_RECORD UNIQUE(ORGID,RECORD_TIME,DATA_INTERVAL, LEVEL)
);

CREATE TABLE IF NOT EXISTS Controller_Building_Rel (
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	CONTROLLER_ID BIGINT NOT NULL,
	BUILDING_ID BIGINT NOT NULL,
	CONSTRAINT CONTROLLER_BUILDING_REL_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CONTROLLER_BUILDING_REL_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID),
	CONSTRAINT CONTROLLER_BUILDING_REL_FK_CONTROLLER_ID FOREIGN KEY (CONTROLLER_ID) REFERENCES Controller(ID) ON DELETE CASCADE,
	CONSTRAINT CONTROLLER_BUILDING_REL_FK_BUILDING_ID FOREIGN KEY (BUILDING_ID) REFERENCES Building(ID)
);

CREATE TABLE IF NOT EXISTS Publish_Data (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	CONTROLLER_ID BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	ACKNOWLEDGE_TIME BIGINT,
	RESPONSE_JSON TEXT DEFAULT NULL,
	CONSTRAINT PUBLISH_DATA_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT PUBLISH_DATA_FK_CONTROLLER_ID FOREIGN KEY (CONTROLLER_ID) REFERENCES Controller(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Publish_Message (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	SENT_TIME BIGINT NOT NULL,
	ACKNOWLEDGE_TIME BIGINT,
	MSG_DATA VARCHAR (5000) NOT NULL,
	RESPONSE_JSON TEXT DEFAULT NULL,
	CONSTRAINT PUBLISH_MESSAGE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT PUBLISH_MESSAGE_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Publish_Data(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Floor (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	FLOOR_LEVEL TINYINT,
	FLOOR_PLAN_ID BIGINT,
	FLOOR_PLAN_INFO VARCHAR(5000),
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	DECIMAL_CF1 DOUBLE(9,3),
	DECIMAL_CF2 DOUBLE(9,3),
	DECIMAL_CF3 DOUBLE(9,3),
	DECIMAL_CF4 DOUBLE(9,3),
	DECIMAL_CF5 DOUBLE(9,3),
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,
	SITE_ID BIGINT NOT NULL,
	CONSTRAINT FLOOR_FK_ID FOREIGN KEY (ID) REFERENCES BaseSpace(ID) ON DELETE CASCADE,
	CONSTRAINT FLOOR_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT FLOOR_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT FLOOR_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID),
	CONSTRAINT FLOOR_FK_FLOOR_PLAN_ID FOREIGN KEY (FLOOR_PLAN_ID) REFERENCES FacilioFile (FILE_ID)
);

CREATE TABLE IF NOT EXISTS Space_Category (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50),
	DESCRIPTION VARCHAR(1000),
	IS_COMMON_AREA BOOLEAN,
	CONSTRAINT SPACE_CATEGORY_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT SPACE_CATEGORY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Space_Category_Readings (
	PARENT_CATEGORY_ID BIGINT,
	ORGID BIGINT NOT NULL,
	READING_MODULE_ID BIGINT,
	PRIMARY KEY (PARENT_CATEGORY_ID, READING_MODULE_ID),
	CONSTRAINT SPACE_CATEGORY_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT SPACE_CATEGORY_READINGS_PARENT_FK FOREIGN KEY (PARENT_CATEGORY_ID) REFERENCES Space_Category(ID),
	CONSTRAINT SPACE_CATEGORY_READINGS_CHILD_FK FOREIGN KEY (READING_MODULE_ID) REFERENCES Modules(MODULEID)
);

CREATE TABLE IF NOT EXISTS Space (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SPACE_CATEGORY_ID BIGINT,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	DECIMAL_CF1 DOUBLE(9,3),
	DECIMAL_CF2 DOUBLE(9,3),
	DECIMAL_CF3 DOUBLE(9,3),
	DECIMAL_CF4 DOUBLE(9,3),
	DECIMAL_CF5 DOUBLE(9,3),
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,
	SITE_ID BIGINT NOT NULL,
	CONSTRAINT SPACE_FK_ID FOREIGN KEY (ID) REFERENCES BaseSpace(ID) ON DELETE CASCADE,
	CONSTRAINT SPACE_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT SPACE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT SPACE_FK_CATEGORY_ID FOREIGN KEY (SPACE_CATEGORY_ID) REFERENCES Space_Category(ID),
	CONSTRAINT SPACE_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS Zone (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SITE_ID BIGINT,
	TENANT_ZONE TINYINT,
	CONSTRAINT ZONE_FK_ID FOREIGN KEY (ID) REFERENCES BaseSpace(ID) ON DELETE CASCADE,
	CONSTRAINT ZONE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ZONE_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ZONE_FK_SITEID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS Zone_Space (
	ZONE_ID BIGINT,
	ORGID BIGINT NOT NULL,
	BASE_SPACE_ID BIGINT,
	IS_IMMEDIATE TINYINT,
	CONSTRAINT ZONE_SPACE_FK_ZONE_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID), 
	CONSTRAINT ZONE_SPACE_FK_ZONE_ID FOREIGN KEY (ZONE_ID) REFERENCES Zone(ID) ON DELETE CASCADE,
	CONSTRAINT ZONE_SPACE_FK_BASE_SPACE_ID FOREIGN KEY (BASE_SPACE_ID) REFERENCES BaseSpace(ID)
);

CREATE TABLE IF NOT EXISTS Asset_Types (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50),
	IS_MOVABLE BOOLEAN,
	CONSTRAINT ASSET_TYPES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ASSET_TYPES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID)
);

CREATE TABLE IF NOT EXISTS Asset_Categories (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(255),
	CATEGORY_TYPE TINYINT NOT NULL,
	PARENT_CATEGORY_ID BIGINT,
	ASSET_MODULEID BIGINT,
	CONSTRAINT ASSET_CATEGORIES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ASSET_CATEGORIES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ASSET_CATEGORIES_FK_PARENT_CATEGORY_ID FOREIGN KEY (PARENT_CATEGORY_ID) REFERENCES Asset_Categories(ID),
	CONSTRAINT ASSET_CATEGORIES_FK_ASSET_MODULEID FOREIGN KEY (ASSET_MODULEID) REFERENCES Modules(MODULEID)
);

CREATE TABLE IF NOT EXISTS Asset_Category_Readings (
	ORGID BIGINT NOT NULL,
	PARENT_CATEGORY_ID BIGINT,
	READING_MODULE_ID BIGINT,
	PRIMARY KEY (PARENT_CATEGORY_ID, READING_MODULE_ID),
	CONSTRAINT ASSET_CATEGORY_READINGS_ORGID_FK FOREIGN KEY  (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ASSET_CATEGORY_READINGS_PARENT_FK FOREIGN KEY (PARENT_CATEGORY_ID) REFERENCES Asset_Categories(ID),
	CONSTRAINT ASSET_CATEGORY_READINGS_CHILD_FK FOREIGN KEY (READING_MODULE_ID) REFERENCES Modules(MODULEID)
);

CREATE TABLE IF NOT EXISTS Asset_Departments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50),
	CONSTRAINT ASSET_DEPARTMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ASSET_DEPARTMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID)
);

CREATE TABLE IF NOT EXISTS Assets (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	STATE TINYINT,
	ASSET_TYPE BIGINT,
	CATEGORY BIGINT,
	PARENT_ASSET_ID BIGINT,
	DEPARTMENT_ID BIGINT,
	MANUFACTURER VARCHAR(100),
	MODEL VARCHAR(100),
	SERIAL_NUMBER VARCHAR(100),
	TAG_NUMBER VARCHAR(100),
	PART_NUMBER VARCHAR(100),
	UNIT_PRICE INT,
	SUPPLIER VARCHAR(100),
	PURCHASED_DATE BIGINT,
	RETIRE_DATE BIGINT,
	WARRANTY_EXPIRY_DATE BIGINT,
	LOCAL_ID INT,
	HIDE_TO_CUSTOMER BOOLEAN,
	GEO_LOCATION VARCHAR(100),
	CURRENT_LOCATION VARCHAR(100),
	BOUNDARY_RADIUS INT,
	IS_DESIGNATED_LOCATION BOOLEAN,
	DISTANCE_MOVED DOUBLE,
	GEO_TRACKING_ENABLED BOOLEAN,
	IDENTIFIED_LOCATION BIGINT,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	STRING_CF6 VARCHAR(50),
	STRING_CF7 VARCHAR(50),
	STRING_CF8 VARCHAR(50),
	STRING_CF9 VARCHAR(50),
	STRING_CF10 VARCHAR(50),
	STRING_CF11 VARCHAR(50),
	STRING_CF12 VARCHAR(50),
	STRING_CF13 VARCHAR(50),
	STRING_CF14 VARCHAR(50),
	STRING_CF15 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	NUMBER_CF6 BIGINT,
	NUMBER_CF7 BIGINT,
	NUMBER_CF8 BIGINT,
	NUMBER_CF9 BIGINT,
	NUMBER_CF10 BIGINT,
	NUMBER_CF11 BIGINT,
	NUMBER_CF12 BIGINT,
	NUMBER_CF13 BIGINT,
	NUMBER_CF14 BIGINT,
	NUMBER_CF15 BIGINT,
	DECIMAL_CF1 DOUBLE,
	DECIMAL_CF2 DOUBLE,
	DECIMAL_CF3 DOUBLE,
	DECIMAL_CF4 DOUBLE,
	DECIMAL_CF5 DOUBLE,
	DECIMAL_CF6 DOUBLE,
	DECIMAL_CF7 DOUBLE,
	DECIMAL_CF8 DOUBLE,
	DECIMAL_CF9 DOUBLE,
	DECIMAL_CF10 DOUBLE,
	DECIMAL_CF11 DOUBLE,
	DECIMAL_CF12 DOUBLE,
	DECIMAL_CF13 DOUBLE,
	DECIMAL_CF14 DOUBLE,
	DECIMAL_CF15 DOUBLE,
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	BOOLEAN_CF6 BOOLEAN,
	BOOLEAN_CF7 BOOLEAN,
	BOOLEAN_CF8 BOOLEAN,
	BOOLEAN_CF9 BOOLEAN,
	BOOLEAN_CF10 BOOLEAN,
	BOOLEAN_CF11 BOOLEAN,
	BOOLEAN_CF12 BOOLEAN,
	BOOLEAN_CF13 BOOLEAN,
	BOOLEAN_CF14 BOOLEAN,
	BOOLEAN_CF15 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATE_CF6 BIGINT,
	DATE_CF7 BIGINT,
	DATE_CF8 BIGINT,
	DATE_CF9 BIGINT,
	DATE_CF10 BIGINT,
	DATE_CF11 BIGINT,
	DATE_CF12 BIGINT,
	DATE_CF13 BIGINT,
	DATE_CF14 BIGINT,
	DATE_CF15 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,
	DATETIME_CF6 BIGINT,
	DATETIME_CF7 BIGINT,
	DATETIME_CF8 BIGINT,
	DATETIME_CF9 BIGINT,
	DATETIME_CF10 BIGINT,
	DATETIME_CF11 BIGINT,
	DATETIME_CF12 BIGINT,
	DATETIME_CF13 BIGINT,
	DATETIME_CF14 BIGINT,
	DATETIME_CF15 BIGINT,
	ENUM_CF1 INTEGER,
	ENUM_CF2 INTEGER,
	ENUM_CF3 INTEGER,
	ENUM_CF4 INTEGER,
	ENUM_CF5 INTEGER,
	SITE_ID BIGINT NOT NULL,
	CONSTRAINT ASSET_FK_ID FOREIGN KEY (ID) REFERENCES Resources(ID) ON DELETE CASCADE,
	CONSTRAINT ASSET_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ASSET_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ASSET_FK_ASSET_TYPE FOREIGN KEY (ASSET_TYPE) REFERENCES Asset_Types(ID) ON DELETE SET NULL,
	CONSTRAINT ASSET_FK_CATEGORY FOREIGN KEY (CATEGORY) REFERENCES Asset_Categories(ID),
	CONSTRAINT ASSET_FK_PARENT_ASSET_ID FOREIGN KEY (PARENT_ASSET_ID) REFERENCES Assets(ID),
	CONSTRAINT ASSET_FK_DEPARTMENT_ID FOREIGN KEY (DEPARTMENT_ID) REFERENCES Asset_Departments(ID) ON DELETE SET NULL,
	CONSTRAINT ASSET_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID),
	CONSTRAINT ASSET_FK_IDENTIFIED_LOCATION FOREIGN KEY (IDENTIFIED_LOCATION) REFERENCES Site(ID)
);

CREATE INDEX ASSETS_LOCAL_ID ON Assets (ORGID,MODULEID,LOCAL_ID);
CREATE INDEX ASSETS_TYPE ON Assets (ORGID,MODULEID,ASSET_TYPE);

CREATE TABLE IF NOT EXISTS Asset_Activity (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SYS_CREATED_TIME BIGINT,
	SYS_MODIFIED_TIME BIGINT,
	SYS_CREATED_BY BIGINT,
	SYS_MODIFIED_BY BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	ACTIVITY_TYPE TINYINT NOT NULL,
	DONE_BY_ID BIGINT NOT NULL,
	INFO VARCHAR(5000),
	CONSTRAINT ASSET_ACTIVITY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ASSET_ACTIVITY_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ASSET_ACTIVITY_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Assets(ID),
	CONSTRAINT ASSET_ACTIVITY_FK_DONE_BY_ID FOREIGN KEY (DONE_BY_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT ASSET_ACTIVITY_FK_SYS_CREATED_BY FOREIGN KEY (SYS_CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT ASSET_ACTIVITY_FK_SYS_MODIFIED_BY FOREIGN KEY (SYS_MODIFIED_BY) REFERENCES ORG_Users(ORG_USERID)
);

CREATE TABLE IF NOT EXISTS AssetCustomModuleData (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	MODULEID BIGINT NOT NULL,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	STRING_CF6 VARCHAR(50),
	STRING_CF7 VARCHAR(50),
	STRING_CF8 VARCHAR(50),
	STRING_CF9 VARCHAR(50),
	STRING_CF10 VARCHAR(50),
	STRING_CF11 VARCHAR(50),
	STRING_CF12 VARCHAR(50),
	STRING_CF13 VARCHAR(50),
	STRING_CF14 VARCHAR(50),
	STRING_CF15 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	NUMBER_CF6 BIGINT,
	NUMBER_CF7 BIGINT,
	NUMBER_CF8 BIGINT,
	NUMBER_CF9 BIGINT,
	NUMBER_CF10 BIGINT,
	NUMBER_CF11 BIGINT,
	NUMBER_CF12 BIGINT,
	NUMBER_CF13 BIGINT,
	NUMBER_CF14 BIGINT,
	NUMBER_CF15 BIGINT,
	DECIMAL_CF1 DOUBLE,
	DECIMAL_CF2 DOUBLE,
	DECIMAL_CF3 DOUBLE,
	DECIMAL_CF4 DOUBLE,
	DECIMAL_CF5 DOUBLE,
	DECIMAL_CF6 DOUBLE,
	DECIMAL_CF7 DOUBLE,
	DECIMAL_CF8 DOUBLE,
	DECIMAL_CF9 DOUBLE,
	DECIMAL_CF10 DOUBLE,
	DECIMAL_CF11 DOUBLE,
	DECIMAL_CF12 DOUBLE,
	DECIMAL_CF13 DOUBLE,
	DECIMAL_CF14 DOUBLE,
	DECIMAL_CF15 DOUBLE,
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	BOOLEAN_CF6 BOOLEAN,
	BOOLEAN_CF7 BOOLEAN,
	BOOLEAN_CF8 BOOLEAN,
	BOOLEAN_CF9 BOOLEAN,
	BOOLEAN_CF10 BOOLEAN,
	BOOLEAN_CF11 BOOLEAN,
	BOOLEAN_CF12 BOOLEAN,
	BOOLEAN_CF13 BOOLEAN,
	BOOLEAN_CF14 BOOLEAN,
	BOOLEAN_CF15 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATE_CF6 BIGINT,
	DATE_CF7 BIGINT,
	DATE_CF8 BIGINT,
	DATE_CF9 BIGINT,
	DATE_CF10 BIGINT,
	DATE_CF11 BIGINT,
	DATE_CF12 BIGINT,
	DATE_CF13 BIGINT,
	DATE_CF14 BIGINT,
	DATE_CF15 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,
	DATETIME_CF6 BIGINT,
	DATETIME_CF7 BIGINT,
	DATETIME_CF8 BIGINT,
	DATETIME_CF9 BIGINT,
	DATETIME_CF10 BIGINT,
	DATETIME_CF11 BIGINT,
	DATETIME_CF12 BIGINT,
	DATETIME_CF13 BIGINT,
	DATETIME_CF14 BIGINT,
	DATETIME_CF15 BIGINT,
	ENUM_CF1 INTEGER,
	ENUM_CF2 INTEGER,
	ENUM_CF3 INTEGER,
	ENUM_CF4 INTEGER,
	ENUM_CF5 INTEGER,
	CONSTRAINT ACM_DATA_FK_ID FOREIGN KEY (ID) REFERENCES Assets(ID) ON DELETE CASCADE,
	CONSTRAINT ACM_DATA_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ACM_DATA_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID)
	);
	
CREATE TABLE IF NOT EXISTS Work_Order_Activity (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SYS_CREATED_TIME BIGINT,
	SYS_MODIFIED_TIME BIGINT,
	SYS_CREATED_BY BIGINT,
	SYS_MODIFIED_BY BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	ACTIVITY_TYPE TINYINT NOT NULL,
	DONE_BY_ID BIGINT NOT NULL,
	INFO VARCHAR(5000),
	CONSTRAINT WORK_ORDER_ACTIVITY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WORK_ORDER_ACTIVITY_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT WORK_ORDER_ACTIVITY_FK_DONE_BY_ID FOREIGN KEY (DONE_BY_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT WORK_ORDER_ACTIVITY_FK_SYS_CREATED_BY FOREIGN KEY (SYS_CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT WORK_ORDER_ACTIVITY_FK_SYS_MODIFIED_BY FOREIGN KEY (SYS_MODIFIED_BY) REFERENCES ORG_Users(ORG_USERID)
);

CREATE TABLE IF NOT EXISTS Energy_Meter_Purpose (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	CONSTRAINT ENERGY_METER_PURPOSE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ENERGY_METER_PURPOSE_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID)
);

CREATE TABLE IF NOT EXISTS Energy_Meter (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PURPOSE_ID BIGINT,
	IS_ROOT BOOLEAN,
	PURPOSE_SPACE_ID BIGINT,
	IS_VIRTUAL BOOLEAN,
	CHILD_METER_EXPRESSION VARCHAR(100),
	SITE_ID BIGINT NOT NULL,
	CONSTRAINT ENERGY_METER_FK_ID FOREIGN KEY (ID) REFERENCES Assets(ID) ON DELETE CASCADE,
	CONSTRAINT ENERGY_METER_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ENERGY_METER_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ENERGY_METER_FK_PURPOSE_ID FOREIGN KEY (PURPOSE_ID) REFERENCES Energy_Meter_Purpose(ID),
	CONSTRAINT ENERGY_METER_FK_PURPOSE_SPACE_ID FOREIGN KEY (PURPOSE_SPACE_ID) REFERENCES BaseSpace(ID),
	CONSTRAINT ENERGY_METER_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(id)
);

CREATE TABLE IF NOT EXISTS Virtual_Energy_Meter_Rel (
	VIRTUAL_METER_ID BIGINT,
	ORGID BIGINT NOT NULL,
	CHILD_METER_ID BIGINT,
	PRIMARY KEY (VIRTUAL_METER_ID, CHILD_METER_ID),
	CONSTRAINT VIRTUAL_ENERGY_METER_REL_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT VIRTUAL_ENERGY_METER_REL_METER_ID FOREIGN KEY (VIRTUAL_METER_ID) REFERENCES Energy_Meter(ID) ON DELETE CASCADE,
	CONSTRAINT VIRTUAL_ENERGY_METER_REL_CHILD_ID FOREIGN KEY (CHILD_METER_ID) REFERENCES Energy_Meter(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Hvac (
	ID BIGINT PRIMARY KEY, 
	ORGID BIGINT NOT NULL, 
	MODULEID BIGINT NOT NULL, 
	SITE_ID BIGINT, 
	CONSTRAINT HVAC_FK_ID FOREIGN KEY (ID) REFERENCES Assets(ID) ON DELETE CASCADE, 
	CONSTRAINT HVAC_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID), 
	CONSTRAINT HVAC_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT HVAC_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS Chiller (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SITE_ID BIGINT NOT NULL,
	CONSTRAINT CHILLER_FK_ID FOREIGN KEY (ID) REFERENCES Assets(ID) ON DELETE CASCADE,
	CONSTRAINT CHILLER_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CHILLER_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT CHILLER_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS Chiller_Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	OUT_DOOR_TEMPERATURE DOUBLE,
	RETURN_TEMPERATURE DOUBLE,
	SUPPLY_TEMPERATURE DOUBLE,
	CHILLER_SETPOINT DOUBLE,
	CHILLED_WATER_RETURN DOUBLE,
	CONTROL_POINT DOUBLE,
	CIRCUIT_A_CURRENT DOUBLE,
	CIRCUIT_B_CURRENT DOUBLE,
	DELTA_T DOUBLE,
	DIFFERENTIAL_PRESSURE DOUBLE,
	FAILURE BOOLEAN,
	CHILLER_LOAD DOUBLE,
	RUN_STATUS BOOLEAN,
	SETPOINT DOUBLE,
	TOTAL_CURRENT DOUBLE,
	TRIP_STATUS BOOLEAN,
	CAP_T_CH_2 DOUBLE,
	CAP_T_CH_3 DOUBLE,
	CAPA_T DOUBLE,
	CAPB_T DOUBLE,
	CTRL_WT DOUBLE,
	CURR_LIM DOUBLE,
	DB_B DOUBLE,
	ALARM_STATUS BOOLEAN,
	AVERAGE_LINE_VOLTAGE DOUBLE,
	CHILLED_WATER_P_FV_STATUS BOOLEAN,
	CHILLED_WATER_FLOW_STATUS BOOLEAN,
	CHILLED_WATER_VALVE_OPEN_STATUS BOOLEAN,
	COMPRESSOR_RUNNING_HOURS DOUBLE,
	COMPRESSOR_STARTS DOUBLE,
	CURRENT_SET_POINT_ACTIVE DOUBLE,
	EVAPORATOR_APPROACH_TEMPERATURE DOUBLE,
	EVAPORATOR_SATURATED_REFRIGERANT_PRESSURE DOUBLE,
	EVAPORATOR_SATURATED_REFRIGERANT_TEMPERATURE DOUBLE,
	OIL_TEMPERATURE DOUBLE,
	RLA DOUBLE,
	SYSTEM_SUPPLY_TEMPERATURE DOUBLE,
	SYSTEM_RETURN_TEMPERATURE DOUBLE,
	CPC_ALARM DOUBLE,
	CONDENSER_SUPPLY_HEADER_TEMPERATURE DOUBLE,
	CONDENSER_RETURN_HEADER_TEMPERATURE DOUBLE,
	DPT DOUBLE,
	CIRCUIT_A_SUCTION_PRESSURE DOUBLE,
	CIRCUIT_A_EXV_VALVE_POSITION DOUBLE,
	CIRCUIT_B_SUCTION_PRESSURE DOUBLE,
	CIRCUIT_B_EXV_VALVE_POSITION DOUBLE,
	COMPRESSOR_A_SUCTION_TEMPERATURE DOUBLE,
	COMPRESSOR_B_SUCTION_TEMPERATURE DOUBLE,
	COMPRESSOR_A_HOURS DOUBLE,
	COMPRESSOR_A_STARTS DOUBLE,
	COMPRESSOR_B_HOURS DOUBLE,
	COMPRESSOR_B_STARTS DOUBLE,
	SHUT_DOWN BOOLEAN,
	ALARM_OUT BOOLEAN,
	ALERT BOOLEAN,
	READY BOOLEAN,
	MACHINE_OPERATING_HOURS DOUBLE,
	MACHINE_START_NUMBER DOUBLE,
	COOLING_SETPOINT_2 DOUBLE,
	CHILLER_OCCUPIED BOOLEAN,
	MINUTES_LEFT_FOR_START DOUBLE,
	HEAT_RECLAIM_SELECT BOOLEAN,
	FREE_COOLING_DISABLE BOOLEAN,
	EMERGENCY_STOP BOOLEAN,
	SETPOINT_OCCUPIED BOOLEAN,
	COOLING_SETPOINT_1 DOUBLE,
	TRIP_ALARM BOOLEAN,
	ALARM BOOLEAN,
	HEAT_COOL_SELECT BOOLEAN,
	CHILLER_CAPACITY_SIGNAL DOUBLE,
	LAG_CAPACITY_LIMIT_VALVE DOUBLE,
	ACTIVE_DEMAND_LIMIT_VALVE DOUBLE,
	RUN_HOURS DOUBLE,
	CURRENT_CONTROL VARCHAR(500),
	FAIL_RESET VARCHAR(500),
	CONSTRAINT CHILLER_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CHILLER_READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT CHILLER_READINGS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Chiller(ID)
);

-- Create indexes for Chiller_Readings table
CREATE INDEX CHILLER_READINGS_PARENT_ID_INDEX on Chiller_Readings (PARENT_ID);
CREATE INDEX CHILLER_READINGS_PARENT_ID_TTIME_INDEX ON Chiller_Readings (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX CHILLER_READINGS_TTIME_INDEX ON Chiller_Readings (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS Chiller_Condenser_Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	CONDENSER_ENTERING_WATER_TEMPERATURE DOUBLE,
	CONDENSER_LEAVING_WATER_TEMPERATURE DOUBLE,
	COOLING_TOWER_ENTERING_WATER_TEMPERATURE DOUBLE,
	COOLING_TOWER_LEAVING_WATER_TEMPERATURE DOUBLE,
	CONDENSER_APPROACH_TEMPERATURE DOUBLE,
	CONDENSER_SATURATED_REFRIGERANT_PRESSURE DOUBLE,
	CONDENSER_SATURATED_REFRIGERANT_TEMPERATURE DOUBLE,
	CONDENSER_VALVE_OPEN_STATUS BOOLEAN,
	CONDENSER_WATER_FLOW_STATUS BOOLEAN,
	CONDENSER_WATER_P_FV_STATUS BOOLEAN,
	CONSTRAINT CHILLER_CONDENSER_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CHILLER_CONDENSER_READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT CHILLER_CONDENSER_READINGS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Chiller(ID)
);

-- Create indexes for Chiller_Condenser_Readings table
CREATE INDEX CHILLER_CONDENSER_READINGS_PARENT_ID_INDEX on Chiller_Condenser_Readings (PARENT_ID);
CREATE INDEX CHILLER_CONDENSER_READINGS_PARENT_ID_TTIME_INDEX ON Chiller_Condenser_Readings (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX CHILLER_CONDENSER_READINGS_TTIME_INDEX ON Chiller_Condenser_Readings (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS Chiller_Primary_Pump (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SITE_ID BIGINT NOT NULL,
	CONSTRAINT CHILLER_PRIMARY_PUMP_FK_ID FOREIGN KEY (ID) REFERENCES Assets(ID) ON DELETE CASCADE,
	CONSTRAINT CHILLER_PRIMARY_PUMP_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CHILLER_PRIMARY_PUMP_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT CHILLER_PRIMARY_PUMP_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS Chiller_Primary_Pump_Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	COMMAND_WORD DOUBLE,
	DRIVE_RESET DOUBLE,
	FREQUENCY_SET_POINT DOUBLE,
	INPUT_ENERGY DOUBLE,
	INPUT_POWER DOUBLE,
	OUTPUT_CURRENT DOUBLE,
	OUTPUT_FREQUENCY DOUBLE,
	PUMP_FAIL_STATUS BOOLEAN,
	PUMP_AUTO_MANUAL_STATUS BOOLEAN,
	PUMP_COMMAND DOUBLE,
	PUMP_RUN_STATUS BOOLEAN,
	SET_POINT_MODE DOUBLE,
	SET_POINT_MODE_STATUS BOOLEAN,
	STATUS_ALARM BOOLEAN,
	STATUS_WORD DOUBLE,
	TIME_OUT DOUBLE,
	TORQUE DOUBLE,
	TRIP_CODE DOUBLE,
	VFD_COMMAND_MODE DOUBLE,
	VFD_COMMAND_MODE_STATUS BOOLEAN,
	VFD_LOCAL_REMOTE_STATUS BOOLEAN,
	VFD_RUN_COMMAND DOUBLE,
	VFD_RUN_COMMAND_STATUS BOOLEAN,
	ALARM_CODE BOOLEAN,
	CONSTRAINT CHILLER_PRIMARY_PUMP_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CHILLER_PRIMARY_PUMP_READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT CHILLER_PRIMARY_PUMP_READINGS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Chiller_Primary_Pump(ID)
);

-- Create indexes for Chiller_Primary_Pump_Readings table
CREATE INDEX CHILLER_PRIMARY_PUMP_READINGS_PARENT_ID_INDEX on Chiller_Primary_Pump_Readings (PARENT_ID);
CREATE INDEX CHILLER_PRIMARY_PUMP_READINGS_PARENT_ID_TTIME_INDEX ON Chiller_Primary_Pump_Readings (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX CHILLER_PRIMARY_PUMP_READINGS_TTIME_INDEX ON Chiller_Primary_Pump_Readings (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS Chiller_Secondary_Pump (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SITE_ID BIGINT NOT NULL,
	CONSTRAINT CHILLER_SECONDARY_PUMP_FK_ID FOREIGN KEY (ID) REFERENCES Assets(ID) ON DELETE CASCADE,
	CONSTRAINT CHILLER_SECONDARY_PUMP_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CHILLER_SECONDARY_PUMP_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT CHILLER_SECONDARY_PUMP_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS Chiller_Secondary_Pump_Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	PUMP_FAIL_STATUS BOOLEAN,
	PUMP_AUTO_MANUAL_STATUS BOOLEAN,
	PUMP_COMMAND DOUBLE,
	PUMP_RUN_STATUS BOOLEAN,
	VFD_COMMAND DOUBLE,
	VFD_FEEDBACK DOUBLE,
	CONSTRAINT CHILLER_SECONDARY_PUMP_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CHILLER_SECONDARY_PUMP_READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT CHILLER_SECONDARY_PUMP_READINGS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Chiller_Secondary_Pump(ID)
);

-- Create indexes for Chiller_Secondary_Pump_Readings table
CREATE INDEX CHILLER_SECONDARY_PUMP_READINGS_PARENT_ID_INDEX on Chiller_Secondary_Pump_Readings (PARENT_ID);
CREATE INDEX CHILLER_SECONDARY_PUMP_READINGS_PARENT_ID_TTIME_INDEX ON Chiller_Secondary_Pump_Readings (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX CHILLER_SECONDARY_PUMP_READINGS_TTIME_INDEX ON Chiller_Secondary_Pump_Readings (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS Chiller_Condenser_Pump (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SITE_ID BIGINT NOT NULL,
	CONSTRAINT CHILLER_CONDENSER_PUMP_FK_ID FOREIGN KEY (ID) REFERENCES Assets(ID) ON DELETE CASCADE,
	CONSTRAINT CHILLER_CONDENSER_PUMP_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CHILLER_CONDENSER_PUMP_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT CHILLER_CONDENSER_PUMP_FK_SITEID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS Chiller_Condenser_Pump_Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	COMMAND_WORD DOUBLE,
	DRIVE_RESET DOUBLE,
	FREQUENCY_SET_POINT DOUBLE,
	INPUT_ENERGY DOUBLE,
	INPUT_POWER DOUBLE,
	OUTPUT_CURRENT DOUBLE,
	OUTPUT_FREQUENCY DOUBLE,
	PUMP_FAIL_STATUS BOOLEAN,
	PUMP_AUTO_MANUAL_STATUS BOOLEAN,
	PUMP_COMMAND DOUBLE,
	PUMP_RUN_STATUS BOOLEAN,
	SET_POINT_MODE DOUBLE,
	SET_POINT_MODE_STATUS BOOLEAN,
	STATUS_ALARM BOOLEAN,
	STATUS_WORD DOUBLE,
	TIME_OUT DOUBLE,
	TORQUE DOUBLE,
	TRIP_CODE DOUBLE,
	VFD_COMMAND_MODE DOUBLE,
	VFD_COMMAND_MODE_STATUS BOOLEAN,
	VFD_LOCAL_REMOTE_STATUS BOOLEAN,
	VFD_RUN_COMMAND DOUBLE,
	VFD_RUN_COMMAND_STATUS BOOLEAN,
	ALARM_CODE BOOLEAN,
	CONSTRAINT CHILLER_CONDENSER_PUMP_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CHILLER_CONDENSER_PUMP_READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT CHILLER_CONDENSER_PUMP_READINGS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Chiller_Condenser_Pump(ID)
);

-- Create indexes for Chiller_Condenser_Pump_Readings table
CREATE INDEX CHILLER_CONDENSER_PUMP_READINGS_PARENT_ID_INDEX on Chiller_Condenser_Pump_Readings (PARENT_ID);
CREATE INDEX CHILLER_CONDENSER_PUMP_READINGS_PARENT_ID_TTIME_INDEX ON Chiller_Condenser_Pump_Readings (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX CHILLER_CONDENSER_PUMP_READINGS_TTIME_INDEX ON Chiller_Condenser_Pump_Readings (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS AHU (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SITE_ID BIGINT NOT NULL,
	CONSTRAINT AHU_FK_ID FOREIGN KEY (ID) REFERENCES Assets(ID) ON DELETE CASCADE,
	CONSTRAINT AHU_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT AHU_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT AHU_FK_SITEID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS AHU_Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	COMMAND_WORD DOUBLE,
	DRIVE_RESET DOUBLE,
	FREQUENCY_SET_POINT DOUBLE,
	INPUT_ENERGY DOUBLE,
	INPUT_POWER DOUBLE,
	OUTPUT_CURRENT DOUBLE,
	OUTPUT_FREQUENCY DOUBLE,
	PUMP_FAIL_STATUS BOOLEAN,
	PUMP_AUTO_MANUAL_STATUS BOOLEAN,
	PUMP_COMMAND DOUBLE,
	PUMP_RUN_STATUS BOOLEAN,
	SET_POINT_MODE DOUBLE,
	SET_POINT_MODE_STATUS BOOLEAN,
	STATUS_ALARM BOOLEAN,
	STATUS_WORD DOUBLE,
	TIME_OUT DOUBLE,
	TORQUE DOUBLE,
	TRIP_CODE DOUBLE,
	VFD_COMMAND_MODE DOUBLE,
	VFD_COMMAND_MODE_STATUS BOOLEAN,
	VFD_LOCAL_REMOTE_STATUS BOOLEAN,
	VFD_RUN_COMMAND DOUBLE,
	VFD_RUN_COMMAND_STATUS BOOLEAN,
	ALARM_CODE BOOLEAN,
	CONSTRAINT AHU_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT AHU_READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT AHU_READINGS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES AHU(ID)
);
-- Create indexes for AHU_Readings table
CREATE INDEX AHU_READINGS_PARENT_ID_INDEX on AHU_Readings (PARENT_ID);
CREATE INDEX AHU_READINGS_PARENT_ID_TTIME_INDEX ON AHU_Readings (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX AHU_READINGS_TTIME_INDEX ON AHU_Readings (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS Cooling_Tower (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SITE_ID BIGINT NOT NULL,
	CONSTRAINT COOLING_TOWER_FK_ID FOREIGN KEY (ID) REFERENCES Assets(ID) ON DELETE CASCADE,
	CONSTRAINT COOLING_TOWER_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT COOLING_TOWER_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT COOLING_TOWER_FK_SITEID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS Cooling_Tower_Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	AUTO_MANUAL_STATUS BOOLEAN,
	COMMAND DOUBLE,
	FAIL_STATUS BOOLEAN,
	INLET_VALVE_COMMAND DOUBLE,
	INLET_VALVE_OPEN_STATUS BOOLEAN,
	OUTLET_TEMPERATURE DOUBLE,
	OUTLET_VALVE_COMMAND DOUBLE,
	OUTLET_VALVE_OPEN_STATUS BOOLEAN,
	RUN_STATUS BOOLEAN,
	VFD_COMMAND_STATUS BOOLEAN,
	VFD_FEEDBACK DOUBLE,
	CONSTRAINT COOLING_TOWER_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT COOLING_TOWER_READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT COOLING_TOWER_READINGS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Cooling_Tower(ID)
);
-- Create indexes for Cooling_Tower_Readings table
CREATE INDEX COOLING_TOWER_READINGS_PARENT_ID_INDEX on Cooling_Tower_Readings (PARENT_ID);
CREATE INDEX COOLING_TOWER_READINGS_PARENT_ID_TTIME_INDEX ON Cooling_Tower_Readings (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX COOLING_TOWER_READINGS_TTIME_INDEX ON Cooling_Tower_Readings (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS FCU (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SITE_ID BIGINT NOT NULL,
	CONSTRAINT FCU_FK_ID FOREIGN KEY (ID) REFERENCES Assets(ID) ON DELETE CASCADE,
	CONSTRAINT FCU_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT FCU_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT FCU_FK_SITEID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS FCU_Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	FAN_MODE TINYINT,
	FCU_VALVE BOOLEAN,
	ROOM_TEMPERATURE DOUBLE,
	SET_POINT DOUBLE,
	CONSTRAINT FCU_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT FCU_READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT FCU_READINGS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES FCU(ID)
);
-- Create indexes for FCU_Readings table
CREATE INDEX FCU_READINGS_PARENT_ID_INDEX on FCU_Readings (PARENT_ID);
CREATE INDEX FCU_READINGS_PARENT_ID_TTIME_INDEX ON FCU_Readings (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX FCU_READINGS_TTIME_INDEX ON FCU_Readings (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS Heat_Pump (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SITE_ID BIGINT NOT NULL,
	CONSTRAINT HEAT_PUMP_FK_ID FOREIGN KEY (ID) REFERENCES Assets(ID) ON DELETE CASCADE,
	CONSTRAINT HEAT_PUMP_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT HEAT_PUMP_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT HEAT_PUMP_FK_SITEID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS Heat_Pump_Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	FAN_POWER BIGINT,
	OCCUPANCY_STATUS BOOLEAN,
	DISCHARGE_AIR_TEMPERATURE BIGINT,
	REVERSING_VALVE_COMMAND BOOLEAN,
	ISOLATION_VALVE_COMMAND BOOLEAN,
	COMPRESSOR_POWER BIGINT,
	FAN_COMMAND BOOLEAN,
	SPACE_TEMPERATURE BIGINT,
	LEAVING_WATER_TEMPERATURE BIGINT,
	COMPRESSOR_COMMAND BOOLEAN,
	FAN_STATUS BOOLEAN,
	CONSTRAINT HEAT_PUMP_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT HEAT_PUMP_READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT HEAT_PUMP_READINGS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Heat_Pump(ID)
);
-- Create indexes for Heat_Pump_Readings table
CREATE INDEX HEAT_PUMP_READINGS_PARENT_ID_INDEX on Heat_Pump_Readings (PARENT_ID);
CREATE INDEX HEAT_PUMP_READINGS_PARENT_ID_TTIME_INDEX ON Heat_Pump_Readings (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX HEAT_PUMP_READINGS_TTIME_INDEX ON Heat_Pump_Readings (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS Utility_Meters (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ASSET_NUMBER VARCHAR(100),
	PREMISE VARCHAR(100),
	LOCATION VARCHAR(100),
	CONSUMER_NUMBER VARCHAR(100),
	SITE_ID BIGINT NOT NULL,
	CONSTRAINT UTILITY_METERS_FK_ID FOREIGN KEY (ID) REFERENCES Assets(ID) ON DELETE CASCADE,
	CONSTRAINT UTILITY_METERS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT UTILITY_METERS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT UTILITY_METERS_FK_SITEID FOREIGN KEY (SITE_ID) REFERENCES Site (ID)
);

CREATE TABLE IF NOT EXISTS Utility_Bill_Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	BILL_START_DATE BIGINT,
	BILL_DATE BIGINT,
	BILL_DUE_DATE BIGINT,
	BILL_ID VARCHAR(50),
	ENERGY_CONSUMPTION DOUBLE,
	ENERGY_COST DOUBLE,
	DEMAND DOUBLE,
	DEMAND_COST DOUBLE,
	WATER_CONSUMPTION DOUBLE,
	WATER_COST DOUBLE,
	GAS_CONSUMPTION DOUBLE,
	GAS_COST DOUBLE,
	SEWER_USAGE DOUBLE,
	SEWER_USAGE_COST DOUBLE,
	STORM_WATER_COST DOUBLE,
	TOTAL_COST DOUBLE,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	DECIMAL_CF1 DOUBLE,
	DECIMAL_CF2 DOUBLE,
	DECIMAL_CF3 DOUBLE,
	CONSTRAINT UTILITY_BILL_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT UTILITY_BILL_READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT UTILITY_BILL_READINGS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Utility_Meters(ID)
);

-- Create indexes for Utility_Bill_Readings table
CREATE INDEX UTILITY_BILL_READINGS_PARENT_ID_INDEX on Utility_Bill_Readings (PARENT_ID);
CREATE INDEX UTILITY_BILL_READINGS_PARENT_ID_TTIME_INDEX ON Utility_Bill_Readings (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX UTILITY_BILL_READINGS_TTIME_INDEX ON Utility_Bill_Readings (ORGID, MODULEID, TTIME);



CREATE TABLE IF NOT EXISTS Water_Meter (
  ID BIGINT(20) PRIMARY KEY,
  ORGID BIGINT(20) NOT NULL,
  MODULEID BIGINT(20) NOT NULL,
  SITE_ID BIGINT(20) DEFAULT NULL,
  CONSTRAINT WATER_METER_FK_ID FOREIGN KEY (ID) REFERENCES Assets (ID) ON DELETE CASCADE,
  CONSTRAINT WATER_METER_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID),
  CONSTRAINT WATER_METER_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT WATER_METER_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site (ID)
);

CREATE TABLE IF NOT EXISTS Water_Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	WATER_CONSUMPTION DOUBLE,
	WATER_CONSUMPTION_DELTA DOUBLE,
	DECIMAL_CF1 DOUBLE,
	DECIMAL_CF2 DOUBLE,
	DECIMAL_CF3 DOUBLE,
	DECIMAL_CF4 DOUBLE,
	DECIMAL_CF5 DOUBLE,
	DECIMAL_CF6 DOUBLE,
	DECIMAL_CF7 DOUBLE,
	DECIMAL_CF8 DOUBLE,
	DECIMAL_CF9 DOUBLE,
	DECIMAL_CF10 DOUBLE,
	CONSTRAINT WATER_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WATER_READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT WATER_READINGS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Water_Meter(ID)
);

-- Create indexes for Water_Readings table
CREATE INDEX WATER_READINGS_PARENT_ID_INDEX on Water_Readings (PARENT_ID);
CREATE INDEX WATER_READINGS_PARENT_ID_TTIME_INDEX ON Water_Readings (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX WATER_READINGS_TTIME_INDEX ON Water_Readings (ORGID, MODULEID, TTIME);


CREATE TABLE IF NOT EXISTS Asset_Photos (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_ASSET BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	PHOTO_ID BIGINT NOT NULL,
	CONSTRAINT ASSET_PHOTOS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ASSET_PHOTOS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ASSET_PHOTOS_FK_PARENT_ASSET FOREIGN KEY (PARENT_ASSET) REFERENCES Assets (ID),
	CONSTRAINT ASSET_PHOTOS_FK_PHOTO_ID FOREIGN KEY (PHOTO_ID) REFERENCES FacilioFile (FILE_ID)
);

CREATE TABLE IF NOT EXISTS Asset_Attachments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_ASSET BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	FILE_ID BIGINT NOT NULL,
	CONSTRAINT ASSET_ATTACHEMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ASSET_ATTACHEMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ASSET_ATTACHEMENTS_FK_PARENT_ASSET FOREIGN KEY (PARENT_ASSET) REFERENCES Assets (ID),
	CONSTRAINT ASSET_ATTACHEMENTS_FK_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile (FILE_ID)
);

CREATE TABLE IF NOT EXISTS Asset_Notes (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	CREATED_BY BIGINT,
	CREATED_TIME BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000) NOT NULL,
	CONSTRAINT ASSET_NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ASSET_NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ASSET_NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT ASSET_NOTES_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Assets(ID) ON DELETE CASCADE
);

-- Create Tickets Tables
CREATE TABLE IF NOT EXISTS TicketStatus (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	DISPLAY_NAME varchar(50),
	STATUS VARCHAR(20) NOT NULL,
	STATUS_TYPE TINYINT NOT NULL,
	IS_TIMER_ENABLED BOOLEAN NOT NULL DEFAULT 0,
	RECORD_LOCKED BOOLEAN NOT NULL DEFAULT 0,
	CONSTRAINT TICKET_STATUS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TICKET_STATUS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TICKET_STATUS_UNIQUE UNIQUE (ORGID, STATUS)
);

CREATE TABLE IF NOT EXISTS TicketStateFlow (
	ACTIVITY_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	ACTIVITY_NAME VARCHAR(20) NOT NULL,
	STATE_ID BIGINT NOT NULL,
	NEXT_STATE_ID BIGINT NOT NULL,
	CONSTRAINT TICKET_STATEFLOW_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TICKET_STATEFLOW_FK_STATE FOREIGN KEY (STATE_ID) REFERENCES TicketStatus(ID),
	CONSTRAINT TICKET_STATEFLOW_FK_NEXT_STATE FOREIGN KEY (STATE_ID) REFERENCES TicketStatus(ID),
	CONSTRAINT TICKET_STATEFLOW_UNIQUE UNIQUE (STATE_ID, NEXT_STATE_ID)
);

CREATE TABLE IF NOT EXISTS Tenants (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT(20) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(500),
	CONTACT_ID BIGINT(20),
	LOGO_ID BIGINT,
	LOCAL_ID BIGINT(11),
	SITE_ID BIGINT(20),
	ZONE_ID BIGINT(20),
	MODULEID BIGINT(20),
	CREATED_TIME BIGINT(20),
	MODIFIED_TIME BIGINT(20),
	STATUS TINYINT,
	SYS_DELETED TINYINT,
	IN_TIME BIGINT(20),
	OUT_TIME BIGINT(20),
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	STRING_CF6 VARCHAR(50),
	STRING_CF7 VARCHAR(50),
	STRING_CF8 VARCHAR(50),
	STRING_CF9 VARCHAR(50),
	STRING_CF10 VARCHAR(50),
	STRING_CF11 VARCHAR(50),
	STRING_CF12 VARCHAR(50),
	STRING_CF13 VARCHAR(50),
	STRING_CF14 VARCHAR(50),
	STRING_CF15 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	NUMBER_CF6 BIGINT,
	NUMBER_CF7 BIGINT,
	NUMBER_CF8 BIGINT,
	NUMBER_CF9 BIGINT,
	NUMBER_CF10 BIGINT,
	NUMBER_CF11 BIGINT,
	NUMBER_CF12 BIGINT,
	NUMBER_CF13 BIGINT,
	NUMBER_CF14 BIGINT,
	NUMBER_CF15 BIGINT,
	DECIMAL_CF1 DOUBLE,
	DECIMAL_CF2 DOUBLE,
	DECIMAL_CF3 DOUBLE,
	DECIMAL_CF4 DOUBLE,
	DECIMAL_CF5 DOUBLE,
	DECIMAL_CF6 DOUBLE,
	DECIMAL_CF7 DOUBLE,
	DECIMAL_CF8 DOUBLE,
	DECIMAL_CF9 DOUBLE,
	DECIMAL_CF10 DOUBLE,
	DECIMAL_CF11 DOUBLE,
	DECIMAL_CF12 DOUBLE,
	DECIMAL_CF13 DOUBLE,
	DECIMAL_CF14 DOUBLE,
	DECIMAL_CF15 DOUBLE,
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	BOOLEAN_CF6 BOOLEAN,
	BOOLEAN_CF7 BOOLEAN,
	BOOLEAN_CF8 BOOLEAN,
	BOOLEAN_CF9 BOOLEAN,
	BOOLEAN_CF10 BOOLEAN,
	BOOLEAN_CF11 BOOLEAN,
	BOOLEAN_CF12 BOOLEAN,
	BOOLEAN_CF13 BOOLEAN,
	BOOLEAN_CF14 BOOLEAN,
	BOOLEAN_CF15 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATE_CF6 BIGINT,
	DATE_CF7 BIGINT,
	DATE_CF8 BIGINT,
	DATE_CF9 BIGINT,
	DATE_CF10 BIGINT,
	DATE_CF11 BIGINT,
	DATE_CF12 BIGINT,
	DATE_CF13 BIGINT,
	DATE_CF14 BIGINT,
	DATE_CF15 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,
	DATETIME_CF6 BIGINT,
	DATETIME_CF7 BIGINT,
	DATETIME_CF8 BIGINT,
	DATETIME_CF9 BIGINT,
	DATETIME_CF10 BIGINT,
	DATETIME_CF11 BIGINT,
	DATETIME_CF12 BIGINT,
	DATETIME_CF13 BIGINT,
	DATETIME_CF14 BIGINT,
	DATETIME_CF15 BIGINT,
	CONSTRAINT TENANTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  	CONSTRAINT TENANTS_FK_LOGO_ID FOREIGN KEY (LOGO_ID) REFERENCES FacilioFile (FILE_ID),
	CONSTRAINT TENANTS_FK_CONTACT_ID FOREIGN KEY (CONTACT_ID) REFERENCES ORG_Users (ORG_USERID),
	CONSTRAINT TENANTS_FK_MODULE_ID FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID),
	CONSTRAINT TENANTS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site (ID),
	CONSTRAINT TENANTS_FK_ZONE_ID FOREIGN KEY (ZONE_ID) REFERENCES Zone (ID)
);

CREATE INDEX TENANTS_LOCAL_ID ON Tenants (ORGID,MODULEID,LOCAL_ID); 


CREATE TABLE IF NOT EXISTS TicketPriority (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PRIORITY VARCHAR(20) NOT NULL,
	SEQUENCE_NUMBER TINYINT NOT NULL,
	COLOUR VARCHAR(7) NOT NULL,
	ISDEFAULT BOOLEAN,
	DISPLAY_NAME VARCHAR(50),
	CONSTRAINT TICKET_PRIORITY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TICKET_PRIORITY_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TICKET_PRIORITY_UNIQUE UNIQUE (ORGID, PRIORITY)
);

CREATE TABLE IF NOT EXISTS TicketCategory (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	DISPLAY_NAME VARCHAR(50),
	DESCRIPTION VARCHAR(1000),
	CONSTRAINT TICKET_CATEGORY_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TICKET_CATEGORY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS TicketType (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50),
	DESCRIPTION VARCHAR(1000),
	CONSTRAINT TICKET_TYPE_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TICKET_TYPE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Tickets (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SUBJECT VARCHAR(300),
	DESCRIPTION VARCHAR(2000),
	STATUS_ID BIGINT,
	PRIORITY_ID BIGINT,
	CATEGORY_ID BIGINT,
	TYPE_ID BIGINT,
	SOURCE_TYPE TINYINT NOT NULL,
	CREATED_BY BIGINT,
	ASSIGNMENT_GROUP_ID BIGINT,
	ASSIGNED_TO_ID BIGINT,
	ASSIGNED_BY_ID BIGINT,
	RESOURCE_ID BIGINT,
	DUE_DATE BIGINT,
	SERIAL_NUMBER BIGINT,
	NO_OF_NOTES INT,
	NO_OF_ATTACHMENTS INT,
	NO_OF_TASKS INT,
	NO_OF_CLOSED_TASKS INT,
	SCHEDULED_START BIGINT,
	ESTIMATED_START BIGINT,
	ESTIMATED_END BIGINT,
	ACTUAL_WORK_START BIGINT,
	ACTUAL_WORK_END BIGINT,
	RESUMED_WORK_START BIGINT,
	ACTUAL_WORK_DURATION BIGINT,
	ESTIMATED_WORK_DURATION BIGINT,
	SITE_ID BIGINT,
	TENANT_ID BIGINT,
	MODULE_STATE BIGINT,
	STATE_FLOW_ID BIGINT,
	CONSTRAINT TICKETS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TICKETS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TICKETS_FK_STATUS_ID FOREIGN KEY (STATUS_ID) REFERENCES TicketStatus(ID) ON DELETE SET NULL,
	CONSTRAINT TICKETS_FK_PRIORITY_ID FOREIGN KEY (PRIORITY_ID) REFERENCES TicketPriority(ID) ON DELETE SET NULL,
	CONSTRAINT TICKETS_FK_CATEGORY_ID FOREIGN KEY (CATEGORY_ID) REFERENCES TicketCategory(ID) ON DELETE SET NULL,
	CONSTRAINT TICKETS_FK_TYPE_ID FOREIGN KEY (TYPE_ID) REFERENCES TicketType(ID) ON DELETE SET NULL,
	CONSTRAINT TICKETS_FK_ASSIGNMENT_GROUP FOREIGN KEY (ASSIGNMENT_GROUP_ID) REFERENCES `Groups`(GROUPID),
	CONSTRAINT TICKETS_FK_ASSIGNED_TO_ID FOREIGN KEY (ASSIGNED_TO_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT TICKETS_FK_ASSIGNED_BY_ID FOREIGN KEY (ASSIGNED_BY_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT TICKETS_FK_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources(ID),
	CONSTRAINT TICKETS_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT TICKETS_FK_TENANT_ID FOREIGN KEY (TENANT_ID) REFERENCES Tenants(ID),
	CONSTRAINT TICKETS_FK_MODULESTATE_ID FOREIGN KEY (MODULE_STATE) REFERENCES TicketStatus (ID),
	CONSTRAINT TICKETS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS Ticket_Attachments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_TICKET BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	FILE_ID BIGINT NOT NULL,
	ATTACHMENT_TYPE TINYINT,
	CONSTRAINT TICKET_ATTACHEMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TICKET_ATTACHEMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TICKET_ATTACHEMENTS_FK_PARENT_TICKET FOREIGN KEY (PARENT_TICKET) REFERENCES Tickets (ID),
	CONSTRAINT TICKET_ATTACHEMENTS_FK_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile (FILE_ID)
);

CREATE TABLE IF NOT EXISTS Ticket_Notes (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	CREATED_BY BIGINT,
	CREATED_TIME BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000) NOT NULL,
	NOTIFY_REQUESTER BOOLEAN,
	CONSTRAINT TICKET_NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TICKET_NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TICKET_NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT TICKET_NOTES_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Tickets(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS WorkOrderRequests (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	REQUESTER_ID BIGINT,
	STATUS TINYINT,
	URGENCY TINYINT,
	CREATED_TIME BIGINT,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	DECIMAL_CF1 DOUBLE(9,3),
	DECIMAL_CF2 DOUBLE(9,3),
	DECIMAL_CF3 DOUBLE(9,3),
	DECIMAL_CF4 DOUBLE(9,3),
	DECIMAL_CF5 DOUBLE(9,3),
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,
	SITE_ID BIGINT,
	CONSTRAINT WORK_ORDER_REQUESTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WORK_ORDER_REQUESTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT WORK_ORDER_REQUESTS_FK_ID FOREIGN KEY (ID) REFERENCES Tickets(ID) ON DELETE CASCADE,
	CONSTRAINT WORK_ORDER_REQUESTS_FK_REQUESTER_ID FOREIGN KEY (REQUESTER_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT WORK_ORDER_REQUESTS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

-- Create table for WorkOrderRequests creation from Email
CREATE TABLE IF NOT EXISTS WorkOrderRequest_EMail (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	S3_MESSAGE_ID VARCHAR(100) NOT NULL,
	TO_ADDR VARCHAR(500) NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	IS_PROCESSED BOOLEAN,
	REQUEST_ID BIGINT,
	CONSTRAINT WORK_ORDER_REQUESTS_EMAIL_FK_REQUEST_ID FOREIGN KEY (REQUEST_ID) REFERENCES Tickets(ID) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS Task_Section (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(300) NOT NULL,
	IS_EDITABLE BOOLEAN,
	PARENT_TICKET_ID BIGINT NOT NULL,
	SEQUENCE_NUMBER INT NOT NULL,
	CONSTRAINT TASK_SECTION_FK_PARENT_TICKET_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TASK_SECTION_FK_PARENT_TICKET_ID FOREIGN KEY (PARENT_TICKET_ID) REFERENCES Tickets(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Tasks (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	SUBJECT VARCHAR(300),
	DESCRIPTION VARCHAR(1000),
	STATUS TINYINT NOT NULL DEFAULT 1,
	RESOURCE_ID BIGINT,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_TICKET_ID BIGINT,
	UNIQUE_ID INT,
	CREATED_TIME BIGINT,
	MODIFIED_TIME BIGINT,
	INPUT_TYPE TINYINT NOT NULL,
	INPUT_TIME BIGINT,
	READING_ID BIGINT,
	READING_DATA_ID BIGINT,
	LAST_READING VARCHAR(500),
	INPUT_VALUE VARCHAR(500),
	SECTION_ID BIGINT,
	SEQUENCE INT,
	ATTACHMENT_REQUIRED BOOLEAN,
	NO_OF_ATTACHMENTS INT,
	REMARKS VARCHAR(1000),
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	DECIMAL_CF1 DOUBLE,
	DECIMAL_CF2 DOUBLE,
	DECIMAL_CF3 DOUBLE,
	DECIMAL_CF4 DOUBLE,
	DECIMAL_CF5 DOUBLE,
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,
	ENUM_CF1 INTEGER,
	ENUM_CF2 INTEGER,
	ENUM_CF3 INTEGER,
	ENUM_CF4 INTEGER,
	ENUM_CF5 INTEGER,
	SITE_ID BIGINT,
	CREATED_BY BIGINT NOT NULL,
	CONSTRAINT TASKS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TASKS_FK_PARENT_TICKET_ID FOREIGN KEY (PARENT_TICKET_ID) REFERENCES Tickets(ID) ON DELETE CASCADE,
	CONSTRAINT TASKS_FK_READING_ID FOREIGN KEY (READING_ID) REFERENCES Fields(FIELDID),
	CONSTRAINT TASKS_FK_SECTION_ID FOREIGN KEY (SECTION_ID) REFERENCES Task_Section(ID),
	CONSTRAINT TASKS_UNIQUE_ID UNIQUE(PARENT_TICKET_ID, UNIQUE_ID),
	CONSTRAINT TASKS_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(id),
	CONSTRAINT TASKS_FK_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources(ID),
	CONSTRAINT TASKS_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID)
);

CREATE TABLE IF NOT EXISTS Task_Attachments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	FILE_ID BIGINT NOT NULL,
	ATTACHMENT_TYPE TINYINT,
	CONSTRAINT TASK_ATTACHMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TASK_ATTACHMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TASK_ATTACHMENTS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Tasks (ID) ON DELETE CASCADE,
	CONSTRAINT TASK_ATTACHMENTS_FK_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile (FILE_ID)
);

CREATE TABLE IF NOT EXISTS Task_Input_Options (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	TASK_ID BIGINT,
	OPTION_VALUE VARCHAR(100),
	CONSTRAINT TASK_INPUT_OPTIONS_FK_TASK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TASK_INPUT_OPTIONS_FK_TASK_ID FOREIGN KEY (TASK_ID) REFERENCES Tasks(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS UserLocationCoverage (
  USER_LOCATION_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  ORG_USERID BIGINT,
  LOCATION_ID BIGINT,
  CONSTRAINT USERLOCATIONS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT USERLOCATIONS_USERID_FK FOREIGN KEY (ORG_USERID) REFERENCES ORG_Users(ORG_USERID) ON DELETE CASCADE,
  CONSTRAINT USERLOCATIONS_LOCATION_FK FOREIGN KEY (LOCATION_ID) REFERENCES Locations (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS GroupLocationCoverage (
  GROUP_LOCATION_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  GROUPID BIGINT,
  LOCATION_ID BIGINT,
  CONSTRAINT GLC_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT GLC_GROUPID_FK FOREIGN KEY (GROUPID) REFERENCES `Groups`(GROUPID) ON DELETE CASCADE,
  CONSTRAINT GLC_LOCATION_FK FOREIGN KEY (LOCATION_ID) REFERENCES Locations (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Skills (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  MODULEID BIGINT NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  ACTIVE BOOLEAN,
  DESCRIPTION VARCHAR(1000),
  CATEGORY_ID BIGINT,
  CONSTRAINT SKILLS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT SKILLS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
  CONSTRAINT SKILLS_FK_CATEGORYID FOREIGN KEY (CATEGORY_ID) REFERENCES TicketCategory(ID)
);

CREATE TABLE IF NOT EXISTS UserSkills (
  USER_SKILL_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  ORG_USERID BIGINT,
  SKILL_ID BIGINT,
  CONSTRAINT USERSKILLS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT USERSKILLS_USERID_FK FOREIGN KEY (ORG_USERID) REFERENCES ORG_Users(ORG_USERID) ON DELETE CASCADE,
  CONSTRAINT USERSKILLS_SKILL_FK FOREIGN KEY (SKILL_ID) REFERENCES Skills (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS GroupSkills (
  GROUP_SKILL_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  GROUPID BIGINT,
  SKILL_ID BIGINT,
  CONSTRAINT GROUPSKILLS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT GROUPSKILLS_GROUPID_FK FOREIGN KEY (GROUPID) REFERENCES `Groups`(GROUPID) ON DELETE CASCADE,
  CONSTRAINT GROUPSKILLS_SKILL_FK FOREIGN KEY (SKILL_ID) REFERENCES Skills (ID) ON DELETE CASCADE
);

-- Device Table

/*CREATE TABLE IF NOT EXISTS Service (
	SERVICE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(50)
);*/

CREATE TABLE IF NOT EXISTS Alarm_Severity (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SEVERITY VARCHAR(50) NOT NULL,
	CARDINALITY TINYINT NOT NULL,
	ISDEFAULT BOOLEAN,
	DISPLAY_NAME VARCHAR(50),
	COLOR VARCHAR(7),
	CONSTRAINT ALARM_SEVERITY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ALARM_SEVERITY_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID)
);

CREATE TABLE IF NOT EXISTS Alarm_Entity (
	ENTITY_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	CONSTRAINT ALARM_ENTITY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);



CREATE TABLE IF NOT EXISTS Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	DECIMAL_CF1 DOUBLE,
	DECIMAL_CF2 DOUBLE,
	DECIMAL_CF3 DOUBLE,
	DECIMAL_CF4 DOUBLE,
	DECIMAL_CF5 DOUBLE,
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	ENUM_CF1 INTEGER,
	ENUM_CF2 INTEGER,
	ENUM_CF3 INTEGER,
	ENUM_CF4 INTEGER,
	ENUM_CF5 INTEGER,
	CONSTRAINT READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID)
);
-- Create indexes for Readings table
CREATE INDEX READINGS_PARENT_ID_INDEX on Readings (PARENT_ID);
CREATE INDEX READINGS_PARENT_ID_TTIME_INDEX ON Readings (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX READINGS_TTIME_INDEX ON Readings (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS Readings_2 (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	NUMBER_CF6 BIGINT,
	NUMBER_CF7 BIGINT,
	NUMBER_CF8 BIGINT,
	NUMBER_CF9 BIGINT,
	NUMBER_CF10 BIGINT,
	DECIMAL_CF1 DOUBLE,
	DECIMAL_CF2 DOUBLE,
	DECIMAL_CF3 DOUBLE,
	DECIMAL_CF4 DOUBLE,
	DECIMAL_CF5 DOUBLE,
	DECIMAL_CF6 DOUBLE,
	DECIMAL_CF7 DOUBLE,
	DECIMAL_CF8 DOUBLE,
	DECIMAL_CF9 DOUBLE,
	DECIMAL_CF10 DOUBLE,
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	ENUM_CF1 INTEGER,
	ENUM_CF2 INTEGER,
	ENUM_CF3 INTEGER,
	ENUM_CF4 INTEGER,
	ENUM_CF5 INTEGER,
	CONSTRAINT READINGS_2_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT READINGS_2_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID)
);
-- Create indexes for Readings_2 table
CREATE INDEX READINGS_2_PARENT_ID_INDEX on Readings_2 (PARENT_ID);
CREATE INDEX READINGS_2_PARENT_ID_TTIME_INDEX ON Readings_2 (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX READINGS_2_TTIME_INDEX ON Readings_2 (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS Predicted_Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	PREDICTED_TIME BIGINT NOT NULL,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	DECIMAL_CF1 DOUBLE,
	DECIMAL_CF2 DOUBLE,
	DECIMAL_CF3 DOUBLE,
	DECIMAL_CF4 DOUBLE,
	DECIMAL_CF5 DOUBLE,
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	ENUM_CF1 INTEGER,
	ENUM_CF2 INTEGER,
	ENUM_CF3 INTEGER,
	ENUM_CF4 INTEGER,
	ENUM_CF5 INTEGER,
	CONSTRAINT PREDICTED_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT PREDICTED_READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID)
);
-- Create indexes for Predicted_Readings table
CREATE INDEX PREDICTED_READINGS_PARENT_ID_INDEX on Predicted_Readings (PREDICTED_TIME, PARENT_ID);
CREATE INDEX PREDICTED_READINGS_PARENT_ID_TTIME_INDEX ON Predicted_Readings (ORGID, MODULEID, PREDICTED_TIME, PARENT_ID, TTIME);
CREATE INDEX PREDICTED_READINGS_TTIME_INDEX ON Predicted_Readings (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS CustomModuleData (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	MODULEID BIGINT NOT NULL,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	STRING_CF6 VARCHAR(50),
	STRING_CF7 VARCHAR(50),
	STRING_CF8 VARCHAR(50),
	STRING_CF9 VARCHAR(50),
	STRING_CF10 VARCHAR(50),
	STRING_CF11 VARCHAR(50),
	STRING_CF12 VARCHAR(50),
	STRING_CF13 VARCHAR(50),
	STRING_CF14 VARCHAR(50),
	STRING_CF15 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	NUMBER_CF6 BIGINT,
	NUMBER_CF7 BIGINT,
	NUMBER_CF8 BIGINT,
	NUMBER_CF9 BIGINT,
	NUMBER_CF10 BIGINT,
	NUMBER_CF11 BIGINT,
	NUMBER_CF12 BIGINT,
	NUMBER_CF13 BIGINT,
	NUMBER_CF14 BIGINT,
	NUMBER_CF15 BIGINT,
	DECIMAL_CF1 DOUBLE,
	DECIMAL_CF2 DOUBLE,
	DECIMAL_CF3 DOUBLE,
	DECIMAL_CF4 DOUBLE,
	DECIMAL_CF5 DOUBLE,
	DECIMAL_CF6 DOUBLE,
	DECIMAL_CF7 DOUBLE,
	DECIMAL_CF8 DOUBLE,
	DECIMAL_CF9 DOUBLE,
	DECIMAL_CF10 DOUBLE,
	DECIMAL_CF11 DOUBLE,
	DECIMAL_CF12 DOUBLE,
	DECIMAL_CF13 DOUBLE,
	DECIMAL_CF14 DOUBLE,
	DECIMAL_CF15 DOUBLE,
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	BOOLEAN_CF6 BOOLEAN,
	BOOLEAN_CF7 BOOLEAN,
	BOOLEAN_CF8 BOOLEAN,
	BOOLEAN_CF9 BOOLEAN,
	BOOLEAN_CF10 BOOLEAN,
	BOOLEAN_CF11 BOOLEAN,
	BOOLEAN_CF12 BOOLEAN,
	BOOLEAN_CF13 BOOLEAN,
	BOOLEAN_CF14 BOOLEAN,
	BOOLEAN_CF15 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATE_CF6 BIGINT,
	DATE_CF7 BIGINT,
	DATE_CF8 BIGINT,
	DATE_CF9 BIGINT,
	DATE_CF10 BIGINT,
	DATE_CF11 BIGINT,
	DATE_CF12 BIGINT,
	DATE_CF13 BIGINT,
	DATE_CF14 BIGINT,
	DATE_CF15 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,
	DATETIME_CF6 BIGINT,
	DATETIME_CF7 BIGINT,
	DATETIME_CF8 BIGINT,
	DATETIME_CF9 BIGINT,
	DATETIME_CF10 BIGINT,
	DATETIME_CF11 BIGINT,
	DATETIME_CF12 BIGINT,
	DATETIME_CF13 BIGINT,
	DATETIME_CF14 BIGINT,
	DATETIME_CF15 BIGINT,
	ENUM_CF1 INTEGER,
	ENUM_CF2 INTEGER,
	ENUM_CF3 INTEGER,
	ENUM_CF4 INTEGER,
	ENUM_CF5 INTEGER,
	CONSTRAINT CM_DATA_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CM_DATA_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID)
);

CREATE TABLE IF NOT EXISTS Attachments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	FILE_ID BIGINT NOT NULL,
	CONSTRAINT ATTACHEMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ATTACHEMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ATTACHEMENTS_FK_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile (FILE_ID)
);

-- Create Notes Table
CREATE TABLE IF NOT EXISTS Notes (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	CREATED_BY BIGINT,
	CREATED_TIME BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000) NOT NULL,
	CONSTRAINT NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID)
);

CREATE TABLE IF NOT EXISTS Energy_Data (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	CREATED_TIME BIGINT,
	MARKED BOOLEAN,
	PARENT_METER_ID BIGINT NOT NULL,
	TOTAL_ENERGY_CONSUMPTION DOUBLE,
	TOTAL_ENERGY_CONSUMPTION_DELTA DOUBLE DEFAULT 0,
	LINE_VOLTAGE_R DOUBLE,
	LINE_VOLTAGE_Y DOUBLE,
	LINE_VOLTAGE_B DOUBLE,
	PHASE_VOLTAGE_R DOUBLE,
	PHASE_VOLTAGE_Y DOUBLE,
	PHASE_VOLTAGE_B DOUBLE,
	LINE_CURRENT_R DOUBLE,
	LINE_CURRENT_Y DOUBLE,
	LINE_CURRENT_B DOUBLE,
	POWER_FACTOR_R DOUBLE,
	POWER_FACTOR_Y DOUBLE,
	POWER_FACTOR_B DOUBLE,
	FREQUENCY_R DOUBLE,
	FREQUENCY_Y DOUBLE,
	FREQUENCY_B DOUBLE,
	ACTIVE_POWER_R DOUBLE,
	ACTIVE_POWER_Y DOUBLE,
	ACTIVE_POWER_B DOUBLE,
	REACTIVE_POWER_R DOUBLE,
	REACTIVE_POWER_Y DOUBLE,
	REACTIVE_POWER_B DOUBLE,
	APPARENT_POWER_R DOUBLE,
	APPARENT_POWER_Y DOUBLE,
	APPARENT_POWER_B DOUBLE,
	PHASE_ENERGY_R DOUBLE,
	PHASE_ENERGY_R_DELTA DOUBLE,
	PHASE_ENERGY_Y DOUBLE,
	PHASE_ENERGY_Y_DELTA DOUBLE,
	PHASE_ENERGY_B DOUBLE,
	PHASE_ENERGY_B_DELTA DOUBLE,
	TOTAL_DEMAND DOUBLE,
	DECIMAL_CF1 DOUBLE,
	DECIMAL_CF2 DOUBLE,
	DECIMAL_CF3 DOUBLE,
	DECIMAL_CF4 DOUBLE,
	DECIMAL_CF5 DOUBLE,
	DECIMAL_CF6 DOUBLE,
	DECIMAL_CF7 DOUBLE,
	DECIMAL_CF8 DOUBLE,
	DECIMAL_CF9 DOUBLE,
	DECIMAL_CF10 DOUBLE,
	CONSTRAINT ENERGY_DATA_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ENERGY_DATA_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ENERGY_DATA_FK_PARENT_DEVICE_ID FOREIGN KEY (PARENT_METER_ID) REFERENCES Energy_Meter(ID)
);
-- Create indexes for Energy_Data table
CREATE INDEX ENERGY_DATA_PARENT_ID_INDEX on Energy_Data (PARENT_METER_ID);
CREATE INDEX ENERGY_DATA_PARENT_METER_ID_TTIME_INDEX ON Energy_Data (ORGID, MODULEID, PARENT_METER_ID, TTIME);
CREATE INDEX ENERGY_DATA_TTIME_INDEX ON Energy_Data (ORGID, MODULEID, TTIME);

-- Trigger change starts..
-- Create trigger for calculating TOTAL_ENERGY_CONSUMPTION_DELTA in Energy_Data table
-- DELIMITER $$
-- CREATE TRIGGER calculate_delta BEFORE INSERT ON Energy_Data FOR EACH ROW
-- BEGIN
-- DECLARE PREV_ENERGY_CONSUMPTION DOUBLE;
-- SELECT TOTAL_ENERGY_CONSUMPTION INTO PREV_ENERGY_CONSUMPTION FROM Energy_Data WHERE PARENT_METER_ID = NEW.PARENT_METER_ID ORDER BY TTIME DESC LIMIT 1;
-- IF (PREV_ENERGY_CONSUMPTION IS NOT NULL  AND NEW.TOTAL_ENERGY_CONSUMPTION_DELTA IS NULL ) THEN
-- IF( NEW.TOTAL_ENERGY_CONSUMPTION - PREV_ENERGY_CONSUMPTION > -1 ) THEN
-- SET NEW.TOTAL_ENERGY_CONSUMPTION_DELTA = NEW.TOTAL_ENERGY_CONSUMPTION - PREV_ENERGY_CONSUMPTION;
-- ELSE
-- SET NEW.TOTAL_ENERGY_CONSUMPTION_DELTA =0;
-- END IF;
-- END IF;	
-- END; $$
-- DELIMITER ;
-- Trigger change Ends..
CREATE TABLE IF NOT EXISTS Criteria (
	CRITERIAID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	PATTERN VARCHAR(100),
	FORMULA_ID BIGINT DEFAULT NULL,
	CONSTRAINT CRITERIA_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Conditions (
	CONDITIONID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	PARENT_CRITERIA_ID BIGINT NOT NULL,
	SEQUENCE TINYINT NOT NULL,
	FIELD_NAME VARCHAR(50) NOT NULL,
	COLUMN_NAME VARCHAR(50) NOT NULL,
	OPERATOR INT NOT NULL,
	VAL VARCHAR(500),
	CRITERIA_VAL_ID  BIGINT,
	IS_EXPRESSION_VALUE BOOLEAN,
	COMPUTED_WHERE_CLAUSE VARCHAR(2000),
	CONSTRAINT CONDITIONS_PARENT_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CONDITIONS_PARENT_CRITERIA_ID_FK FOREIGN KEY (PARENT_CRITERIA_ID) REFERENCES Criteria(CRITERIAID) ON DELETE CASCADE,
	CONSTRAINT CONDITIONS_CRITERIA_VAL_ID_FK FOREIGN KEY (CRITERIA_VAL_ID) REFERENCES Criteria(CRITERIAID)
);

CREATE TABLE IF NOT EXISTS Views (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	DISPLAY_NAME VARCHAR(50),
	VIEW_TYPE TINYINT NOT NULL,
	MODULEID BIGINT,
	MODULENAME varchar(100),
	CRITERIAID BIGINT,
	ISDEFAULT BOOLEAN,
	SEQUENCE_NUMBER INT,
	ISHIDDEN BOOLEAN DEFAULT FALSE,
	ISPRIMARY BOOLEAN DEFAULT FALSE,
	CONSTRAINT VIEWS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT VIEWS_MODULEID_FK FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT VIEWS_CRITERIAID_FK FOREIGN KEY (CRITERIAID) REFERENCES Criteria(CRITERIAID),
	CONSTRAINT VIEWS_NAME_UNIQUE UNIQUE(ORGID, MODULEID, NAME)
);

CREATE TABLE IF NOT EXISTS View_Sort_Columns (
	ID BIGINT AUTO_INCREMENT NOT NULL,
	ORGID BIGINT NOT NULL,
	VIEWID BIGINT NOT NULL,
	FIELDID BIGINT NOT NULL,
	IS_ASCENDING BOOLEAN NOT NULL,
	PRIMARY KEY (VIEWID, FIELDID),
	CONSTRAINT VIEW_SORT_COLUMNS_ID_UNIQUE UNIQUE(ID),
	CONSTRAINT VIEW_SORT_COLUMN_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT VIEW_SORT_COLUMN_VIEWID_FK FOREIGN KEY (VIEWID) REFERENCES Views(ID) ON DELETE CASCADE,
	CONSTRAINT VIEW_SORT_COLUMN_FIELDID_FK FOREIGN KEY (FIELDID) REFERENCES Fields(FIELDID) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS ImportProcess (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT,
	STATUS INT,
	COLUMN_HEADING VARCHAR(5000),
	FILE_PATH VARCHAR(100),
	FILEID BIGINT,
	FILE_PATH_FAILED VARCHAR(100),
	FIELD_MAPPING VARCHAR(5000),
	IMPORT_TIME BIGINT,
	IMPORT_TYPE INT,
	IMPORT_JOB_META VARCHAR(5000),
	IMPORT_SETTING INT,
	MAIL_SETTING INT,
	IMPORT_MODE INT,
	TEMPLATE_ID BIGINT DEFAULT NULL,
	CONSTRAINT IMPORT_PROCESS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT IMPORT_PROCESS_MODULEID_FK FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT IMPORT_ORGFILE_FK_ORGID FOREIGN KEY (FILEID) REFERENCES FacilioFile(FILE_ID)
);


CREATE TABLE IF NOT EXISTS ImportTemplate(
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	TEMPLATE_NAME VARCHAR(1000) DEFAULT NULL,
	MODULE VARCHAR(10000) DEFAULT NULL,
	UNIQUE_MAPPING VARCHAR(3000) DEFAULT NULL,
	FIELD_MAPPING VARCHAR(3000) DEFAULT NULL,
	SYS_SHOW TINYINT DEFAULT NULL,
	TEMPLATE_META VARCHAR(3000) DEFAULT NULL,
	CONSTRAINT IMPORT_TEMPLATE_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS ImportProcessLog (
  ID bigint(20) NOT NULL AUTO_INCREMENT,
  ORGID bigint(20) NOT NULL,
  IMPORTID bigint(20) DEFAULT NULL,
  TEMPLATEID bigint(20) DEFAULT NULL,
  ROW_TOTAL bigint(20) DEFAULT NULL,
  GROUPED_ROWS varchar(10000) DEFAULT NULL,
  ERROR_RESOLVED int(2) DEFAULT NULL,
  CORRECTED_ROW varchar(5000) DEFAULT NULL,
  PARENTID bigint(20) DEFAULT NULL,
  TTIME bigint(20) DEFAULT NULL,
  IMPORT_MODE int(10) DEFAULT 1,
  PRIMARY KEY (ID),
  CONSTRAINT IMPORT_READING_IMPORTID FOREIGN KEY (IMPORTID) REFERENCES ImportProcess(ID),
  CONSTRAINT IMPORT_READING_TEMPLATEID FOREIGN KEY (TEMPLATEID) REFERENCES ImportTemplate(ID),
  CONSTRAINT IMPORT_READING_PARENT FOREIGN KEY (PARENTID) REFERENCES Resources(ID)
);

CREATE TABLE IF NOT EXISTS Expression (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  EXPRESSION_STRING VARCHAR(5000) DEFAULT NULL,
  CONSTRAINT EXPRESSION_ORG_ID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID)
);

CREATE TABLE IF NOT EXISTS Formula_Field (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(500),
	FORMULA_FIELD_TYPE TINYINT NOT NULL,
	WORKFLOW_ID BIGINT NOT NULL,
	TRIGGER_TYPE TINYINT NOT NULL,
	FREQUENCY_TYPE TINYINT,
	DATA_INTERVAL INT,
	MODULE_ID BIGINT NOT NULL,
	READING_FIELD_ID BIGINT NOT NULL,
	RESOURCE_TYPE TINYINT NOT NULL,
	RESOURCE_ID BIGINT,
	ASSET_CATEGORY_ID BIGINT,
	SPACE_CATEGORY_ID BIGINT,
	ACTIVE BOOLEAN NOT NULL,
	CONSTRAINT FORMULA_FIELD_FK_ORG_ID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT FORMULA_FIELD_FK_WORKFLOW_ID FOREIGN KEY (WORKFLOW_ID) REFERENCES Workflow (ID),
	CONSTRAINT FORMULA_FIELD_FK_MODULE_ID FOREIGN KEY (MODULE_ID) REFERENCES Modules (MODULEID),
	CONSTRAINT FORMULA_FIELD_FK_READING_FIELD_ID FOREIGN KEY (READING_FIELD_ID) REFERENCES Fields (FIELDID),
	CONSTRAINT FORMULA_FIELD_FK_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources (ID),
	CONSTRAINT FORMULA_FIELD_FK_ASSET_CATEGORY_ID FOREIGN KEY (ASSET_CATEGORY_ID) REFERENCES Asset_Categories(ID),
	CONSTRAINT FORMULA_FIELD_FK_SPACE_CATEGORY_ID FOREIGN KEY (SPACE_CATEGORY_ID) REFERENCES Space_Category(ID)
);

CREATE TABLE IF NOT EXISTS Formula_Field_Inclusions (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	FORMULA_FIELD_ID BIGINT NOT NULL,
	RESOURCE_ID BIGINT NOT NULL,
	CONSTRAINT FORMULA_FIELD_INCLUSIONS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT FORMULA_FIELD_INCLUSIONS_FK_RULE_ID FOREIGN KEY (FORMULA_FIELD_ID) REFERENCES Formula_Field(ID) ON DELETE CASCADE,
	CONSTRAINT FORMULA_FIELD_INCLUSIONS_FK_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources(ID),
	CONSTRAINT FORMULA_FIELD_INCLUSIONS_UNIQUE UNIQUE (FORMULA_FIELD_ID, RESOURCE_ID)
);

CREATE TABLE IF NOT EXISTS Formula_Field_Resource_Jobs (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	FORMULA_FIELD_ID BIGINT NOT NULL,
	RESOURCE_ID BIGINT NOT NULL,
	START_TIME BIGINT NOT NULL,
	END_TIME BIGINT NOT NULL,
	IS_SYSTEM BOOLEAN NOT NULL,
	CALCULATE_HISTORICAL_ALARM BOOLEAN,
	SKIP_OPTIMISED_WORKFLOW BOOLEAN,
	CONSTRAINT FORMULA_FIELD_RESOURCE_JOBS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT FORMULA_FIELD_RESOURCE_JOBS_FK_RULE_ID FOREIGN KEY (FORMULA_FIELD_ID) REFERENCES Formula_Field(ID) ON DELETE CASCADE,
	CONSTRAINT FORMULA_FIELD_RESOURCE_JOBS_FK_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources(ID),
	CONSTRAINT FORMULA_FIELD_RESOURCE_JOBS_UNIQUE UNIQUE (FORMULA_FIELD_ID, RESOURCE_ID, IS_SYSTEM)
);

CREATE TABLE IF NOT EXISTS Workflow_Event (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTIVITY_TYPE INT NOT NULL,
	CONSTRAINT WORKFLOW_EVENT_UNIQUE UNIQUE (MODULEID, ACTIVITY_TYPE),
	CONSTRAINT WORKFLOW_EVENT_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WORKFLOW_EVENT_MODULEID_FK FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID)
);


CREATE TABLE IF NOT EXISTS Templates (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(500) NOT NULL,
	TEMPLATE_TYPE INT,
	PLACEHOLDER VARCHAR(250),
	WORKFLOW_ID BIGINT,
	IS_FTL BOOLEAN,
	CONSTRAINT TEMPLATES_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TEMPLATES_WORKFLOW_ID_FK FOREIGN KEY (WORKFLOW_ID) REFERENCES Workflow(ID)
);

CREATE TABLE IF NOT EXISTS EMail_Templates (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	FROM_ADDR VARCHAR(50) NOT NULL,
	TO_ADDR VARCHAR(100) NOT NULL,
	SUBJECT VARCHAR(100),
	BODY_ID BIGINT NOT NULL,
	CONSTRAINT EMAIL_TEMPLATES_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT EMAIL_TEMPLATES_ID_FK FOREIGN KEY (ID) REFERENCES Templates(ID) ON DELETE CASCADE,
	CONSTRAINT EMAIL_TEMPLATES_BODY_FK FOREIGN KEY (BODY_ID) REFERENCES FacilioFile(FILE_ID)
);

CREATE TABLE IF NOT EXISTS Workflow_Template (
  ID BIGINT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  WORKFLOW_ID BIGINT NOT NULL,
  META varchar(1000) DEFAULT NULL,
  CONSTRAINT Workflow_Template_id FOREIGN KEY (ID) REFERENCES Templates (ID) ON DELETE CASCADE,
  CONSTRAINT Workflow_Template_orgid FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT Workflow_Template_workflow_id FOREIGN KEY (WORKFLOW_ID) REFERENCES Workflow (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS Control_Action_Template (
    ID BIGINT PRIMARY KEY,
    ORGID BIGINT NOT NULL,
    ASSET_CATEGORY BIGINT,
    METRIC VARCHAR(250) NOT NULL,
    RESOURCE VARCHAR(250) NOT NULL,
    VAL VARCHAR(250) NOT NULL,
    CONSTRAINT CONTROL_ACTION_TEMPLATE_ID_FK FOREIGN KEY (ID) REFERENCES Templates (ID) ON DELETE CASCADE,
    CONSTRAINT CONTROL_ACTION_TEMPLATE_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
    CONSTRAINT CONTROL_ACTION_TEMPLATE_ASSET_CATEGORY_FK FOREIGN KEY (ASSET_CATEGORY) REFERENCES Asset_Categories (ID)
);

CREATE TABLE IF NOT EXISTS SMS_Templates (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	FROM_NUM VARCHAR(50),
	TO_NUM VARCHAR(100) NOT NULL,
	MSG VARCHAR(500) NOT NULL,
	CONSTRAINT SMS_TEMPLATES_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT SMS_TEMPLATES_ID_FK FOREIGN KEY (ID) REFERENCES Templates(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Assignment_Templates (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	USERID BIGINT,
	GROUPID BIGINT,
	CONSTRAINT ASSIGNMENT_TEMPLATES_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ASSIGNMENT_TEMPLATES_ID_FK FOREIGN KEY (ID) REFERENCES Templates(ID) ON DELETE CASCADE,
	CONSTRAINT ASSIGNMENT_TEMPLATES_USER_FK FOREIGN KEY (USERID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT ASSIGNMENT_TEMPLATES_GROUP_FK FOREIGN KEY (GROUPID) REFERENCES `Groups`(GROUPID)
);

CREATE TABLE IF NOT EXISTS SLA_Templates (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SLAPOLICYJSON VARCHAR(1000),
	CONSTRAINT SLA_TEMPLATES_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT SLA_TEMPLATES_ID_FK FOREIGN KEY (ID) REFERENCES Templates(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Push_Notification_Templates (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	TO_UID VARCHAR(100) NOT NULL,
	MSG VARCHAR(5000) NOT NULL,
	TITLE VARCHAR(250),
	URL VARCHAR(250),
	CONSTRAINT PUSH_NOTIFICATION_TEMPLATE_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT PUSH_NOTIFICATION_TEMPLATE_ID_FK FOREIGN KEY (ID) REFERENCES Templates(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Web_Notification_Templates (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	TO_UID VARCHAR(100) NOT NULL,
	MSG VARCHAR(250) NOT NULL,
	TITLE VARCHAR(250),
	URL VARCHAR(250),
	CONSTRAINT WEB_NOTIFICATION_TEMPLATE_ORGID_FK FOREIGN KEY  (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WEB_NOTIFICATION_TEMPLATE_ID_FK FOREIGN KEY (ID) REFERENCES Templates(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS JSON_Template (
  	ID BIGINT PRIMARY KEY,
  	ORGID BIGINT NOT NULL,
  	CONTENT_ID BIGINT NOT NULL,
  	CONSTRAINT JSON_TEMPLATE_ORGID_FK FOREIGN KEY (ORGID)  REFERENCES Organizations(ORGID),
  	CONSTRAINT JSON_TEMPLATE_ID_FK FOREIGN KEY (ID) REFERENCES Templates(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Workorder_Template (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SUBJECT VARCHAR(300),
	DESCRIPTION VARCHAR(2000),
	STATUS_ID BIGINT,
	PRIORITY_ID BIGINT,
	CATEGORY_ID BIGINT,
	TYPE_ID BIGINT,
	ASSIGNMENT_GROUP_ID BIGINT,
	ASSIGNED_TO_ID BIGINT,
	RESOURCE_ID BIGINT,
	DURATION BIGINT, 
	REQUESTER_ID BIGINT,
	ADDITIONAL_INFO VARCHAR(5000),
	SITE_ID BIGINT,
	TENANT_ID BIGINT,
	CONSTRAINT WORKORDER_TEMPLATE_FK_ORGID FOREIGN KEY  (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WORKORDER_TEMPLATE_FK_STATUS_ID FOREIGN KEY (STATUS_ID) REFERENCES TicketStatus(ID),
	CONSTRAINT WORKORDER_TEMPLATE_FK_PRIORITY_ID FOREIGN KEY (PRIORITY_ID) REFERENCES TicketPriority(ID),
	CONSTRAINT WORKORDER_TEMPLATE_FK_CATEGORY_ID FOREIGN KEY (CATEGORY_ID) REFERENCES TicketCategory(ID),
	CONSTRAINT WORKORDER_TEMPLATE_FK_TYPE_ID FOREIGN KEY (TYPE_ID) REFERENCES TicketType(ID),
	CONSTRAINT WORKORDER_TEMPLATE_FK_ASSIGNMENT_GROUP FOREIGN KEY (ASSIGNMENT_GROUP_ID) REFERENCES `Groups`(GROUPID),
	CONSTRAINT WORKORDER_TEMPLATE_FK_ASSIGNED_TO_ID FOREIGN KEY (ASSIGNED_TO_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT WORKORDER_TEMPLATE_FK_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources(ID),
	CONSTRAINT WORKORDER_TEMPLATE_FK_REQUESTER_ID FOREIGN KEY (REQUESTER_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT WORKORDER_TEMPLATE_FK_ID FOREIGN KEY (ID) REFERENCES Templates(ID) ON DELETE CASCADE,
	CONSTRAINT WORKORDER_TEMPLATE_FK_TENANT_ID FOREIGN KEY (TENANT_ID) REFERENCES Tenants(ID),
	CONSTRAINT WORKOREDER_TEMPLATE_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS Task_Section_Template (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	IS_EDITABLE BOOLEAN,
	PARENT_WO_TEMPLATE_ID BIGINT,
	SEQUENCE_NUMBER INT,
	ASSIGNMENT_TYPE INT DEFAULT NULL,
  	ASSET_CATEGORY_ID BIGINT DEFAULT NULL,
  	SPACE_CATEGORY_ID BIGINT DEFAULT NULL,
  	RESOURCE_ID BIGINT DEFAULT NULL,
  	INPUT_TYPE INT DEFAULT NULL,
	ADDITIONAL_INFO VARCHAR(5000) DEFAULT NULL,
	ATTACHMENT_REQUIRED INT DEFAULT NULL,
	CONSTRAINT TASK_SECTION_TEMPLATE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TASK_SECTION_TEMPLATE_FK_ID FOREIGN KEY (ID) REFERENCES Templates(ID) ON DELETE CASCADE,
	CONSTRAINT Task_Section_Template_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources (ID),
  	CONSTRAINT Task_Section_Template_ASSET_CATEGORY_ID FOREIGN KEY (ASSET_CATEGORY_ID) REFERENCES Asset_Categories (ID),
  	CONSTRAINT Task_Section_Template_SPACE_CATEGORY_ID FOREIGN KEY (SPACE_CATEGORY_ID) REFERENCES Space_Category (ID),
	CONSTRAINT TASK_SECTION_TEMPLATE_FK_PARENT_WO_TEMPLATE_ID FOREIGN KEY (PARENT_WO_TEMPLATE_ID) REFERENCES Workorder_Template (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Task_Template (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	DESCRIPTION VARCHAR(1000),
	STATUS TINYINT DEFAULT 1,
	PRIORITY_ID BIGINT,
	CATEGORY_ID BIGINT,
	TYPE_ID BIGINT,
	ASSIGNMENT_GROUP_ID BIGINT,
	ASSIGNED_TO_ID BIGINT,
	RESOURCE_ID BIGINT,
	DURATION BIGINT, 
	PARENT_WO_TEMPLATE_ID BIGINT,
	INPUT_TYPE TINYINT,
	READING_ID BIGINT,
	SECTION_ID BIGINT,
	SEQUENCE INT,
	ATTACHMENT_REQUIRED INT,
	ADDITIONAL_INFO VARCHAR(5000),
	SITE_ID BIGINT,
	ASSIGNMENT_TYPE INT DEFAULT NULL,
  	ASSET_CATEGORY_ID BIGINT DEFAULT NULL,
  	SPACE_CATEGORY_ID BIGINT DEFAULT NULL,
  	CONSTRAINT TASK_TEMPLATE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID), 
	CONSTRAINT TASK_TEMPLATE_FK_ID FOREIGN KEY (ID) REFERENCES Templates(ID) ON DELETE CASCADE,
	CONSTRAINT TASK_TEMPLATE_FK_PRIORITY_ID FOREIGN KEY (PRIORITY_ID) REFERENCES TicketPriority(ID),
	CONSTRAINT TASK_TEMPLATE_FK_CATEGORY_ID FOREIGN KEY (CATEGORY_ID) REFERENCES TicketCategory(ID),
	CONSTRAINT TASK_TEMPLATE_FK_TYPE_ID FOREIGN KEY (TYPE_ID) REFERENCES TicketType(ID),
	CONSTRAINT TASK_TEMPLATE_FK_ASSIGNMENT_GROUP FOREIGN KEY (ASSIGNMENT_GROUP_ID) REFERENCES `Groups`(GROUPID),
	CONSTRAINT TASK_TEMPLATE_FK_ASSIGNED_TO_ID FOREIGN KEY (ASSIGNED_TO_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT TASK_TEMPLATE_FK_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources(ID),
	CONSTRAINT TASK_TEMPLATE_FK_PARENT_WO_TEMPLATE_ID FOREIGN KEY (PARENT_WO_TEMPLATE_ID) REFERENCES Workorder_Template (ID) ON DELETE CASCADE,
	CONSTRAINT TASK_TEMPLATE_FK_READING_ID FOREIGN KEY (READING_ID) REFERENCES Fields(FIELDID),
	CONSTRAINT TASK_TEMPLATE_FK_SECTION_ID FOREIGN KEY (SECTION_ID) REFERENCES Task_Section_Template(ID) ON DELETE CASCADE,
	CONSTRAINT Task_Template_ASSET_CATEGORY_ID FOREIGN KEY (ASSET_CATEGORY_ID) REFERENCES Asset_Categories (ID),
  	CONSTRAINT Task_Template_SPACE_CATEGORY_ID FOREIGN KEY (SPACE_CATEGORY_ID) REFERENCES Space_Category (ID),
	CONSTRAINT TASK_TEMPLATE_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS Action (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	ACTION_TYPE INT NOT NULL,
	DEFAULT_TEMPLATE_ID INT,
	TEMPLATE_ID BIGINT,
	STATUS BOOLEAN,
	CONSTRAINT ACTION_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ACTION_TEMPLATE_FK FOREIGN KEY (TEMPLATE_ID) REFERENCES Templates(ID)
);

CREATE TABLE IF NOT EXISTS Workflow_Rule (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	NAME VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(1000),
	EVENT_ID BIGINT,
	CRITERIAID BIGINT,
	WORKFLOW_ID BIGINT,
	EXECUTION_ORDER INT,
	STATUS BOOLEAN,
	RULE_TYPE INT NOT NULL,
	PARENT_RULE_ID BIGINT,
	ON_SUCCESS BOOLEAN,
	VERSION_GROUP_ID BIGINT,
	VERSION_NO INT,
	IS_LATEST_VERSION BOOLEAN NOT NULL,
	SCHEDULE_INFO VARCHAR(1000) DEFAULT NULL,
	DATE_FIELD_ID BIGINT,
	SCHEDULE_TYPE BIGINT,
	TIME_INTERVAL BIGINT,
	JOB_TIME VARCHAR(5),
	CREATED_TIME BIGINT,
	MODIFIED_TIME BIGINT,
	CONSTRAINT WORKFLOW_RULE_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WORKFLOW_RULE_SITE_ID_FK FOREIGN KEY (SITE_ID) REFERENCES Site (ID),
	CONSTRAINT WORKFLOW_RULE_EVENT_ID_FK FOREIGN KEY (EVENT_ID) REFERENCES Workflow_Event(ID) ON DELETE CASCADE,
	CONSTRAINT WORKFLOW_RULE_CRITERIAID_FK FOREIGN KEY (CRITERIAID) REFERENCES Criteria(CRITERIAID),
	CONSTRAINT WORKFLOW_RULE_WORKFLOW_ID_FK FOREIGN KEY (WORKFLOW_ID) REFERENCES Workflow(ID),
	CONSTRAINT WORKFLOW_RULE_PARENT_RULE_ID_FK FOREIGN KEY (PARENT_RULE_ID) REFERENCES Workflow_Rule(ID) ON DELETE CASCADE,
	CONSTRAINT WORKFLOW_RULE_DATE_FIELD_ID_FK FOREIGN KEY (DATE_FIELD_ID) REFERENCES Fields(FIELDID)
);

CREATE TABLE IF NOT EXISTS Workflow_Field_Change_Fields (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	RULE_ID BIGINT NOT NULL,
	FIELD_ID BIGINT NOT NULL,
	OLD_VALUE VARCHAR(500),
	NEW_VALUE VARCHAR(500),
	CONSTRAINT WORKFLOW_FIELD_CHANGE_FIELDS_UNIQUE UNIQUE (ORGID, RULE_ID, FIELD_ID),
	CONSTRAINT WORKFLOW_FIELD_CHANGE_FIELDS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WORKFLOW_FIELD_CHANGE_FIELDS_RULE_ID_FK FOREIGN KEY (RULE_ID) REFERENCES Workflow_Rule (ID) ON DELETE CASCADE,
	CONSTRAINT WORKFLOW_FIELD_CHANGE_FIELDS_FIELD_ID_FK FOREIGN KEY (FIELD_ID) REFERENCES Fields (FIELDID)
);

CREATE TABLE IF NOT EXISTS Workflow_Rule_Action (
	WORKFLOW_RULE_ACTION_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	WORKFLOW_RULE_ID BIGINT NOT NULL,
	ACTION_ID BIGINT NOT NULL,
	CONSTRAINT WORKFLOW_ACTION_RULE_WORKFLOW_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WORKFLOW_ACTION_RULE_WORKFLOW_ID_FK FOREIGN KEY (WORKFLOW_RULE_ID) REFERENCES Workflow_Rule(ID) ON DELETE CASCADE,
	CONSTRAINT WORKFLOW_ACTION_RULE_ACTION_ID_FK FOREIGN KEY (ACTION_ID) REFERENCES Action(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Excel_Templates (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	EXCEL_FILE_ID BIGINT,
	CONSTRAINT EXCEL_TEMPLATES_ORGID_FK FOREIGN KEY (ORGID)REFERENCES Organizations(ORGID), 
	CONSTRAINT EXCEL_TEMPLATES_ID_FK FOREIGN KEY (ID) REFERENCES Templates(ID) ON DELETE CASCADE,
	CONSTRAINT EXCEL_FILE_ID_FK FOREIGN KEY (EXCEL_FILE_ID) REFERENCES FacilioFile(FILE_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Excel_PlaceHolders (
	TEMPLATEID BIGINT,
	ORGID BIGINT NOT NULL,
	PLACEHOLDERNAME VARCHAR(50),
	CELLDATA VARCHAR(50),
	CONSTRAINT TEMPLATE_EXCELPLACEHOLDER_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TEMPLATE_EXCELPLACEHOLDER_ID_FK FOREIGN KEY (TEMPLATEID) REFERENCES Excel_Templates(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Tenant (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(50),
	ADDRESS VARCHAR(100),
	CONTACTEMAIL VARCHAR(50),
	CONTACTNUMBER VARCHAR(50),
	TEMPLATEID BIGINT,
	CONSTRAINT TENANT_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT BILL_TENANTS_ID_FK FOREIGN KEY (TEMPLATEID) REFERENCES Excel_Templates(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS TenantZones (
	TENANT_ID BIGINT,
	ORGID BIGINT NOT NULL,
  	ZONE_ID BIGINT,
	PRIMARY KEY(TENANT_ID,ZONE_ID),
	CONSTRAINT TENANT_TENANTZONE_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  	CONSTRAINT TENANT_TENANTZONE_ID_FK FOREIGN KEY (TENANT_ID) REFERENCES Tenant(ID) ON DELETE CASCADE,
  	CONSTRAINT ZONE_TENANTZONE_ID_FK FOREIGN KEY (ZONE_ID) REFERENCES Zone(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS TenantMeters (
	TENANT_ID BIGINT,
	ORGID BIGINT NOT NULL,
  	METER_ID BIGINT,
	PRIMARY KEY(TENANT_ID,METER_ID),
	CONSTRAINT TENANT_TENANTMETER_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  	CONSTRAINT TENANT_TENANTMETER_ID_FK FOREIGN KEY (TENANT_ID) REFERENCES Tenant(ID) ON DELETE CASCADE,
  	CONSTRAINT METER_TENANTMETER_ID_FK FOREIGN KEY (METER_ID) REFERENCES Energy_Meter(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Preventive_Maintenance (
  	ID BIGINT PRIMARY KEY,
  	ORGID BIGINT NOT NULL,
  	TITLE VARCHAR(250) NOT NULL,
  	STATUS BOOLEAN,
	CREATED_BY BIGINT NOT NULL,
	MODIFIED_BY BIGINT,
	CREATION_TIME BIGINT NOT NULL,
	LAST_MODIFIED_TIME BIGINT,
	TEMPLATE_ID BIGINT,
	TRIGGER_TYPE TINYINT NOT NULL,
	END_TIME BIGINT,
	CURRENT_EXECUTION_COUNT INT,
	MAX_COUNT INT,
	WAIT_FOR_ALL_TRIGGERS BOOLEAN,
	FREQUENCY_TYPE TINYINT,
	IS_CUSTOM BOOLEAN,
	SITE_ID BIGINT,
	ASSIGNMENT_TYPE TINYINT DEFAULT NULL,
  	BASE_SPACE_ID BIGINT DEFAULT NULL,
  	PM_CREARTION_TYPE TINYINT DEFAULT NULL,
  	ASSET_CATEGORY_ID BIGINT DEFAULT NULL,
  	SPACE_CATEGORY_ID BIGINT DEFAULT NULL,
  	PREVENT_ON_NO_TASK BOOLEAN DEFAULT FALSE,
  	WO_GENERATION_STATUS BOOLEAN NOT NULL DEFAULT FALSE,
	CONSTRAINT PREVENTIVE_MAINTENANCE_FK_ID FOREIGN KEY (ID) REFERENCES Resources(ID) ON DELETE CASCADE,
	CONSTRAINT PREVENTIVE_MAINTENANCE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT PREVENTIVE_MAINTENANCE_FK_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT PREVENTIVE_MAINTENANCE_FK_MODIFIED_BY FOREIGN KEY (MODIFIED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT PREVENTIVE_MAINTENANCE_FK_TEMPLATE_ID FOREIGN KEY (TEMPLATE_ID) REFERENCES Templates(ID),
	CONSTRAINT PREVENTIVE_MAINTENANCE_FK_BASESPACE_ID FOREIGN KEY (BASE_SPACE_ID) REFERENCES BaseSpace (ID),
	CONSTRAINT PREVENTIVE_MAINTENANCE_FK_ASSET_CATEGORY_ID FOREIGN KEY (ASSET_CATEGORY_ID) REFERENCES Asset_Categories (ID),
	CONSTRAINT PREVENTIVE_MAINTENANCE_FK_SPACE_CATEGORY_ID FOREIGN KEY (SPACE_CATEGORY_ID) REFERENCES Space_Category (ID),
	CONSTRAINT PREVENTIVE_MAINTENANCE_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);


CREATE TABLE IF NOT EXISTS PM_Include_Exclude_Resource (
  ID BIGINT PRIMARY KEY AUTO_INCREMENT,
  ORGID BIGINT NOT NULL,
  PARENT_TYPE INT DEFAULT NULL,
  PM_ID BIGINT DEFAULT NULL,
  TASK_SECTION_TEMPLATE_ID BIGINT DEFAULT NULL,
  TASK_TEMPLATE_ID BIGINT DEFAULT NULL,
  RESOURCE_ID BIGINT DEFAULT NULL,
  IS_INCLUDE TINYINT DEFAULT NULL,
   CONSTRAINT PM_INCLUDE_EXCLUDE_RESOURCE_PM_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT PM_INCLUDE_EXCLUDE_RESOURCE_PM_ID FOREIGN KEY (PM_ID) REFERENCES Preventive_Maintenance (ID) ON DELETE CASCADE,
  CONSTRAINT PM_INCLUDE_EXCLUDE_RESOURCE_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources (ID),
  CONSTRAINT PM_INCLUDE_EXCLUDE_RESOURCE_TASK_SECTION_ID FOREIGN KEY (TASK_SECTION_TEMPLATE_ID) REFERENCES Task_Section_Template (ID),
  CONSTRAINT PM_INCLUDE_EXCLUDE_RESOURCE_TASK_TEMPLATE_ID FOREIGN KEY (TASK_TEMPLATE_ID) REFERENCES Task_Template (ID)
);

CREATE TABLE IF NOT EXISTS Approval_Rules (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	APPROVAL_RULE_ID BIGINT,
	REJECTION_RULE_ID BIGINT,
	APPROVAL_FORM_ID BIGINT,
	REJECTION_FORM_ID BIGINT,
	APPROVAL_BUTTON VARCHAR(50),
	REJECTION_BUTTON VARCHAR(50),
	ALL_APPROVAL_REQUIRED BOOLEAN,
	APPROVAL_ORDER TINYINT,
	CONSTRAINT APPROVAL_RULES_FK_ID FOREIGN KEY (ID) REFERENCES Workflow_Rule(ID) ON DELETE CASCADE,
	CONSTRAINT APPROVAL_RULES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT APPROVAL_RULES_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site (ID),
	CONSTRAINT APPROVAL_RULES_FK_APPROVAL_RULE_ID FOREIGN KEY (APPROVAL_RULE_ID) REFERENCES Workflow_Rule(ID),
	CONSTRAINT APPROVAL_RULES_FK_REJECTION_RULE_ID FOREIGN KEY (REJECTION_RULE_ID) REFERENCES Workflow_Rule(ID),
	CONSTRAINT APPROVAL_RULES_FK_APPROVAL_FORM_ID FOREIGN KEY (APPROVAL_FORM_ID) REFERENCES Forms(ID),
	CONSTRAINT APPROVAL_RULES_FK_REJECTION_FORM_ID FOREIGN KEY (REJECTION_FORM_ID) REFERENCES Forms(ID)
);

CREATE TABLE IF NOT EXISTS Approvers (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	ORG_USERID BIGINT, 
	ROLE_ID BIGINT,
	GROUP_ID BIGINT,
	FIELD_ID BIGINT,
	SHARING_TYPE TINYINT NOT NULL,
	CONSTRAINT APPROVERS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT APPROVERS_FK_ID FOREIGN KEY (PARENT_ID) REFERENCES Approval_Rules(ID) ON DELETE CASCADE,
	CONSTRAINT APPROVERS_FK_ORG_USERID FOREIGN KEY (ORG_USERID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT APPROVERS_FK_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES Role(ROLE_ID),
	CONSTRAINT APPROVERS_FK_GROUP_ID FOREIGN KEY (GROUP_ID) REFERENCES `Groups`(GROUPID)
);

CREATE TABLE IF NOT EXISTS  Approver_Actions_Rel (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	APPROVER_ID BIGINT NOT NULL,
	ACTION_ID BIGINT NOT NULL,
	CONSTRAINT APPROVER_ACTIONS_REL_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT APPROVER_ACTIONS_REL_FK_APPROVER_ID FOREIGN KEY (APPROVER_ID) REFERENCES Approvers(ID) ON DELETE CASCADE,
	CONSTRAINT APPROVER_ACTIONS_REL_FK_ACTION_ID FOREIGN KEY (ACTION_ID) REFERENCES Action(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Approval_Steps (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	RULE_ID BIGINT NOT NULL,
	RECORD_ID BIGINT NOT NULL,
	ACTION_BY BIGINT,
	APPROVER_GROUP BIGINT,
	APPROVAL_ACTION TINYINT NOT NULL,
	ACTION_TIME BIGINT NOT NULL,
	CONSTRAINT APPROVAL_STEPS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT APPROVAL_STEPS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site (ID),
	CONSTRAINT APPROVAL_STEPS_FK_RULE_ID FOREIGN KEY (RULE_ID) REFERENCES Approval_Rules(ID) ON DELETE CASCADE,
	CONSTRAINT APPROVAL_STEPS_FK_ACTION_BY FOREIGN KEY (ACTION_BY) REFERENCES ORG_Users(ORG_USERID) ON DELETE SET NULL,
	CONSTRAINT APPROVAL_STEPS_FK_APPROVER_GROUP FOREIGN KEY (APPROVER_GROUP) REFERENCES Approvers(ID) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS PM_Triggers(
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(150) DEFAULT NULL,
	PM_ID BIGINT NOT NULL,
	SCHEDULE_INFO VARCHAR(1000),
	START_TIME BIGINT,
	TRIGGER_EXECUTION_SOURCE INT NOT NULL,
	RULE_ID BIGINT,
	TRIGGER_TYPE INT DEFAULT NULL,
	ASSIGNED_TO BIGINT DEFAULT NULL,
	FREQUENCY INT,
	IS_CUSTOM BOOLEAN,
	CONSTRAINT PM_TRIGGERS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT PM_TRIGGERS_FK_PM_ID FOREIGN KEY (PM_ID) REFERENCES Preventive_Maintenance(ID) ON DELETE CASCADE,
	CONSTRAINT PM_Triggers_ASSIGNED_TO FOREIGN KEY (ASSIGNED_TO) REFERENCES ORG_Users (ORG_USERID),
	CONSTRAINT PM_TRIGGERS_FK_RULE_ID FOREIGN KEY (RULE_ID) REFERENCES Workflow_Rule(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS WorkOrders (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	REQUESTER_ID BIGINT,
	CREATED_TIME BIGINT,
	MODIFIED_TIME BIGINT,
	PM_ID BIGINT,
	IS_WORKDURATION_CHANGE_ALLOWED BOOLEAN,
	APPROVAL_STATE TINYINT NOT NULL,
	APPROVAL_RULE_ID BIGINT,
	REQUESTED_BY_ID BIGINT,
	SEND_FOR_APPROVAL BOOLEAN,
	URGENCY TINYINT,
	IS_SIGNATURE_REQUIRED BOOLEAN,
	SIGNATURE_ID1 BIGINT,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	STRING_CF6 VARCHAR(50),
	STRING_CF7 VARCHAR(50),
	STRING_CF8 VARCHAR(50),
	STRING_CF9 VARCHAR(50),
	STRING_CF10 VARCHAR(50),
	STRING_CF11 VARCHAR(50),
	STRING_CF12 VARCHAR(50),
	STRING_CF13 VARCHAR(50),
	STRING_CF14 VARCHAR(50),
	STRING_CF15 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	NUMBER_CF6 BIGINT,
	NUMBER_CF7 BIGINT,
	NUMBER_CF8 BIGINT,
	NUMBER_CF9 BIGINT,
	NUMBER_CF10 BIGINT,
	NUMBER_CF11 BIGINT,
	NUMBER_CF12 BIGINT,
	NUMBER_CF13 BIGINT,
	NUMBER_CF14 BIGINT,
	NUMBER_CF15 BIGINT,
	DECIMAL_CF1 DOUBLE(9,3),
	DECIMAL_CF2 DOUBLE(9,3),
	DECIMAL_CF3 DOUBLE(9,3),
	DECIMAL_CF4 DOUBLE(9,3),
	DECIMAL_CF5 DOUBLE(9,3),
	DECIMAL_CF6 DOUBLE(9,3),
	DECIMAL_CF7 DOUBLE(9,3),
	DECIMAL_CF8 DOUBLE(9,3),
	DECIMAL_CF9 DOUBLE(9,3),
	DECIMAL_CF10 DOUBLE(9,3),
	DECIMAL_CF11 DOUBLE(9,3),
	DECIMAL_CF12 DOUBLE(9,3),
	DECIMAL_CF13 DOUBLE(9,3),
	DECIMAL_CF14 DOUBLE(9,3),
	DECIMAL_CF15 DOUBLE(9,3),
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	BOOLEAN_CF6 BOOLEAN,
	BOOLEAN_CF7 BOOLEAN,
	BOOLEAN_CF8 BOOLEAN,
	BOOLEAN_CF9 BOOLEAN,
	BOOLEAN_CF10 BOOLEAN,
	BOOLEAN_CF11 BOOLEAN,
	BOOLEAN_CF12 BOOLEAN,
	BOOLEAN_CF13 BOOLEAN,
	BOOLEAN_CF14 BOOLEAN,
	BOOLEAN_CF15 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATE_CF6 BIGINT,
	DATE_CF7 BIGINT,
	DATE_CF8 BIGINT,
	DATE_CF9 BIGINT,
	DATE_CF10 BIGINT,
	DATE_CF11 BIGINT,
	DATE_CF12 BIGINT,
	DATE_CF13 BIGINT,
	DATE_CF14 BIGINT,
	DATE_CF15 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,
	DATETIME_CF6 BIGINT,
	DATETIME_CF7 BIGINT,
	DATETIME_CF8 BIGINT,
	DATETIME_CF9 BIGINT,
	DATETIME_CF10 BIGINT,
	DATETIME_CF11 BIGINT,
	DATETIME_CF12 BIGINT,
	DATETIME_CF13 BIGINT,
	DATETIME_CF14 BIGINT,
	DATETIME_CF15 BIGINT,
	ENUM_CF1 INT,
	ENUM_CF2 INT,
	ENUM_CF3 INT,
	ENUM_CF4 INT,
	ENUM_CF5 INT,
	ENUM_CF6 INT,
	ENUM_CF7 INT,
	ENUM_CF8 INT,
	ENUM_CF9 INT,
	ENUM_CF10 INT,
	ENUM_CF11 INT,
	ENUM_CF12 INT,
	ENUM_CF13 INT,
	ENUM_CF14 INT,
	ENUM_CF15 INT,
	SITE_ID BIGINT,
	TOTAL_COST DOUBLE,
	TRIGGER_ID BIGINT,
	SYS_CREATED_TIME BIGINT,
	JOB_STATUS TINYINT,
	CONSTRAINT WORK_ORDERS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WORK_ORDERS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT WORK_ORDERS_FK_ID FOREIGN KEY (ID) REFERENCES Tickets(ID) ON DELETE CASCADE,
	CONSTRAINT WORK_ORDERS_FK_REQUESTER_ID FOREIGN KEY (REQUESTER_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT WORK_ORDERS_FK_REQUESTED_BY_ID FOREIGN KEY (REQUESTED_BY_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT WORK_ORDERS_FK_PM_ID FOREIGN KEY (PM_ID) REFERENCES Preventive_Maintenance(ID) ON DELETE SET NULL,
	CONSTRAINT WORK_ORDERS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID),
	CONSTRAINT WORK_ORDERS_FK_APPROVAL_RULE_ID FOREIGN KEY (APPROVAL_RULE_ID) REFERENCES Approval_Rules(ID),
	CONSTRAINT WORK_ORDERS_FK_TRIGGER_ID FOREIGN KEY (TRIGGER_ID) REFERENCES PM_Triggers(ID) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS Alarms (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	MODULEID BIGINT NOT NULL,
	ALARM_CONDITION VARCHAR(500),
	SOURCE VARCHAR(100),
	IS_ACKNOWLEDGED BOOLEAN,
	ACKNOWLEDGED_BY BIGINT,
	ACKNOWLEDGED_TIME BIGINT,
	ALARM_TYPE TINYINT,
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT NOT NULL,
	CLEARED_TIME BIGINT,
	CLEARED_BY BIGINT,
	AUTO_CLEAR BOOLEAN,
	PREVIOUS_SEVERITY BIGINT,
	SEVERITY BIGINT NOT NULL,
	ALARM_PRIORITY VARCHAR(100),
	ALARM_CLASS VARCHAR(100),
	STATE VARCHAR(100),
	ADDITIONAL_INFO VARCHAR(5000),
	NO_OF_EVENTS INT,
	IS_WO_CREATED BOOLEAN,
	ENTITY_ID BIGINT NOT NULL,
	PROBLEM VARCHAR(500),
	POSSIBLE_CAUSES VARCHAR(1000),
	RECOMMENDATION VARCHAR(1000),
	CONTROLLER_ID BIGINT,
	WO_ID BIGINT,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	DECIMAL_CF1 DOUBLE(9,3),
	DECIMAL_CF2 DOUBLE(9,3),
	DECIMAL_CF3 DOUBLE(9,3),
	DECIMAL_CF4 DOUBLE(9,3),
	DECIMAL_CF5 DOUBLE(9,3),
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,	
	CONSTRAINT ALARMS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ALARMS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ALARMS_FK_ID FOREIGN KEY (ID) REFERENCES Tickets(ID) ON DELETE CASCADE,
	CONSTRAINT ALARMS_FK_PREVIOUS_SEVERITY FOREIGN KEY (PREVIOUS_SEVERITY) REFERENCES Alarm_Severity(ID),
	CONSTRAINT ALARMS_FK_SEVERITY FOREIGN KEY (SEVERITY) REFERENCES Alarm_Severity(ID),
	CONSTRAINT ALARMS_FK_ASSIGNED_TO_ID FOREIGN KEY (ACKNOWLEDGED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT ALARMS_FK_CLEARED_BY_ID FOREIGN KEY (CLEARED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT ALARMS_FK_ENTITY_ID FOREIGN KEY (ENTITY_ID) REFERENCES Alarm_Entity(ENTITY_ID),
	CONSTRAINT ALARMS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID),
	CONSTRAINT ALARMS_FK_CONTROLLER_ID FOREIGN KEY (CONTROLLER_ID) REFERENCES Controller (ID) ON DELETE CASCADE,
	CONSTRAINT ALARMS_FK_WO_ID FOREIGN KEY (WO_ID) REFERENCES WorkOrders (ID) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS AlarmFollowers (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	ALARM_ID BIGINT NOT NULL,
	FOLLOWER_TYPE VARCHAR(50),
	FOLLOWER VARCHAR(255),
	CONSTRAINT ALARM_FOLLOWERS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ALARM_FOLLOWERS_FK_ALARMID FOREIGN KEY (ALARM_ID) REFERENCES Alarms(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS User_Workhour_Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	WORK_HOUR_ENTRY TINYINT NOT NULL,
	WO_ID BIGINT NOT NULL,
	SOURCE_ACTIVITY BIGINT NOT NULL,
	HAS_MANUAL_ENTRY BOOLEAN,
	CONSTRAINT USER_WORKHOUR_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT USER_WORKHOUR_READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT USER_WORKHOUR_READINGS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES ORG_Users(ORG_USERID)
);

-- Create indexes for User_Workhour_Readings table
CREATE INDEX USER_WORKHOUR_READINGS_PARENT_ID_INDEX on User_Workhour_Readings (PARENT_ID);
CREATE INDEX USER_WORKHOUR_READINGS_PARENT_ID_TTIME_INDEX ON User_Workhour_Readings (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX USER_WORKHOUR_READINGS_TTIME_INDEX ON User_Workhour_Readings (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS  PM_Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	WO_ID BIGINT NOT NULL,
	TASK_ID BIGINT NOT NULL,
	TASK_UNIQUE_ID BIGINT NOT NULL,
	RESOURCE_ID BIGINT,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	DECIMAL_CF1 DOUBLE,
	DECIMAL_CF2 DOUBLE,
	DECIMAL_CF3 DOUBLE,
	DECIMAL_CF4 DOUBLE,
	DECIMAL_CF5 DOUBLE,
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	ENUM_CF1 INTEGER,
	ENUM_CF2 INTEGER,
	ENUM_CF3 INTEGER,
	ENUM_CF4 INTEGER,
	ENUM_CF5 INTEGER,
	CONSTRAINT PM_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT PM_READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT PM_READINGS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Preventive_Maintenance(ID) ON DELETE CASCADE
);

-- Create indexes for PM_Readings table
CREATE INDEX PM_READINGS_PARENT_ID_INDEX on PM_Readings (PARENT_ID);
CREATE INDEX PM_READINGS_PARENT_ID_TTIME_INDEX ON PM_Readings (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX PM_READINGS_TTIME_INDEX ON PM_Readings (ORGID, MODULEID, TTIME);

CREATE TABLE IF NOT EXISTS SupportEmails (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT NOT NULL,
	REPLY_NAME VARCHAR(50),
	ACTUAL_EMAIL VARCHAR(50) UNIQUE NOT NULL,
	FWD_EMAIL VARCHAR(50) UNIQUE NOT NULL,
	AUTO_ASSIGN_GROUP_ID BIGINT,
	VERIFIED BOOLEAN,
	PRIMARY_SUPPORT_EMAIL BOOLEAN,
	CONSTRAINT SUPPORT_EMAILS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT SUPPORT_EMAILS_FK_AUTO_ASSIGN_GROUP FOREIGN KEY (AUTO_ASSIGN_GROUP_ID) REFERENCES `Groups`(GROUPID),
	CONSTRAINT SUPPORT_EMAILS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS EmailSettings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT UNIQUE NOT NULL,
	BCC_EMAIL VARCHAR(50),
	FLAGS TINYINT,
	CONSTRAINT EMAIL_SETTINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

-- service portal --
CREATE TABLE IF NOT EXISTS PortalInfo (
	PORTALID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	PORTALTYPE INT DEFAULT 0,
	SIGNUP_ALLOWED BOOLEAN,
	GMAILLOGIN_ALLOWED BOOLEAN,
	IS_PUBLIC_CREATE_ALLOWED BOOLEAN,
	IS_ANYDOMAIN_ALLOWED BOOLEAN,
	WHITELISTED_DOMAINS VARCHAR(255),
	SAML_ENABLED BOOLEAN,
	CAPTCHA_ENABLED BOOLEAN,
	CUSTOM_DOMAIN VARCHAR(100),
	ALGORITHM VARCHAR(50),
	PUBLICKEY BIGINT,
	LOGIN_URL VARCHAR(50),
	LOGOUT_URL VARCHAR(50),
	PASSWORD_URL VARCHAR(50),
	UNIQUE KEY PortalInfo_type (ORGID,PORTALTYPE),
	CONSTRAINT `PORTALINFO_PUBLICKEY_FILEID` FOREIGN KEY (`PUBLICKEY`) REFERENCES `FacilioFile` (`FILE_ID`),
	CONSTRAINT PortalInfo_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS `faciliorequestors` (
`id` int( 11 ) NOT NULL AUTO_INCREMENT ,
`PORTALID` BIGINT NOT NULL  ,
`username` varchar( 200 ) NOT NULL ,
`email` varchar( 200 ) NOT NULL ,
USERID BIGINT NOT NULL,
PRIMARY KEY ( `id` ) ,
CONSTRAINT UNIQUE_FACILIOREQUESTORS_ID UNIQUE(PORTALID, email),
CONSTRAINT FACILIOREQUESTORS_FK_PORTALID FOREIGN KEY (PORTALID) REFERENCES PortalInfo(PORTALID),
CONSTRAINT FACILIOREQUESTORS_FK_USERID FOREIGN KEY (USERID) REFERENCES Users(USERID) ON UPDATE CASCADE
)  DEFAULT CHARSET = utf8;

CREATE TABLE IF NOT EXISTS Ticket_Activity (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	TICKET_ID BIGINT NOT NULL,
	MODIFIED_TIME BIGINT NOT NULL,
	MODIFIED_BY BIGINT NOT NULL,
	ACTIVITY_TYPE INT NOT NULL,
	INFO VARCHAR(5000),
	CONSTRAINT Ticket_Activity_FK_TICKET_ID FOREIGN KEY (TICKET_ID) REFERENCES Tickets(ID) ON DELETE CASCADE,
	CONSTRAINT Ticket_Activity_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT Ticket_Activity_FK_MODIFIED_BY FOREIGN KEY (MODIFIED_BY) REFERENCES ORG_Users(ORG_USERID)
);

CREATE TABLE IF NOT EXISTS Connected_App (
	CONNECTED_APP_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(100),
	LINK_NAME VARCHAR(100),
	DESCRIPTION VARCHAR(500),
	BASEURL VARCHAR(500),
	CONSTRAINT CONNECTED_APP_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Tab_Widget (
	TAB_WIDGET_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULE_LINK_NAME VARCHAR(100),
	TAB_NAME VARCHAR(100),
	TAB_LINK_NAME VARCHAR(100),
	WIDGET_NAME VARCHAR(100),
	CONNECTED_APP_ID BIGINT,
	RESOURCE_PATH VARCHAR(500),
	CONSTRAINT TAB_WIDGET_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TAB_WIDGET_FK_CONNECTED_APP_ID FOREIGN KEY (CONNECTED_APP_ID) REFERENCES Connected_App(CONNECTED_APP_ID)
);

CREATE TABLE IF NOT EXISTS Notification (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	USERID BIGINT NOT NULL,
	NOTIFICATION_TYPE INT NOT NULL,
	ACTOR_ID BIGINT,
	INFO VARCHAR(5000),
	IS_READ BOOLEAN DEFAULT FALSE,
	READ_AT BIGINT,
	IS_SEEN BOOLEAN DEFAULT FALSE,
	SEEN_AT BIGINT,
	CREATED_TIME BIGINT,
	CONSTRAINT NOTIFICATION_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT NOTIFICATION_FK_USERID FOREIGN KEY (USERID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT NOTIFICATION_FK_ACTORID FOREIGN KEY (ACTOR_ID) REFERENCES ORG_Users(ORG_USERID)
);

CREATE TABLE IF NOT EXISTS Report_Folder (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  MODULEID BIGINT DEFAULT NULL,
  PARENT_FOLDER_ID BIGINT DEFAULT NULL,
  NAME VARCHAR(500) DEFAULT NULL,
  BUILDING_ID BIGINT DEFAULT NULL,
  CONSTRAINT REPORT_FOLDER_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
  CONSTRAINT REPORT_FOLDER_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT REPORT_FOLDER_PARENT_ID FOREIGN KEY (PARENT_FOLDER_ID) REFERENCES Report_Folder (ID)
);

CREATE TABLE IF NOT EXISTS Report_Formula_Field (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  MODULEID BIGINT DEFAULT NULL,
  NAME VARCHAR(500) DEFAULT NULL,
  DATA_TYPE INT DEFAULT NULL,
  FORMULA VARCHAR(500) DEFAULT NULL,
  CONSTRAINT REPORT_FORMULA_FIELDS_ORG_ID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT REPORT_FORMULA_FIELDS_MODULE_ID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID)
);

CREATE TABLE IF NOT EXISTS Report_Field (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  FIELD_LABEL VARCHAR(500) DEFAULT NULL,
  MODULE_FIELD_ID BIGINT DEFAULT NULL,
  FORMULA_FIELD_ID BIGINT DEFAULT NULL,
  UNIT VARCHAR(50) DEFAULT NULL,
  CONSTRAINT REPORT_FIELD_FORMULA_FIELD_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT REPORT_FIELD_FORMULA_FIELD_ID FOREIGN KEY (FORMULA_FIELD_ID) REFERENCES Report_Formula_Field (ID),
  CONSTRAINT REPORT_FIELD_MODULE_FIELD_ID FOREIGN KEY (MODULE_FIELD_ID) REFERENCES Fields (FIELDID) 
);

CREATE TABLE IF NOT EXISTS Report_Entity ( 
	ID BIGINT AUTO_INCREMENT PRIMARY KEY, 
	ORGID BIGINT NOT NULL, 
	CONSTRAINT REPORT_ENTITY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID) 
);

CREATE TABLE IF NOT EXISTS Report (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  MODULEID BIGINT DEFAULT NULL,
  REPORT_FOLDER_ID BIGINT DEFAULT NULL,
  REPORT_ENTITY_ID BIGINT DEFAULT NULL,
  NAME VARCHAR(250) DEFAULT NULL,
  DESCRIPTION VARCHAR(1000),
  CHART_TYPE INT DEFAULT NULL,
  SEC_CHART_TYPE INT DEFAULT NULL,
  X_AXIS BIGINT NOT NULL,
  X_AGGREGATE_FUNCTION INT DEFAULT NULL,
  X_AXIS_LABEL VARCHAR(255) DEFAULT NULL,
  X_AXIS_UNIT VARCHAR(50) DEFAULT NULL,
  Y1_AXIS BIGINT DEFAULT NULL,
  Y1_AGGREGATE_FUNCTION INT DEFAULT NULL,
  Y1_AXIS_LABEL VARCHAR(255) DEFAULT NULL,
  Y1_AXIS_UNIT VARCHAR(50) DEFAULT NULL,
  Y2_AXIS BIGINT DEFAULT NULL,
  Y2_AGGREGATE_FUNCTION INT DEFAULT NULL,
  Y3_AXIS BIGINT DEFAULT NULL,
  Y3_AGGREGATE_FUNCTION INT DEFAULT NULL,
  IS_COMPARISION_REPORT TINYINT DEFAULT NULL,
  IS_HIGHRESOLUTION_REPORT TINYINT DEFAULT NULL,
  IS_COMBINATION_REPORT TINYINT DEFAULT NULL,
  EXCLUDE_BASELINE TINYINT DEFAULT NULL,
  REPORT_ORDER INT DEFAULT NULL,
  X_AXIS_LEGEND VARCHAR(45) DEFAULT NULL,
  GROUP_BY BIGINT DEFAULT NULL,
  GROUP_BY_AGGREGATE_FUNCTION INT DEFAULT NULL,
  GROUP_BY_LABEL VARCHAR(255) DEFAULT NULL,
  GROUP_BY_UNIT VARCHAR(50) DEFAULT NULL,
  LLIMIT INT DEFAULT NULL,
  ORDER_BY VARCHAR(45) DEFAULT NULL,
  ORDER_BY_FUNCTION INT DEFAULT NULL,
  REPORT_COLOR VARCHAR(30) DEFAULT NULL,
  CUSTOM_REPORT_CLASS VARCHAR(200) DEFAULT NULL,
  IS_WORK_REQUEST_REPORT TINYINT DEFAULT NULL,
  CONSTRAINT REPORT_PARENT_FOLDER_ID FOREIGN KEY (REPORT_FOLDER_ID) REFERENCES Report_Folder (ID),
  CONSTRAINT REPORT_MODULE_ID_FK FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
  CONSTRAINT REPORT_ORG_ID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT REPORT_ENTITY_FK_ID FOREIGN KEY (REPORT_ENTITY_ID) REFERENCES Report_Entity (ID),
  CONSTRAINT REPORT_X_AXIS FOREIGN KEY (X_AXIS) REFERENCES Report_Field (ID),
  CONSTRAINT REPORT_Y1_AXIS FOREIGN KEY (Y1_AXIS) REFERENCES Report_Field (ID),
  CONSTRAINT REPORT_Y2_AXIS FOREIGN KEY (Y2_AXIS) REFERENCES Report_Field (ID),
  CONSTRAINT REPORT_Y3_AXIS FOREIGN KEY (Y3_AXIS) REFERENCES Report_Field (ID),
  CONSTRAINT REPORT_GROUP_BY FOREIGN KEY (GROUP_BY) REFERENCES Report_Field (ID)
);

CREATE TABLE IF NOT EXISTS Report_DateFilter (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  REPORT_ID BIGINT DEFAULT NULL,
  FIELD_ID BIGINT DEFAULT NULL,
  OPERATOR INT NOT NULL,
  VAL VARCHAR(50),
  START_TIME BIGINT DEFAULT NULL,
  END_TIME BIGINT DEFAULT NULL,
  CONSTRAINT REPORT_DATEFILTER_REPORT_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID) ,
  CONSTRAINT REPORT_DATEFILTER_REPORT_ID FOREIGN KEY (REPORT_ID) REFERENCES Report (ID) 
);

CREATE TABLE IF NOT EXISTS Report_EnergyMeter (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  REPORT_ID BIGINT DEFAULT NULL,
  BUILDING_ID BIGINT DEFAULT NULL,
  SERVICE_ID BIGINT DEFAULT NULL,
  SUB_METER_ID BIGINT DEFAULT NULL,
  GROUP_BY VARCHAR(100),
  CONSTRAINT REPORT_ENERGYMETER_REPORT_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID) ,
  CONSTRAINT REPORT_ENERGYMETER_REPORT_ID FOREIGN KEY (REPORT_ID) REFERENCES Report (ID) 
);

CREATE TABLE IF NOT EXISTS Report_Criteria (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  REPORT_ID BIGINT DEFAULT NULL,
  CRITERIA_ID BIGINT DEFAULT NULL,
  CONSTRAINT REPORT_COMPARISION_CONDITIONS_CRITERIA_ORGID FOREIGN KEY (ORGID) REFERENCES  Organizations(ORGID) ,
  CONSTRAINT REPORT_COMPARISION_CONDITIONS_CRITERIA_ID FOREIGN KEY (CRITERIA_ID) REFERENCES Criteria (CRITERIAID),
  CONSTRAINT REPORT_COMPARISION_CONDITIONS_REPORT_ID FOREIGN KEY (REPORT_ID) REFERENCES Report (ID) ON DELETE CASCADE 
);

CREATE TABLE IF NOT EXISTS Report_Threshold (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  REPORT_ID BIGINT DEFAULT NULL,
  NAME VARCHAR(45) DEFAULT NULL,
  VALUE BIGINT DEFAULT NULL,
  COLOR VARCHAR(45) DEFAULT NULL,
  LINE_STYLE INT DEFAULT NULL,
  CONSTRAINT REPORT_THRESHOLD_REPORT_ORGID FOREIGN KEY (ORGID) REFERENCES  Organizations(ORGID) ,
  CONSTRAINT REPORT_THRESHOLD_REPORT_ID FOREIGN KEY (REPORT_ID) REFERENCES Report (ID)
);

CREATE TABLE IF NOT EXISTS Report_User_Filter (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  REPORT_ID BIGINT DEFAULT NULL,
  REPORT_FIELD_ID BIGINT DEFAULT NULL,
  WHERE_CLAUSE VARCHAR(1000) DEFAULT NULL,
   CONSTRAINT REPORT_USER_FILTER_REPORT_FIELD_ORGID FOREIGN KEY (ORGID) REFERENCES  Organizations(ORGID) ,
  CONSTRAINT REPORT_USER_FILTER_REPORT_FIELD_ID FOREIGN KEY (REPORT_FIELD_ID) REFERENCES Report_Field (ID),
  CONSTRAINT REPORT_USER_FILTER_REPORT_ID FOREIGN KEY (REPORT_ID) REFERENCES Report (ID)
);

CREATE TABLE IF NOT EXISTS BaseLines (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	SPACE_ID BIGINT,
	RANGE_TYPE TINYINT NOT NULL,
	START_TIME BIGINT,
	END_TIME BIGINT,
	CONSTRAINT BASE_LINE_ORG_ID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT BASE_LINE_SPACE_ID_FK FOREIGN KEY (SPACE_ID) REFERENCES BaseSpace(ID)
);

CREATE TABLE IF NOT EXISTS Benchmark (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	VAL DOUBLE NOT NULL,
	METRIC TINYINT NOT NULL,
	DURATION TINYINT,
	CONSTRAINT BENCHMARK_ORG_ID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID)
);

CREATE TABLE IF NOT EXISTS Report1_Folder (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  SITE_ID BIGINT DEFAULT NULL,
  MODULEID BIGINT DEFAULT NULL,
  PARENT_FOLDER_ID BIGINT DEFAULT NULL,
  NAME VARCHAR(100) DEFAULT NULL,
  MODIFIED_TIME BIGINT NOT NULL,
  CONSTRAINT REPORT1_FOLDER_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT REPORT1_FOLDER_SITE_ID_FK FOREIGN KEY (SITE_ID) REFERENCES Site (ID),
  CONSTRAINT REPORT1_FOLDER_MODULEID_FK FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID),
  CONSTRAINT REPORT1_FOLDER_PARENT_FOLDER_ID_FK FOREIGN KEY (PARENT_FOLDER_ID) REFERENCES Report1_Folder (ID)
);

CREATE TABLE IF NOT EXISTS Report1 (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  SITE_ID BIGINT DEFAULT NULL,
  MODULEID BIGINT DEFAULT NULL,
  REPORT_FOLDER_ID BIGINT DEFAULT NULL,
  NAME VARCHAR(250) NOT NULL,
  DESCRIPTION VARCHAR(1000) DEFAULT NULL,
  WORKFLOW_ID BIGINT DEFAULT NULL,
  CHART_STATE_JSON MEDIUMTEXT DEFAULT NULL,
  TABULAR_STATE_JSON TEXT DEFAULT NULL,
  COMMON_STATE_JSON TEXT DEFAULT NULL,
  REPORT_STATE_JSON TEXT DEFAULT NULL,
  X_AGGR TINYINT,
  DATE_OPERATOR INT DEFAULT NULL,
  DATE_VALUE VARCHAR(45) DEFAULT NULL,
  DATE_RANGE_JSON VARCHAR(100) DEFAULT NULL,
  DATA_POINT_JSON MEDIUMTEXT DEFAULT NULL,
  FILTERS_JSON text DEFAULT NULL,
  BASELINE_JSON text DEFAULT NULL,
  BENCHMARK_JSON text DEFAULT NULL,
  ANALYTICS_TYPE TINYINT DEFAULT NULL,
  REPORT_TYPE TINYINT NOT NULL,
  BOOLEAN_SETTINGS TINYINT DEFAULT NULL,
  TRANSFORM_CLASS VARCHAR(200),
  IS_TEMP BOOLEAN,
  MODULE_TYPE INT,
  USER_FILTER_JSON TEXT,
  CONSTRAINT REPORT1_ORGID1 FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT REPORT1_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site (ID),
  CONSTRAINT REPORT1_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID),
  CONSTRAINT REPORT1_WF_ID FOREIGN KEY (WORKFLOW_ID) REFERENCES Workflow (ID)
);

CREATE TABLE IF NOT EXISTS Report_Notes (
ID BIGINT AUTO_INCREMENT PRIMARY KEY,
ORGID BIGINT NOT NULL,
MODULEID BIGINT NOT NULL,
CREATED_BY BIGINT,
CREATED_TIME BIGINT,
PARENT_ID BIGINT NOT NULL,
TITLE VARCHAR(50),
BODY VARCHAR(1000) NOT NULL,
CONSTRAINT REPORT_NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
CONSTRAINT REPORT_NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
CONSTRAINT REPORT_NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
CONSTRAINT REPORT_NOTES_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Report1(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Report_Fields (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  REPORT_ID BIGINT DEFAULT NULL,
  FIELD_ID BIGINT DEFAULT NULL,
  FIELD_NAME VARCHAR(100) DEFAULT NULL,
  MODULE_NAME VARCHAR(100) DEFAULT NULL,
  CONSTRAINT REPORT_FIELDS_REPORT_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT REPORT_FIELDS_REPORT_ID1 FOREIGN KEY (REPORT_ID) REFERENCES Report1 (ID) ON DELETE CASCADE,
  CONSTRAINT REPORT_FIELD_FIELD_ID FOREIGN KEY (FIELD_ID) REFERENCES Fields (FIELDID)
);




CREATE TABLE IF NOT EXISTS Dashboard_Folder (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  MODULEID BIGINT DEFAULT NULL,
  PARENT_FOLDER_ID BIGINT DEFAULT NULL,
  NAME VARCHAR(500) DEFAULT NULL,
  DISPLAY_ORDER INT DEFAULT NULL,
  CONSTRAINT Dashboard_FOLDER_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
  CONSTRAINT Dashboard_FOLDER_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT Dashboard_FOLDER_PARENT_ID FOREIGN KEY (PARENT_FOLDER_ID) REFERENCES Dashboard_Folder (ID)
);

CREATE TABLE IF NOT EXISTS Dashboard (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  MODULEID BIGINT DEFAULT NULL,
  DASHBOARD_FOLDER_ID BIGINT DEFAULT NULL,
  DASHBOARD_NAME VARCHAR(45) NOT NULL,
  LINK_NAME VARCHAR(45) NULL,
  CREATED_BY_USER_ID BIGINT DEFAULT NULL,
  PUBLISH_STATUS INT DEFAULT NULL,
  DASHBOARD_URL VARCHAR(100) DEFAULT NULL,
  BASE_SPACE_ID BIGINT DEFAULT NULL,
  DISPLAY_ORDER INT DEFAULT NULL,
  SHOW_HIDE_MOBILE TINYINT DEFAULT NULL,
  DATE_OPERATOR INT DEFAULT NULL,
  DATE_VALUE VARCHAR(50) DEFAULT NULL,
  CONSTRAINT DASHBOARD_MODULE_ID FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID),
  CONSTRAINT DASHBOARD_ORG_ID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT DASHBOARD_BASE_SPACE_ID FOREIGN KEY (BASE_SPACE_ID) REFERENCES BaseSpace (ID),
  CONSTRAINT DASHBOARD_FOLDER_ID1 FOREIGN KEY (DASHBOARD_FOLDER_ID) REFERENCES Dashboard_Folder (ID),
  CONSTRAINT DASHBOARD_CREATED_BY_USER_ID FOREIGN KEY (CREATED_BY_USER_ID) REFERENCES ORG_Users (ORG_USERID)
);

CREATE TABLE IF NOT EXISTS Dashboard_Notes (
ID BIGINT AUTO_INCREMENT PRIMARY KEY,
ORGID BIGINT NOT NULL,
MODULEID BIGINT NOT NULL,
CREATED_BY BIGINT,
CREATED_TIME BIGINT,
PARENT_ID BIGINT NOT NULL,
TITLE VARCHAR(50),
BODY VARCHAR(1000) NOT NULL,
CONSTRAINT DASHBOARD_NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
CONSTRAINT DASHBOARD_NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
CONSTRAINT DASHBOARD_NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
CONSTRAINT DASHBOARD_NOTES_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Dashboard(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Space_Filtered_Dashboard_Settings (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  DASHBOARD_ID BIGINT NOT NULL,
  BASESPACE_ID BIGINT NOT NULL,
  MOBILE_ENABLED TINYINT DEFAULT NULL,
  CONSTRAINT Space_Filtered_Dashboard_Settings_Dashboard_ORGid FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT Space_Filtered_Dashboard_Settings_Dashboard_id FOREIGN KEY (DASHBOARD_ID) REFERENCES Dashboard (ID),
  CONSTRAINT Space_Filtered_Dashboard_Settings_basespace_id FOREIGN KEY (BASESPACE_ID) REFERENCES BaseSpace (ID),
  CONSTRAINT Space_Filtered_Dashboard_Settings_UNQIUE UNIQUE(DASHBOARD_ID, BASESPACE_ID)
);

CREATE TABLE IF NOT EXISTS Widget (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  MODULEID BIGINT DEFAULT NULL,
  WIDGET_NAME VARCHAR(500) DEFAULT NULL,
  TYPE INT DEFAULT NULL,
  WIDGET_URL VARCHAR(100) DEFAULT NULL,
  DATA_REFRESH_INTERTVEL INT DEFAULT NULL,
  HEADER_TEXT VARCHAR(500) DEFAULT NULL,
  HEADER_SUB_TEXT VARCHAR(45) DEFAULT NULL,
  HEADER_IS_EXPORT TINYINT DEFAULT NULL,
  DASHBOARD_ID BIGINT DEFAULT NULL,
  META_JSON VARCHAR(1000) DEFAULT NULL,
  CONSTRAINT WIDGET_MODULE_ID FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID),
  CONSTRAINT WIDGET_dashboard_id FOREIGN KEY (DASHBOARD_ID) REFERENCES Dashboard (ID) ON DELETE CASCADE,
  CONSTRAINT WIDGET_ORG_ID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID)
);

CREATE TABLE IF NOT EXISTS Widget_Chart (
  ID BIGINT NOT NULL PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  REPORT_ID BIGINT DEFAULT NULL,
  NEW_REPORT_ID BIGINT DEFAULT NULL,
  CHART_TYPE INT DEFAULT NULL,
  DATE_FILTER BIGINT DEFAULT NULL,
  CONSTRAINT WIDGET_CHART_REPORT_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT WIDGET_CHART_REPORT_DATE_FILTER FOREIGN KEY (DATE_FILTER) REFERENCES Report_DateFilter (ID),
  CONSTRAINT WIDGET_CHART_REPORT_ID FOREIGN KEY (REPORT_ID) REFERENCES Report (ID),
  CONSTRAINT WIDGET_CHART_NEW_REPORT_ID FOREIGN KEY (NEW_REPORT_ID) REFERENCES Report1 (ID),
  CONSTRAINT WIDGET_CHART_WIDGET_ID FOREIGN KEY (ID) REFERENCES Widget (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Widget_List_View (
  ID bigint(20) NOT NULL PRIMARY KEY,
  ORGID BIGINT NOT NULL,
   MODULE_NAME VARCHAR(100) DEFAULT NULL,
  VIEW_NAME VARCHAR(100) DEFAULT NULL,
   CONSTRAINT WIDGET_LIST_WIDGET_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT WIDGET_LIST_WIDGET_ID FOREIGN KEY (ID) REFERENCES Widget (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Widget_Static (
  ID bigint(20) NOT NULL PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  STATIC_KEY VARCHAR(100) DEFAULT NULL,
  PARAMS_JSON VARCHAR(1000) DEFAULT NULL,
  META_JSON LONGTEXT DEFAULT NULL,
  CONSTRAINT WIDGET_STATIC_WIDGET_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT WIDGET_STATIC_WIDGET_ID FOREIGN KEY (ID) REFERENCES Widget (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Widget_Vs_Workflow (
  ID bigint(20) AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  WIDGET_ID bigint(20) DEFAULT NULL,
  WORKFLOW_NAME varchar(100) DEFAULT NULL,
  WORKFLOW_ID bigint(20) DEFAULT NULL,
  BASE_SPACE_ID bigint(20) DEFAULT NULL,
  CONSTRAINT WIDGET_WF_BASE_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT WIDGET_WF_BASE_SPACE_ID FOREIGN KEY (BASE_SPACE_ID) REFERENCES BaseSpace (ID),
  CONSTRAINT WIDGET_WF_WIDGET_ID FOREIGN KEY (WIDGET_ID) REFERENCES Widget (ID) ON DELETE CASCADE,
  CONSTRAINT WIDGET_WF_WORKFLOW_ID FOREIGN KEY (WORKFLOW_ID) REFERENCES Workflow (ID)
);

CREATE TABLE IF NOT EXISTS Widget_Web (
  ID bigint(20) NOT NULL PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  WEB_URL VARCHAR(1000) DEFAULT NULL,
  CONSTRAINT WIDGET_WEB_WIDGET_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT WIDGET_WEB_WIDGET_ID FOREIGN KEY (ID) REFERENCES Widget (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Screen (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  ORGID BIGINT NOT NULL,
  NAME VARCHAR(100) NOT NULL,
  REFRESH_INTERVAL INT DEFAULT NULL,
  SCREEN_SETTING VARCHAR(3000) DEFAULT NULL,
  PRIMARY KEY (ID),
  CONSTRAINT SCRREN_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID)
);

CREATE TABLE IF NOT EXISTS Screen_Dashboard_Rel (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  ORGID BIGINT NOT NULL,
  SCREEN_ID BIGINT NOT NULL,
  DASHBOARD_ID BIGINT NOT NULL,
  SPACE_ID BIGINT DEFAULT NULL,
  SEQUENCE_NO INT NOT NULL,
  PRIMARY KEY (ID),
  CONSTRAINT SCREEN_DASHBOARD_DASHBOARD_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT SCREEN_DASHBOARD_DASHBOARD_ID FOREIGN KEY (DASHBOARD_ID) REFERENCES Dashboard (ID),
  CONSTRAINT SCREEN_DASHBOARD_SCREEN_ID FOREIGN KEY (SCREEN_ID) REFERENCES Screen (ID)
);

CREATE TABLE IF NOT EXISTS Remote_Screens (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  ORGID BIGINT NOT NULL,
  NAME VARCHAR(100) NOT NULL,
  SCREEN_ID BIGINT,
  TOKEN VARCHAR(500) DEFAULT NULL,
  SESSION_START_TIME BIGINT DEFAULT NULL,
  SESSION_INFO VARCHAR(5000),
  PRIMARY KEY (ID),
  CONSTRAINT REMOTE_SCREEN_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT REMOTE_SCREEN_SCREEN_ID FOREIGN KEY (SCREEN_ID) REFERENCES Screen(ID) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS TVPasscodes (
  CODE VARCHAR(10) NOT NULL,
  GENERATED_TIME BIGINT DEFAULT NULL,
  EXPIRY_TIME BIGINT DEFAULT NULL,
  CONNECTED_SCREEN_ID BIGINT DEFAULT NULL,
  INFO VARCHAR(5000),
  PRIMARY KEY (CODE),
  CONSTRAINT CONNECTED_SCREEN_ID_FK FOREIGN KEY (CONNECTED_SCREEN_ID) REFERENCES Remote_Screens (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Formula (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  MODULEID BIGINT DEFAULT NULL,
  SELECT_FIELD_ID BIGINT DEFAULT NULL,
  AGGREGATE_OPERATION INT DEFAULT NULL,
  CRITERIA_ID BIGINT DEFAULT NULL,
  CONSTRAINT FORMULA_CRITERIA_ID FOREIGN KEY (CRITERIA_ID) REFERENCES Criteria (CRITERIAID),
  CONSTRAINT FORMULA_MODULE_ID FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID),
  CONSTRAINT FORMULA_ORG_ID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT FORMULA_SELECT_FIELD_ID FOREIGN KEY (SELECT_FIELD_ID) REFERENCES Fields (FIELDID)
);

CREATE TABLE IF NOT EXISTS Report_SpaceFilter (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT(20) NOT NULL,
  REPORT_ID BIGINT DEFAULT NULL,
  DASHBOARD_ID BIGINT DEFAULT NULL,
  SITE_ID BIGINT DEFAULT NULL,
  BUILDING_ID BIGINT DEFAULT NULL,
  FLOOR_ID BIGINT DEFAULT NULL,
  CHILLER_ID BIGINT DEFAULT NULL,
  GROUP_BY VARCHAR(250) DEFAULT NULL,
  CONSTRAINT REPORT_SPACE_FILTER_REPORT_ID FOREIGN KEY (REPORT_ID) REFERENCES Report (ID),
  CONSTRAINT REPORT_SPACE_FILTER_DASHBOARD_ID FOREIGN KEY (DASHBOARD_ID) REFERENCES Dashboard (ID)
);

CREATE TABLE IF NOT EXISTS Unmodeled_Instance (
  ID BIGINT(20) AUTO_INCREMENT PRIMARY KEY, 
  ORGID BIGINT(20) NOT NULL,
  DEVICE_NAME VARCHAR(500) NOT NULL,
  INSTANCE_NAME VARCHAR(250) NOT NULL,
  CONTROLLER_ID BIGINT,
  OBJECT_INSTANCE_NUMBER BIGINT,
  INSTANCE_DESCRIPTION VARCHAR(250),
  INSTANCE_TYPE INT,
  IN_USE BOOLEAN DEFAULT 0,
  IS_SUBSCRIBED BOOLEAN DEFAULT 0,
  THRESHOLD_JSON TEXT,
  CREATED_TIME BIGINT NOT NULL,
  CONSTRAINT UNIQUE_DEVICE_INSTANCE_ID UNIQUE(ORGID, CONTROLLER_ID, DEVICE_NAME, INSTANCE_NAME),
  CONSTRAINT Unmodeled_Instance_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT Unmodeled_Instance_FK_CONTROLLER_ID FOREIGN KEY (CONTROLLER_ID) REFERENCES Controller (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Points (
   ID BIGINT AUTO_INCREMENT PRIMARY KEY,
   ORGID BIGINT NOT NULL,
   DEVICE_NAME VARCHAR(500) NOT NULL,
   INSTANCE_NAME VARCHAR(250) NOT NULL,
   RESOURCE_ID BIGINT(20),
   ASSET_CATEGORY_ID BIGINT(20),
   FIELD_ID BIGINT(20),
   CONTROLLER_ID BIGINT,
   MAPPED_TIME BIGINT,
   OBJECT_INSTANCE_NUMBER BIGINT,
   INSTANCE_DESCRIPTION VARCHAR(250),
   INSTANCE_TYPE INT,
   IN_USE BOOLEAN DEFAULT 0,
   IS_SUBSCRIBED BOOLEAN DEFAULT 0,
   THRESHOLD_JSON TEXT,
   CREATED_TIME BIGINT,
   UNIT INT,
   CONSTRAINT Points_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
   CONSTRAINT Points_FK_FIELDID FOREIGN KEY (FIELD_ID) REFERENCES Fields(FIELDID) ON DELETE CASCADE,
   CONSTRAINT Points_FK_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources(ID) ON DELETE CASCADE,
   CONSTRAINT Points_FK_CONTROLLER_ID FOREIGN KEY (CONTROLLER_ID) REFERENCES Controller (ID) ON DELETE CASCADE,
   CONSTRAINT Points_FK_ASSET_CATEGORY_ID FOREIGN KEY (ASSET_CATEGORY_ID) REFERENCES Asset_Categories(ID)
 );
CREATE TABLE IF NOT EXISTS Unmodeled_Data (
  ID BIGINT(20) AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  INSTANCE_ID BIGINT(20) NOT NULL,
  NEW_INSTANCE_ID BIGINT,
  TTIME BIGINT(20) NOT NULL,
  VALUE VARCHAR(1000), 
  CONSTRAINT NEW_UNMODELED_DATA_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT NEW_UNMODELED_DATA_FK_NEW_INSTANCEID FOREIGN KEY (NEW_INSTANCE_ID) REFERENCES Points(ID),
  CONSTRAINT NEW_UNMODELED_DATA_FK_INSTANCEID FOREIGN KEY (INSTANCE_ID) REFERENCES Unmodeled_Instance(ID) ON DELETE CASCADE
 );

-- Index for Unmodeled_Data
CREATE INDEX UNMODELED_DATA_ORGID_INSTANCE_ID on Unmodeled_Data (ORGID,INSTANCE_ID);
CREATE INDEX UNMODELED_DATA_ORGID_INSTANCE_ID_TTIME on Unmodeled_Data (ORGID,INSTANCE_ID,TTIME);
 
 CREATE TABLE IF NOT EXISTS Historical_VM_Calculation  (
  ID BIGINT(20) AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT(20) NOT NULL,
  METER_ID BIGINT(20) NOT NULL,
  START_TIME BIGINT(20), 
  END_TIME BIGINT(20),
  INTERVAL_VALUE INT,
  UPDATE_READING BOOLEAN,
  RUN_PARENT_METER BOOLEAN,
  CONSTRAINT Historical_VM_Calculation_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT Historical_VM_Calculation_FK_RESOURCEID FOREIGN KEY (METER_ID) REFERENCES Energy_Meter(ID) ON DELETE CASCADE
 );
 
 CREATE TABLE IF NOT EXISTS Instance_To_Asset_Mapping (
   ID BIGINT AUTO_INCREMENT PRIMARY KEY, 
   ORGID BIGINT NOT NULL,
   DEVICE_NAME VARCHAR(500) NOT NULL,
   INSTANCE_NAME VARCHAR(250),
   ASSET_ID BIGINT(20),
   ASSET_CATEGORY_ID BIGINT(20),
   FIELD_ID BIGINT(20),
   CONTROLLER_ID BIGINT,
   MAPPED_TIME BIGINT,
   CONSTRAINT INSTANCE_TO_ASSET_MAPPING_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
   CONSTRAINT INSTANCE_TO_ASSET_MAPPING_FK_FIELDID FOREIGN KEY (FIELD_ID) REFERENCES Fields(FIELDID) ON DELETE CASCADE,
   CONSTRAINT INSTANCE_TO_ASSET_MAPPING_FK_ASSETID FOREIGN KEY (ASSET_ID) REFERENCES Assets(ID) ON DELETE CASCADE,
   CONSTRAINT INSTANCE_TO_ASSET_MAPPING_FK_CONTROLLER_ID FOREIGN KEY (CONTROLLER_ID) REFERENCES Controller (ID) ON DELETE CASCADE,
   CONSTRAINT INSTANCE_TO_ASSET_MAPPING_FK_ASSET_CATEGORY_ID FOREIGN KEY (ASSET_CATEGORY_ID) REFERENCES Asset_Categories(ID)
 );
 



CREATE TABLE IF NOT EXISTS View_Column (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	VIEWID BIGINT NOT NULL,
	FIELDID BIGINT NOT NULL,
	DISPLAY_NAME VARCHAR(250),
	PARENT_FIELDID BIGINT,
	CONSTRAINT VIEW_COLUMN_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT VIEW_COLUMN_VIEWID_FK FOREIGN KEY (VIEWID) REFERENCES Views(ID)  ON DELETE CASCADE,
	CONSTRAINT VIEW_COLUMN_FIELDID_FK FOREIGN KEY (FIELDID) REFERENCES Fields(FIELDID) ON DELETE CASCADE,
	CONSTRAINT VIEW_COLUMN_PARENT_FIELDID_FK FOREIGN KEY (FIELDID) REFERENCES Fields(FIELDID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS License (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	LICENSE INT NOT NULL,
	TOTAL_LICENSE INT,
	USED_LICENSE INT,
	LICENSETYPE INT NULL DEFAULT 1,
	EXPIRY_DATE BIGINT DEFAULT -1,
	CONSTRAINT LICENSE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS FeatureLicense (
	ORGID BIGINT NOT NULL,
	MODULE INT
);

-- CREATE TABLE IF NOT EXISTS UserLicense (
--	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
--	ORGID BIGINT NOT NULL,
--	ROLE_ID BIGINT NOT NULL,
--	NUMBER_OF_USERS INT,
--	CONSTRAINT USERLICENSE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
-- );

CREATE TABLE IF NOT EXISTS OrgInfo (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
    NAME VARCHAR(50),
	VALUE VARCHAR(100),
	CONSTRAINT ORG_INFO_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS View_Schedule_Info (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	VIEWID BIGINT NOT NULL,
	FILE_FORMAT INT NOT NULL,
	TEMPLATEID BIGINT,
	CONSTRAINT VIEW_SCHEDULE_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT VIEW_SCHEDULE_VIEWID_FK FOREIGN KEY (VIEWID) REFERENCES Views(ID)  ON DELETE CASCADE,
	CONSTRAINT View_SCHEDULE_TEMPLATEID_FK FOREIGN KEY (TEMPLATEID) REFERENCES EMail_Templates(ID)  ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Report_Schedule_Info (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	REPORTID BIGINT NOT NULL,
	FILE_FORMAT INT NOT NULL,
	DATE_FILTER VARCHAR(50),
	TEMPLATEID BIGINT NOT NULL,
	CONSTRAINT REPORT_SCHEDULE_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT REPORT_SCHEDULE_REPORTID_FK FOREIGN KEY (REPORTID) REFERENCES Report(ID)  ON DELETE CASCADE,
	CONSTRAINT REPORT_SCHEDULE_TEMPLATEID_FK FOREIGN KEY (TEMPLATEID) REFERENCES EMail_Templates(ID)  ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Report_Schedule_Info1 (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	REPORTID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	FILE_FORMAT INT NOT NULL,
	TEMPLATEID BIGINT NOT NULL,
	PRINT_PARAMS VARCHAR(100),
	CONSTRAINT REPORT_SCHEDULE1_ORG_ID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT REPORT_SCHEDULE1_REPORTID_FK FOREIGN KEY (REPORTID) REFERENCES Report1(ID)  ON DELETE CASCADE,
	CONSTRAINT REPORT_SCHEDULE1_MODULEID_FK FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID) ON DELETE CASCADE,
	CONSTRAINT REPORT_SCHEDULE1_TEMPLATEID_FK FOREIGN KEY (TEMPLATEID) REFERENCES EMail_Templates(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Calendar_Color (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
  	BASED_ON VARCHAR(100) DEFAULT NULL,
  	CONSTRAINT CALENDAR_COLOR_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID)
);

CREATE TABLE IF NOT EXISTS Benchmark_Units (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	BENCHMARK_ID BIGINT NOT NULL,
	UNIT TINYINT NOT NULL,
	CONSTRAINT BENCHMARK_UNITS_ORG_ID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT BENCHMARK_UNITS_BENCHMARK_ID_FK FOREIGN KEY (BENCHMARK_ID) REFERENCES Benchmark (ID)
);

CREATE TABLE IF NOT EXISTS Report_Benchmark_Rel (
  REPORT_ID BIGINT NOT NULL,
  ORGID BIGINT NOT NULL,
  BENCHMARK_ID BIGINT NOT NULL,
   CONSTRAINT REPORT_BENCHMARK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT REPORT_BENCHMARK_BENCHMARKID FOREIGN KEY (BENCHMARK_ID) REFERENCES Benchmark (ID),
  CONSTRAINT REPORT_BENCHMARK_REPORTID FOREIGN KEY (REPORT_ID) REFERENCES Report (ID)
);

CREATE TABLE IF NOT EXISTS Reading_Rule (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	RESOURCE_ID BIGINT,
	ASSET_CATEGORY_ID BIGINT,
	READING_FIELD_ID BIGINT,
	START_VALUE BIGINT,
	INTERVAL_VALUE BIGINT,
	`LAST_VALUE` BIGINT,	
	BASELINE_ID BIGINT,
	AGGREGATION VARCHAR(50),
	DATE_RANGE INT,
	OPERATOR_ID INT,
	PERCENTAGE VARCHAR(50),
	THRESHOLD_TYPE TINYINT,
	CLEAR_ALARM BOOLEAN,
	OCCURENCES INT,
	OVER_PERIOD BIGINT,
	IS_CONSECUTIVE BOOLEAN,
	FLAP_COUNT INT,
	FLAP_INTERVAL INT,
	MIN_FLAP_VAL DOUBLE,
	MAX_FLAP_VAL DOUBLE,
	FLAP_FREQUENCY INT,
	RULE_GROUP_ID BIGINT NOT NULL,
	ALARM_SEVERITY_ID BIGINT DEFAULT NULL,
	TRIGGER_EXECUTE_PERIOD INT DEFAULT NULL,
	READING_RULE_TYPE INT NOT NULL,
	UPPER_BOUND DOUBLE,
	LOWER_BOUND DOUBLE,
	CONSTRAINT READING_RULE_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT READING_RULE_ID_FK FOREIGN KEY (ID) REFERENCES Workflow_Rule(ID) ON DELETE CASCADE,
	CONSTRAINT READING_RULE_FK_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources(ID),
	CONSTRAINT READING_RULE_FK_ASSET_CATEGORY_ID FOREIGN KEY (ASSET_CATEGORY_ID) REFERENCES Asset_Categories(ID),
	CONSTRAINT READING_RULE_FK_READING_ID FOREIGN KEY (READING_FIELD_ID) REFERENCES Fields(FIELDID),
	CONSTRAINT READING_RULE_FK_BASELINE_ID FOREIGN KEY (BASELINE_ID) REFERENCES BaseLines(ID) ON DELETE CASCADE,
	CONSTRAINT Reading_Rule_RULE_GROUP_ID FOREIGN KEY (RULE_GROUP_ID) REFERENCES Reading_Rule (ID) ON DELETE CASCADE,
	CONSTRAINT Reading_Rule_alarm_severity_id FOREIGN KEY (ALARM_SEVERITY_ID) REFERENCES Alarm_Severity (ID)
);

CREATE TABLE IF NOT EXISTS Reading_Alarm_Rule (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  READING_RULE_GROUP_ID BIGINT NOT NULL,
  CONSTRAINT Reading_Alarm_Rule_id FOREIGN KEY (ID) REFERENCES Workflow_Rule (ID) ON DELETE CASCADE,
  CONSTRAINT Reading_Alarm_Rule_orgid FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT Reading_Alarm_Rule_reading_rule_group_id FOREIGN KEY (READING_RULE_GROUP_ID) REFERENCES Reading_Rule (ID) ON DELETE CASCADE ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS Reading_Rule_Inclusions_Exclusions (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	RULE_GROUP_ID BIGINT NOT NULL,
	RESOURCE_ID BIGINT NOT NULL,
	IS_INCLUDE BOOLEAN NOT NULL,
	CONSTRAINT READING_RULE_INCLUSIONS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT READING_RULE_INCLUSIONS_FK_RULE_ID FOREIGN KEY (RULE_GROUP_ID) REFERENCES Reading_Rule(ID) ON DELETE CASCADE,
	CONSTRAINT READING_RULE_INCLUSIONS_FK_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources(ID)
);

CREATE TABLE IF NOT EXISTS Reading_Alarms (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	READING_FIELD_ID BIGINT NOT NULL,
	READING_DATA_ID BIGINT,
	READING_VAL VARCHAR (100),
	BASELINE_ID BIGINT,
	START_TIME BIGINT,
	END_TIME BIGINT,
	READING_MSG VARCHAR(2000),
	RULE_ID BIGINT,
	SITE_ID BIGINT,
	CONSTRAINT READING_ALARMS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT READING_ALARMS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT READING_ALARMS_FK_ID FOREIGN KEY (ID) REFERENCES Alarms(ID) ON DELETE CASCADE,
	CONSTRAINT READING_ALARMS_FK_READING_ID FOREIGN KEY (READING_FIELD_ID) REFERENCES Fields(FIELDID),
	CONSTRAINT READING_ALARMS_FK_BASELINE_ID FOREIGN KEY (BASELINE_ID) REFERENCES BaseLines(ID) ON DELETE SET NULL,
	CONSTRAINT READING_ALARMS_FK_RULE_ID FOREIGN KEY (RULE_ID) REFERENCES Reading_Rule(ID) ON DELETE SET NULL,
	CONSTRAINT REAING_ALARMS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS ML_Alarms (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	MODULEID BIGINT NOT NULL,
	READING_FIELD_ID BIGINT NOT NULL,
	RULE_ID BIGINT,
	CONSTRAINT ML_ALARMS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ML_ALARMS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ML_ALARMS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID),
	CONSTRAINT ML_ALARMS_FK_ID FOREIGN KEY (ID) REFERENCES Alarms(ID) ON DELETE CASCADE,
	CONSTRAINT ML_ALARMS_FK_READING_ID FOREIGN KEY (READING_FIELD_ID) REFERENCES Fields(FIELDID),
	CONSTRAINT ML_ALARMS_FK_RULE_ID FOREIGN KEY (RULE_ID) REFERENCES Reading_Rule(ID) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS ML_Alarm_Occurrences (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	MODULEID BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	PARENT_ALARM BIGINT NOT NULL,
	RULE_ID BIGINT,
	CONSTRAINT ML_ALARM_OCCURRENCES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ML_ALARM_OCCURRENCES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ML_ALARM_OCCURRENCES_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID),
	CONSTRAINT ML_ALARM_OCCURRENCES_FK_PARENT_ALARM FOREIGN KEY (PARENT_ALARM) REFERENCES ML_Alarms (ID) ON DELETE CASCADE,
	CONSTRAINT ML_ALARM_OCCURRENCES_FK_RULE_ID FOREIGN KEY (RULE_ID) REFERENCES Reading_Rule(ID) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS Reading_Rule_Alarm_Meta (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	ALARM_ID BIGINT NOT NULL,
	RULE_GROUP_ID BIGINT NOT NULL,
	RESOURCE_ID BIGINT NOT NULL,
	READING_FIELD_ID BIGINT NOT NULL,
	IS_CLEAR BOOLEAN NOT NULL,
	CONSTRAINT READING_RULE_ALARM_META_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT READING_RULE_ALARM_META_FK_ALARM_ID FOREIGN KEY (ALARM_ID) REFERENCES Alarms (ID) ON DELETE CASCADE,
	CONSTRAINT READING_RULE_ALARM_META_FK_RULE_ID FOREIGN KEY (RULE_GROUP_ID) REFERENCES Reading_Rule (ID) ON DELETE CASCADE,
	CONSTRAINT READING_RULE_ALARM_META_FK_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources (ID) ON DELETE CASCADE,
	CONSTRAINT READING_RULE_ALARM_META_FK_READING_FIELD_ID FOREIGN KEY (READING_FIELD_ID) REFERENCES Fields (FIELDID) ON DELETE CASCADE,
	CONSTRAINT READING_RULE_ALARM_META_UNIQUE_RULE_ID_RESOURCE_ID UNIQUE (RULE_GROUP_ID, RESOURCE_ID),
	CONSTRAINT READING_RULE_ALARM_META_UNIQUE_ALARM_ID UNIQUE (ALARM_ID)
);

CREATE TABLE IF NOT EXISTS SLA_Rule (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	RESOURCE_ID BIGINT,
	GROUP_ID BIGINT,
	CONSTRAINT SLA_RULE_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT SLA_RULE_ID_FK FOREIGN KEY (ID) REFERENCES Workflow_Rule(ID) ON DELETE CASCADE,
	CONSTRAINT SLA_RULE_FK_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources(ID),
	CONSTRAINT SLA_RULE_FK_GROUP_ID FOREIGN KEY (GROUP_ID) REFERENCES `Groups`(GROUPID)
);

CREATE TABLE IF NOT EXISTS Reading_Rule_Flaps (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	RULE_ID BIGINT NOT NULL,
	FLAP_TIME BIGINT NOT NULL,
	RESOURCE_ID BIGINT NOT NULL,
	CONSTRAINT READING_RULE_FLAPS_RULE_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT READING_RULE_FLAPS_RULE_ID_FK FOREIGN KEY (RULE_ID) REFERENCES Reading_Rule(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Reading_Rule_Metrics (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  READING_RULE_ID BIGINT NOT NULL,
  FIELD_ID BIGINT NOT NULL,
  RESOURCE_ID BIGINT DEFAULT NULL,
  CONSTRAINT Reading_Rule_Metrics_FIELD_ID FOREIGN KEY (FIELD_ID) REFERENCES Fields (FIELDID) ON DELETE CASCADE,
  CONSTRAINT Reading_Rule_Metrics_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT Reading_Rule_Metrics_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources (ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT Reading_Rule_Metrics_RULE_ID FOREIGN KEY (READING_RULE_ID) REFERENCES Reading_Rule (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Scheduled_Actions (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	NAME VARCHAR(100) NOT NULL,
	ACTION_ID BIGINT NOT NULL,
	FREQUENCY_TYPE TINYINT NOT NULL,
	JOB_TIME VARCHAR(5) NOT NULL,
	CONSTRAINT SCHEDULED_ACTIONS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT SCHEDULED_ACTIONS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID),
	CONSTRAINT SCHEDULED_ACTIONS_FK_ACTION_ID FOREIGN KEY (ACTION_ID) REFERENCES Action(ID)
);

CREATE TABLE IF NOT EXISTS Task_Section_Template_Triggers (
	SECTION_ID BIGINT NOT NULL,
	ORGID BIGINT NOT NULL,
	PM_TRIGGER_ID BIGINT NOT NULL,
	EXECUTE_IF_NOT_IN_TIME BIGINT,
	PRIMARY KEY (SECTION_ID, PM_TRIGGER_ID),
	CONSTRAINT Task_Section_Template_Triggers_FK_SECTION_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT Task_Section_Template_Triggers_FK_SECTION_ID FOREIGN KEY (SECTION_ID) REFERENCES Task_Section_Template(ID) ON DELETE CASCADE,
	CONSTRAINT Task_Section_Template_Triggers_FK_PM_TRIGGER_ID FOREIGN KEY (PM_TRIGGER_ID) REFERENCES PM_Triggers(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS PM_Jobs(
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	PM_ID BIGINT NOT NULL,
	PM_TRIGGER_ID BIGINT NOT NULL,
	NEXT_EXECUTION_TIME BIGINT NOT NULL,
	TEMPLATE_ID BIGINT,
	STATUS TINYINT NOT NULL,
	RESOURCE_ID BIGINT DEFAULT NULL,
	CONSTRAINT PM_JOBS_FK_PM_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT PM_JOBS_FK_PM_ID FOREIGN KEY (PM_ID) REFERENCES Preventive_Maintenance(ID),	-- removed unnecessary cascade
	CONSTRAINT PM_JOBS_FK_PM_TRIGGER_ID FOREIGN KEY (PM_TRIGGER_ID) REFERENCES PM_Triggers(ID) ON DELETE CASCADE,
	CONSTRAINT PM_Jobs_FK_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources (ID),
	CONSTRAINT PM_JOBS_FK_TEMPLATE_ID FOREIGN KEY (TEMPLATE_ID) REFERENCES Workorder_Template(ID)
);
-- Index for PM_Jobs
CREATE INDEX PM_JOBS_TRIGGER_ID_TIME_INDEX on PM_Jobs (PM_TRIGGER_ID,NEXT_EXECUTION_TIME);
CREATE INDEX PM_JOBS_PM_ID_TIME_INDEX on PM_Jobs (PM_ID,NEXT_EXECUTION_TIME);

CREATE TABLE IF NOT EXISTS PM_Reminders (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(150) DEFAULT NULL,
	PM_ID BIGINT NOT NULL,
	REMINDER_TYPE TINYINT NOT NULL,
	DURATION BIGINT NOT NULL,
	SCHEDULE_RULE_ID BIGINT,
	CONSTRAINT PM_REMINDER_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT PM_REMINDER_FK_PM_ID FOREIGN KEY (PM_ID) REFERENCES Preventive_Maintenance(ID) ON DELETE CASCADE,
	CONSTRAINT PM_REMINDER_FK_SCHEDULE_RULE_ID FOREIGN KEY (SCHEDULE_RULE_ID) REFERENCES Workflow_Rule(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS PM_Reminder_Action (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  PM_REMINDER_ID BIGINT NOT NULL,
  ACTION_ID BIGINT NOT NULL,
  CONSTRAINT PM_Reminder_Action_action_id FOREIGN KEY (ACTION_ID) REFERENCES Action (ID) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT PM_Reminder_Action_orgid FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT PM_Reminder_Action_reminder_id FOREIGN KEY (PM_REMINDER_ID) REFERENCES PM_Reminders (ID) ON DELETE CASCADE ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS Before_PM_Reminder_Trigger_Rel (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	PM_REMINDER_ID BIGINT,
	PM_TRIGGER_ID BIGINT,
	RESOURCE_ID BIGINT,
	CONSTRAINT BEFORE_PM_REMINDER_TRIGGER_REL_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT BEFORE_PM_REMINDER_TRIGGER_REL_UK UNIQUE(PM_REMINDER_ID, PM_TRIGGER_ID,RESOURCE_ID),
	CONSTRAINT BEFORE_PM_REMINDER_TRIGGER_REL_FK_PM_REMINDER_ID FOREIGN KEY (PM_REMINDER_ID) REFERENCES PM_Reminders(ID) ON DELETE CASCADE,
	CONSTRAINT BEFORE_PM_REMINDER_TRIGGER_REL_PM_TRIGGER_ID FOREIGN KEY (PM_TRIGGER_ID) REFERENCES PM_Triggers(ID) ON DELETE CASCADE,
	CONSTRAINT BEFORE_PM_REMINDER_TRIGGER_REL_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS After_PM_Reminder_WO_Rel (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	PM_REMINDER_ID BIGINT,
	WO_ID BIGINT,
	CONSTRAINT AFTER_PM_REMINDERS_WO_REL_FK_PM_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT AFTER_PM_REMINDERS_WO_REL_FK_PM_REMINDER_ID FOREIGN KEY (PM_REMINDER_ID) REFERENCES PM_Reminders(ID) ON DELETE CASCADE,
	CONSTRAINT AFTER_PM_REMINDERS_WO_REL_FK_WO_ID FOREIGN KEY (WO_ID) REFERENCES WorkOrders(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS PM_Resource_Planner (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  PM_ID BIGINT DEFAULT NULL,
  RESOURCE_ID BIGINT DEFAULT NULL,
  TRIGGER_ID BIGINT DEFAULT NULL,
  ASSIGNED_TO BIGINT DEFAULT NULL,
  CONSTRAINT PM_Triggers_Resource_ASSIGNED_TO_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT PM_Triggers_Resource_ASSIGNED_TO_ID FOREIGN KEY (ASSIGNED_TO) REFERENCES ORG_Users (ORG_USERID) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT PM_Triggers_Resource_PM_ID FOREIGN KEY (PM_ID) REFERENCES Preventive_Maintenance (ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT PM_Triggers_Resource_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources (ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT PM_Triggers_Resource_TRIGGER_ID FOREIGN KEY (TRIGGER_ID) REFERENCES PM_Triggers (ID) ON DELETE CASCADE ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS PM_Resource_Planner_Reminder (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  PM_ID BIGINT DEFAULT NULL,
  PM_RESOURCE_PLANNER_ID BIGINT DEFAULT NULL,
  PM_REMAINDER_ID BIGINT DEFAULT NULL,
  CONSTRAINT PM_Resource_Planner_Remainder_fk_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  CONSTRAINT PM_Resource_Planner_Remainder_fk_id FOREIGN KEY (PM_RESOURCE_PLANNER_ID) REFERENCES PM_Resource_Planner (ID) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT PM_Resource_Planner_Remainder_pmid FOREIGN KEY (PM_ID) REFERENCES Preventive_Maintenance (ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT PM_Resource_Planner_Remainder_reminder_id FOREIGN KEY (PM_REMAINDER_ID) REFERENCES PM_Reminders (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS PM_Resource_Planner_Triggers (
	PM_RESOURCE_PLANNER_ID BIGINT NOT NULL,
	TRIGGER_ID BIGINT NOT NULL,
	ORGID BIGINT NOT NULL,
	PRIMARY KEY (PM_RESOURCE_PLANNER_ID, TRIGGER_ID),
	CONSTRAINT PM_Resource_Planner_Triggers_orgid FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT PM_Resource_Planner_Triggers_TRIGGER_ID FOREIGN KEY (TRIGGER_ID) REFERENCES PM_Triggers (ID) ON DELETE CASCADE,
	CONSTRAINT PM_Resource_Planner_fk_id FOREIGN KEY (PM_RESOURCE_PLANNER_ID) REFERENCES PM_Resource_Planner (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS PM_Resource_Schedule_Rule_Rel (
     ORGID BIGINT NOT NULL,
     PM_ID BIGINT NOT NULL,
     RESOURCE_ID BIGINT NOT NULL,
     SCHEDULE_RULE_ID BIGINT NOT NULL,
     PRIMARY KEY (PM_ID, RESOURCE_ID, SCHEDULE_RULE_ID),
     CONSTRAINT PM_Resource_Schedule_Rule_Rel_fk_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
     CONSTRAINT PM_Resource_Schedule_Rule_Rel_pmid FOREIGN KEY (PM_ID) REFERENCES Preventive_Maintenance (ID) ON DELETE CASCADE,
     CONSTRAINT PM_Resource_Schedule_Rule_Rel_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources (ID) ON DELETE CASCADE,
     CONSTRAINT PM_Resource_Schedule_Rule_Rel_Rule_Id FOREIGN KEY (SCHEDULE_RULE_ID) REFERENCES Workflow_Rule(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Report_BaseLine_Rel (
	BASE_LINE_ID BIGINT,
	ORGID BIGINT NOT NULL,
	REPORT_ID BIGINT,
	ADJUST_TYPE TINYINT,
	PRIMARY KEY(BASE_LINE_ID, REPORT_ID),
	CONSTRAINT REPORT_BASE_LINE_REL_BASE_LINE_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT REPORT_BASE_LINE_REL_BASE_LINE_ID_FK FOREIGN KEY (BASE_LINE_ID) REFERENCES BaseLines(ID) ON DELETE CASCADE,
	CONSTRAINT REPORT_BASE_LINE_REL_REPORT_ID_FK FOREIGN KEY (REPORT_ID) REFERENCES Report(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Report_Columns (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	REPORT_ENTITY_ID BIGINT,
	REPORT_ID BIGINT,
	BASE_LINE_ID BIGINT,
	BASE_LINE_ADJUST BOOLEAN,
	IS_ACTIVE BOOLEAN,
	SEQUENCE_NUMBER INT,
	WIDTH INT,
	CONSTRAINT REPORT_COLUMNS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT REPORT_COLUMNS_REPORT_ENTITY_ID_FK FOREIGN KEY (REPORT_ENTITY_ID) REFERENCES Report_Entity (ID) ON DELETE CASCADE,
	CONSTRAINT REPORT_COLUMNS_REPORT_ID_FK FOREIGN KEY (REPORT_ID) REFERENCES Report(ID) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS Reading_Data_Meta (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT(20) NOT NULL,
  RESOURCE_ID BIGINT(20) NOT NULL,
  FIELD_ID BIGINT(20) NOT NULL,
  TTIME BIGINT(20) NOT NULL, 
  VALUE VARCHAR(500) NOT NULL,
  READING_DATA_ID BIGINT,
  INPUT_TYPE TINYINT NOT NULL,
  READING_TYPE TINYINT,
  UNIT INT,
  CONSTRAINT READING_DATA_META_UNIQUE UNIQUE (ORGID,RESOURCE_ID,FIELD_ID),
  CONSTRAINT READING_DATA_META_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT READING_DATA_META_FK_FIELDID FOREIGN KEY (FIELD_ID) REFERENCES Fields(FIELDID) ON DELETE CASCADE,
  CONSTRAINT READING_DATA_META_FK_RESOURCEID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources(ID) ON DELETE CASCADE
);

CREATE INDEX READING_DATA_META_ORGID_RESOURCE_ID_FIELD_ID ON Reading_Data_Meta (ORGID, RESOURCE_ID, FIELD_ID);
CREATE INDEX READING_DATA_META_ORGID_RESOURCE_ID ON Reading_Data_Meta (ORGID, RESOURCE_ID);

CREATE TABLE IF NOT EXISTS Reading_Input_Values (
	ORGID BIGINT NOT NULL,
	RDMID BIGINT NOT NULL,
	INPUT_VALUE VARCHAR(100) NOT NULL,
	IDX INT NOT NULL,
	PRIMARY KEY(ORGID,RDMID,IDX),
	CONSTRAINT READING_INPUT_VALUES_UNIQUE UNIQUE (ORGID,RDMID,INPUT_VALUE),
	CONSTRAINT READING_INPUT_VALUES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT READING_INPUT_VALUES_FK_RDMID FOREIGN KEY (RDMID) REFERENCES Reading_Data_Meta(ID) ON DELETE CASCADE 
);

CREATE TABLE IF NOT EXISTS Marked_Reading (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT(20) NOT NULL,
  DATA_ID BIGINT(20),
  MODULEID BIGINT(20),
  RESOURCE_ID BIGINT(20), 
  FIELD_ID BIGINT(20),
  MARK_TYPE TINYINT NOT NULL,
  TTIME BIGINT(20), 
  ACTUAL_VALUE VARCHAR(500),
  MODIFIED_VALUE VARCHAR(500),
  CONSTRAINT MARKED_READING_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID) ON DELETE CASCADE,
  CONSTRAINT MARKED_READING_FK_FIELDID FOREIGN KEY (FIELD_ID) REFERENCES Fields(FIELDID) ON DELETE CASCADE,
  CONSTRAINT MARKED_READING_FK_RESOURCEID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources(ID) ON DELETE CASCADE  
);

CREATE TABLE IF NOT EXISTS Dashboard_Sharing (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT(20) NOT NULL,
  DASHBOARD_ID BIGINT(20) NOT NULL,
  ORG_USERID BIGINT(20), 
  ROLE_ID BIGINT(20),
  GROUP_ID BIGINT(20),
  SHARING_TYPE TINYINT NOT NULL,
  CONSTRAINT DASHBOARD_SHARING_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT DASHBOARD_SHARING_FK_DASHBOARD_ID FOREIGN KEY (DASHBOARD_ID) REFERENCES Dashboard (ID),
  CONSTRAINT DASHBOARD_SHARING_FK_ORG_USERID FOREIGN KEY (ORG_USERID) REFERENCES ORG_Users(ORG_USERID),
  CONSTRAINT DASHBOARD_SHARING_FK_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES Role(ROLE_ID),
  CONSTRAINT DASHBOARD_SHARING_FK_GROUP_ID FOREIGN KEY (GROUP_ID) REFERENCES `Groups`(GROUPID)
);

CREATE TABLE IF NOT EXISTS View_Sharing (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT(20) NOT NULL,
  VIEWID BIGINT(20) NOT NULL,
  ORG_USERID BIGINT(20), 
  ROLE_ID BIGINT(20),
  GROUP_ID BIGINT(20),
  SHARING_TYPE TINYINT NOT NULL,
  CONSTRAINT VIEW_SHARING_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT VIEW_SHARING_VIEWID_FK FOREIGN KEY (VIEWID) REFERENCES Views(ID)  ON DELETE CASCADE,
  CONSTRAINT VIEW_SHARING_FK_ORG_USERID FOREIGN KEY (ORG_USERID) REFERENCES ORG_Users(ORG_USERID),
  CONSTRAINT VIEW_SHARING_FK_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES Role(ROLE_ID),
  CONSTRAINT VIEW_SHARING_FK_GROUP_ID FOREIGN KEY (GROUP_ID) REFERENCES `Groups`(GROUPID)
);

CREATE TABLE IF NOT EXISTS Derivations (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT(20) NOT NULL,
  NAME VARCHAR(45) NOT NULL,
  ANALYTICS_TYPE TINYINT NOT NULL,
  WORKFLOW_ID BIGINT NOT NULL,
  FORMULA_FIELD_ID BIGINT,
  CONSTRAINT DERIVATIONS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT DERIVATIONS_FORMULA_FIELD_ID FOREIGN KEY (FORMULA_FIELD_ID) REFERENCES Formula_Field(ID),
  CONSTRAINT DERIVATIONS_WORKLFOW_ID FOREIGN KEY (WORKFLOW_ID) REFERENCES Workflow (ID) ON DELETE CASCADE
);



CREATE TABLE IF NOT EXISTS Tenant_Users (
	TENANTID BIGINT(20) NOT NULL,
    ORGID BIGINT(20) NOT NULL,
    ORG_USERID BIGINT(20) NOT NULL,
 	CONSTRAINT TENANT_USERS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
  	CONSTRAINT TENANT_USERS_FK_ORG_USERID FOREIGN KEY (ORG_USERID) REFERENCES ORG_Users (ORG_USERID) ON DELETE CASCADE,
	CONSTRAINT TENANT_USERS_FK_TENANTID FOREIGN KEY (TENANTID) REFERENCES Tenants (ID) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS Tenants_Utility_Mapping (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT(20) NOT NULL,
	TENANT_ID BIGINT NOT NULL,
	UTILITY_ID BIGINT NOT NULL,
	ASSET_ID BIGINT NOT NULL,
	SHOW_IN_PORTAL TINYINT DEFAULT NULL,
	CONSTRAINT TENANTS_UTILITY_MAPPING_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT TENANTS_UTILITY_MAPPING_FK_TENANT_ID FOREIGN KEY (TENANT_ID) REFERENCES Tenants (ID) ON DELETE CASCADE,
	CONSTRAINT TENANTS_UTILITY_MAPPING_FK_ASSET_ID FOREIGN KEY (ASSET_ID) REFERENCES Assets (ID),
	CONSTRAINT TENANTS_UTILITY_MAPPING_UNIQUE UNIQUE (TENANT_ID,UTILITY_ID,ASSET_ID)
);


CREATE TABLE IF NOT EXISTS Tenant_Attachments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_TENANT BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	FILE_ID BIGINT NOT NULL,
	ATTACHMENT_TYPE TINYINT,
	CONSTRAINT Tenant_ATTACHEMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT Tenant_ATTACHEMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT Tenant_ATTACHEMENTS_FK_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile (FILE_ID),
	CONSTRAINT Tenant_ATTACHEMENTS_FK_PARENT_TENANT FOREIGN KEY (PARENT_TENANT) REFERENCES Tenants (ID)

);

CREATE TABLE IF NOT EXISTS Tenant_Notes (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	MODULEID BIGINT NOT NULL,
	CREATED_BY BIGINT,
	CREATED_TIME BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000) NOT NULL,
	CONSTRAINT Tenant_NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT Tenant_NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT Tenant_NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT Tenant_NOTES_FK_PARENT_TENANT FOREIGN KEY (PARENT_ID) REFERENCES Tenants (ID)
);


 CREATE TABLE IF NOT EXISTS Rate_Card (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT(20) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(500),
	CONSTRAINT RATE_CARD_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID)
 );

 CREATE TABLE IF NOT EXISTS Rate_Card_Services (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT(20) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	RATE_CARD_ID BIGINT NOT NULL,
	SERVICE_TYPE TINYINT NOT NULL,
	UTILITY_ID BIGINT,
	PRICE DOUBLE,
	WORKFLOW_ID BIGINT,
	CONSTRAINT RATE_CARD_SERVICES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT RATE_CARD_SERVICES_FK_RATE_CARD_ID FOREIGN KEY (RATE_CARD_ID) REFERENCES Rate_Card (ID) ON DELETE CASCADE,
	CONSTRAINT RATE_CARD_SERVICES_FK_WORKFLOW_ID FOREIGN KEY (WORKFLOW_ID) REFERENCES Workflow (ID),
	CONSTRAINT RATE_CARD_SERVICES_UNIQUE UNIQUE (RATE_CARD_ID,UTILITY_ID)
 );
 
 CREATE TABLE IF NOT EXISTS Module_Local_ID (
  ORGID BIGINT NOT NULL,
  MODULE_NAME varchar(45) NOT NULL,
  LAST_LOCAL_ID BIGINT NOT NULL,
  PRIMARY KEY (MODULE_NAME,ORGID),
  CONSTRAINT MODULE_LOCAL_ID_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID) ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS Shift (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	SITE_ID BIGINT NOT NULL,
	BUSINESSHOURSID BIGINT NOT NULL,
	ISSAMETIME BOOLEAN NOT NULL,
	START_TIME TIME,
	END_TIME TIME,
	CONSTRAINT SHIFT_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT SHIFT_SITE_ID_FK FOREIGN KEY (SITE_ID) REFERENCES Site (ID),
	CONSTRAINT SHIFT_BUSINESSHOURS_FK FOREIGN KEY (BUSINESSHOURSID) REFERENCES BusinessHours (ID)
);

CREATE TABLE IF NOT EXISTS Shift_User_Rel (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	ORG_USERID BIGINT NOT NULL,
	SHIFTID BIGINT NOT NULL,
	CONSTRAINT SHIFT_USER_REL_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID) ,
	CONSTRAINT SHIFT_USER_REL_USERID_FK FOREIGN KEY (ORG_USERID) REFERENCES ORG_Users (ORG_USERID) ON DELETE CASCADE,
	CONSTRAINT SHIFT_USER_REL_SHIFTID_FK FOREIGN KEY (SHIFTID) REFERENCES Shift (ID)
);

CREATE TABLE IF NOT EXISTS Costs (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	NAME VARCHAR(100) NOT NULL,
	UTILITY_ID TINYINT NOT NULL,
	UTILITY_PROVIDER VARCHAR(100),
	READING_ID BIGINT NOT NULL,
	CONSTRAINT COSTS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT COSTS_SITE_ID_FK FOREIGN KEY (SITE_ID) REFERENCES Site (ID),
	CONSTRAINT COSTS_READING_ID_FK FOREIGN KEY (READING_ID) REFERENCES Modules (MODULEID)
);

CREATE TABLE IF NOT EXISTS Cost_Slabs (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	COST_ID BIGINT NOT NULL,
	NAME VARCHAR(100),
	UNIT_COST DOUBLE NOT NULL,
	START_RANGE DOUBLE,
	END_RANGE DOUBLE,
	MAX_UNIT DOUBLE,
	CONSTRAINT COST_SLABS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT COST_SLABS_SITE_ID_FK FOREIGN KEY (SITE_ID) REFERENCES Site (ID),
	CONSTRAINT COST_SLABS_COST_ID_FK FOREIGN KEY (COST_ID) REFERENCES Costs (ID)
);

CREATE TABLE IF NOT EXISTS Additional_Costs (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	COST_ID BIGINT NOT NULL,
	NAME VARCHAR (100) NOT NULL,
	COST DOUBLE NOT NULL,
	COST_TYPE TINYINT NOT NULL,
	READING_FIELD_ID BIGINT NOT NULL,
	CONSTRAINT ADDITONAL_COSTS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT ADDITONAL_COSTS_SITE_ID_FK FOREIGN KEY (SITE_ID) REFERENCES Site (ID),
	CONSTRAINT ADDITONAL_COSTS_COST_ID_FK FOREIGN KEY (COST_ID) REFERENCES Costs (ID),
	CONSTRAINT ADDITONAL_COSTS_READING_FIELD_ID_FK FOREIGN KEY (READING_FIELD_ID) REFERENCES Fields (FIELDID)
);

CREATE TABLE IF NOT EXISTS Cost_Assets (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	COST_ID BIGINT NOT NULL,
	ASSET_ID BIGINT NOT NULL,
	BILL_START_DAY INT NOT NULL,
	NO_OF_BILL_MONTHS INT NOT NULL,
	FIRST_BILL_TIME BIGINT NOT NULL,
	CONSTRAINT COST_ASSETS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT COST_ASSETS_SITE_ID_FK FOREIGN KEY (SITE_ID) REFERENCES Site (ID),
	CONSTRAINT COST_ASSETS_COST_ID_FK FOREIGN KEY (COST_ID) REFERENCES Costs (ID)
);

CREATE TABLE IF NOT EXISTS Cost_Readings (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ACTUAL_TTIME BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	TTIME_DATE DATE NOT NULL,
	TTIME_MONTH INT NOT NULL,
	TTIME_WEEK INT NOT NULL,
	TTIME_DAY INT NOT NULL,
	TTIME_HOUR INT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	TOTAL_COST DOUBLE NOT NULL,
	SLAB_COST DOUBLE,
	DECIMAL_CF1 DOUBLE,
	DECIMAL_CF2 DOUBLE,
	DECIMAL_CF3 DOUBLE,
	DECIMAL_CF4 DOUBLE,
	DECIMAL_CF5 DOUBLE,
	DECIMAL_CF6 DOUBLE,
	DECIMAL_CF7 DOUBLE,
	DECIMAL_CF8 DOUBLE,
	DECIMAL_CF9 DOUBLE,
	DECIMAL_CF10 DOUBLE,
	CONSTRAINT COST_READINGS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT COST_READINGS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT COST_READINGS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Assets(ID)
);

-- Create indexes for Cost_Readings table
CREATE INDEX COST_READINGS_PARENT_ID_INDEX on Cost_Readings (PARENT_ID);
CREATE INDEX COST_READINGS_PARENT_ID_TTIME_INDEX ON Cost_Readings (ORGID, MODULEID, PARENT_ID, TTIME);
CREATE INDEX COST_READINGS_TTIME_INDEX ON Cost_Readings (ORGID, MODULEID, TTIME);


CREATE TABLE IF NOT EXISTS server_info (
  id bigint(20) NOT NULL AUTO_INCREMENT,
  private_ip varchar(50) DEFAULT NULL,
  environment varchar(18) DEFAULT NULL,
  status tinyint(4) DEFAULT NULL,
  pingtime bigint(20) DEFAULT NULL,
  in_use tinyint(4) DEFAULT NULL,
  leader tinyint(4) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY private_ip (private_ip)
  );
  
  CREATE TABLE IF NOT EXISTS Sync_Errors (
  	ORGID BIGINT NOT NULL,
  	MODULE_NAME VARCHAR(100),
  	SYNCED_BY BIGINT NOT NULL,
  	CREATED_TIME BIGINT NOT NULL,
  	LAST_SYNC_TIME BIGINT NOT NULL,
  	ERROR_INFO VARCHAR(5000) NOT NULL,
  	CONSTRAINT SYNC_ERRORS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT SYNC_ERRORS_FK_SYNCED_BY FOREIGN KEY (SYNCED_BY) REFERENCES ORG_Users(ORG_USERID)
  );

  CREATE TABLE IF NOT EXISTS DeviceDetails (
    ID bigint(20) NOT NULL AUTO_INCREMENT,
    ORGID bigint(20) NOT NULL,
    DEVICE_NAME varchar(30) DEFAULT NULL,
    DEVICE_ID varchar(30) NOT NULL,
    IN_USE tinyint(4) NOT NULL,
    LAST_UPDATED_TIME bigint(20) NOT NULL,
    ALERT_FREQUENCY bigint(20) NOT NULL DEFAULT 2400000,
    LAST_ALERTED_TIME bigint(20) NOT NULL DEFAULT 0,
    PRIMARY KEY (ID),
    CONSTRAINT DEVICE_DETAILS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
   );

  CREATE TABLE IF NOT EXISTS ClientApp (
     id int(11) NOT NULL AUTO_INCREMENT,
     environment varchar(50) NOT NULL,
     version varchar(20) NOT NULL,
		 is_new_client_build BOOLEAN DEFAULT 0,
     updatedTime bigint(20) DEFAULT NULL,
     updatedBy bigint(20) DEFAULT NULL,
     PRIMARY KEY (id)
   );

CREATE TABLE IF NOT EXISTS Workorder_cost (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	COST_TYPE INT(11),
	COST DOUBLE,
	TTIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	NAME VARCHAR(100),
	QUANTITY BIGINT,

	CONSTRAINT WORKORDER_COST_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WORKORDER_COST_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT WORKORDER_COST_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Tickets(ID) ON DELETE CASCADE	
);

CREATE TABLE IF NOT EXISTS Store_room (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(100),
	DESCRIPTION VARCHAR(500),
	LOCATION_ID BIGINT,
	OWNER_ID BIGINT,
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	SITE_ID BIGINT,
	NO_OF_TOOL_TYPES INT,
	NO_OF_ITEM_TYPES INT,
	IS_APPROVAL_NEEDED BOOLEAN,
	LAST_PURCHASED_DATE BIGINT,
	IS_GATE_PASS_REQUIRED BOOLEAN,
	
	CONSTRAINT STORE_ROOM_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT STORE_ROOM_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT STORE_ROOM_FK_LOCATION FOREIGN KEY (LOCATION_ID) REFERENCES Locations(ID),
	CONSTRAINT STORE_ROOM_FK_OWNER FOREIGN KEY (OWNER_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT STORE_ROOM_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

CREATE TABLE IF NOT EXISTS Gate_Pass (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SYS_CREATED_TIME BIGINT(20),
	SYS_MODIFIED_TIME BIGINT(20),
	SYS_CREATED_BY BIGINT,
	SYS_MODIFIED_BY BIGINT,
	SYS_DELETED TINYINT,
	ISSUED_TIME BIGINT,
	RETURN_TIME BIGINT,
	ISSUED_TO VARCHAR(100),
	ISSUED_BY BIGINT,
	IS_RETURNABLE BOOLEAN,
	GATE_PASS_TYPE TINYINT NOT NULL,
	LOCAL_ID BIGINT,
	VEHICLE_NO VARCHAR(50),
	
	CONSTRAINT GATE_PASS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT GATE_PASS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT GATE_PASS_FK_SYS_CREATED_BY_ID FOREIGN KEY (SYS_CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT GATE_PASS_FK_SYS_MODIFIED_BY_ID FOREIGN KEY (SYS_MODIFIED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT GATE_PASS_FK_SYS_ISSUED_BY FOREIGN KEY (ISSUED_BY) REFERENCES ORG_Users(ORG_USERID)
);

CREATE TABLE IF NOT EXISTS Store_room_Notes (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	MODULEID BIGINT NOT NULL,
	CREATED_BY BIGINT,
	CREATED_TIME BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000) NOT NULL,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT STORE_ROOM_NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT STORE_ROOM_NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT STORE_ROOM_NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT STORE_ROOM_NOTES_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Store_room(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Store_room_Attachments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	FILE_ID BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT STORE_ROOM_ATTACHEMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT STORE_ROOM_ATTACHEMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT STORE_ROOM_ATTACHEMENTS_FK_PARENT_ASSET FOREIGN KEY (PARENT_ID) REFERENCES Store_room (ID) ON DELETE CASCADE,
	CONSTRAINT STORE_ROOM_ATTACHEMENTS_FK_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile (FILE_ID)
);

    CREATE TABLE IF NOT EXISTS Store_Room_Photos (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_STORE_ROOM BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	PHOTO_ID BIGINT NOT NULL,
	CONSTRAINT STORE_ROOM_PHOTOS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT STORE_ROOM_PHOTOS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT STORE_ROOM_PHOTOS_FK_PARENT_STORE_ROOM FOREIGN KEY (PARENT_STORE_ROOM) REFERENCES Store_room (ID),
	CONSTRAINT STORE_ROOM_PHOTOS_FK_PHOTO_ID FOREIGN KEY (PHOTO_ID) REFERENCES FacilioFile (FILE_ID)
);

CREATE TABLE IF NOT EXISTS Item_Types_category (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	DISPLAY_NAME VARCHAR(50),
	DESCRIPTION VARCHAR(500),
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT ITEM_CATEGORY_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ITEM_CATEGORY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Item_Type_Activity (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SYS_CREATED_TIME BIGINT,
	SYS_MODIFIED_TIME BIGINT,
	SYS_CREATED_BY BIGINT,
	SYS_MODIFIED_BY BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TTIME BIGINT NOT NULL,
	ACTIVITY_TYPE TINYINT NOT NULL,
	DONE_BY_ID BIGINT NOT NULL,
	INFO VARCHAR(5000),
	CONSTRAINT ITEM_ACTIVITY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ITEM_ACTIVITY_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ITEM_ACTIVITY_FK_DONE_BY_ID FOREIGN KEY (DONE_BY_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT ITEM_ACTIVITY_FK_SYS_CREATED_BY FOREIGN KEY (SYS_CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT ITEM_ACTIVITY_FK_SYS_MODIFIED_BY FOREIGN KEY (SYS_MODIFIED_BY) REFERENCES ORG_Users(ORG_USERID)
);

CREATE TABLE IF NOT EXISTS Vendors (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50),
	DESCRIPTION VARCHAR(500),
	EMAIL VARCHAR(255),
	PHONE CHAR(20),
	WEBSITE VARCHAR(255),
	ADDRESS BIGINT,
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT VENDORS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT VENDORS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT VENDORS_FK_ADDRESS FOREIGN KEY (ADDRESS) REFERENCES Locations(ID)
);

CREATE TABLE IF NOT EXISTS Vendors_Notes (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	MODULEID BIGINT NOT NULL,
	CREATED_BY BIGINT,
	CREATED_TIME BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000) NOT NULL,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT VENDORS_NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT VENDORS_NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT VENDORS_NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT VENDORS_NOTES_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Vendors(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Vendors_Attachments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	FILE_ID BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT VENDORS_ATTACHEMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT VENDORS_ATTACHEMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT VENDORS_ATTACHEMENTS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Vendors (ID) ON DELETE CASCADE,
	CONSTRAINT VENDORS_ATTACHEMENTS_FK_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile (FILE_ID)
);

CREATE TABLE IF NOT EXISTS Inventory_category (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	DISPLAY_NAME VARCHAR(50),
	DESCRIPTION VARCHAR(500),
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT INVENTORY_CATEGORY_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT INVENTORY_CATEGORY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Item_Types_status (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	DISPLAY_NAME VARCHAR(50),
	DESCRIPTION VARCHAR(500),
	CREATED_TIME BIGINT,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT ITEM_STATUS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ITEM_STATUS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Item_Types (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR (50),
	DESCRIPTION VARCHAR(500),
	CATEGORY BIGINT,
	STATUS BIGINT,
	PHOTO BIGINT,
	SERIAL_NUMBER VARCHAR(100),
	UNIT INT,
	MINIMUM_QUANTITY DOUBLE,
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	LOCAL_ID BIGINT,
	INDIVIDUAL_TRACKING BOOLEAN,
	CURRENT_QUANTITY DOUBLE,
	LAST_PURCHASED_DATE BIGINT,
	LAST_ISSUED_DATE BIGINT,
	LAST_PURCHASED_PRICE DOUBLE,
	IS_APPROVAL_NEEDED BOOLEAN,
	
	CONSTRAINT ITEM_TYPES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ITEM_TYPES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ITEM_TYPES_FK_CATEGORY FOREIGN KEY (CATEGORY) REFERENCES Inventory_category(ID),
	CONSTRAINT ITEM_TYPES_FK_PHOTO FOREIGN KEY (PHOTO) REFERENCES FacilioFile(FILE_ID),
	CONSTRAINT ITEM_TYPES_FK_STATUS FOREIGN KEY (STATUS) REFERENCES Item_Types_status(ID)
);

CREATE TABLE IF NOT EXISTS Item_Types_Notes (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	MODULEID BIGINT NOT NULL,
	CREATED_BY BIGINT,
	CREATED_TIME BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000) NOT NULL,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT ITEM_TYPES_NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ITEM_TYPES_NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ITEM_TYPES_NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT ITEM_TYPES_NOTES_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Item_Types(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Item_Types_Attachments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	FILE_ID BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT ITEM_TYPES_ATTACHEMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ITEM_TYPES_ATTACHEMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ITEM_TYPES_ATTACHEMENTS_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Item_Types (ID) ON DELETE CASCADE,
	CONSTRAINT ITEM_TYPES_ATTACHEMENTS_FK_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile (FILE_ID)
);

CREATE TABLE IF NOT EXISTS Item_status (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	DISPLAY_NAME VARCHAR(50),
	DESCRIPTION VARCHAR(500),
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT INVENTORY_STATUS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT INVENTORY_STATUS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Item (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ITEM_TYPES_ID BIGINT,
	STORE_ROOM_ID BIGINT,
	STATUS BIGINT,
	COST_TYPE INT,
	QUANTITY DOUBLE,
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	LOCAL_ID BIGINT,
	SITE_ID BIGINT,
	LAST_PURCHASED_DATE BIGINT,
	LAST_PURCHASED_PRICE DOUBLE,
	MINIMUM_QUANTITY DOUBLE,

	CONSTRAINT ITEM_UNIQUE_ITEM_TYPES_ID_STORE_ROOM_ID UNIQUE (ITEM_TYPES_ID,STORE_ROOM_ID),
	CONSTRAINT ITEM_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ITEM_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ITEM_FK_ITEM_TYPES_ID FOREIGN KEY (ITEM_TYPES_ID) REFERENCES Item_Types(ID),
	CONSTRAINT ITEM_FK_STORE_ROOM_ID FOREIGN KEY (STORE_ROOM_ID) REFERENCES Store_room(ID),
	CONSTRAINT ITEM_FK_STATUS FOREIGN KEY (STATUS) REFERENCES Item_status(ID),
	CONSTRAINT ITEM_FK_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID)
);

--PRIMARY KEY (ITEM_ID, STORE_ROOM_ID),

CREATE TABLE IF NOT EXISTS Purchased_Item (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ITEM_ID BIGINT,
	UNIT_COST DOUBLE,
	QUANTITY DOUBLE,
	CURRENT_QUANTITY DOUBLE,
	COST_DATE BIGINT,
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	SERIAL_NUMBER VARCHAR(100),
	IS_USED BOOLEAN,
	ITEM_TYPE_ID BIGINT,
	
	CONSTRAINT PURCHASED_ITEM_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT PURCHASED_ITEM_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT PURCHASED_ITEM_FK_ITEM_ID FOREIGN KEY (ITEM_ID) REFERENCES Item(ID),
	CONSTRAINT PURCHASED_ITEM_FK_ITEM_TYPE_ID FOREIGN KEY (ITEM_TYPE_ID) REFERENCES Item_Types(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Item_Transactions (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PURCHASED_ITEM_ID BIGINT NOT NULL,
	ITEM_ID BIGINT NOT NULL,
	QUANTITY DOUBLE NOT NULL,
	TRANSACTION_TYPE INT,
	TRANSACTION_STATE INT,
	IS_RETURNABLE BOOLEAN,
	PARENT_ID BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT NOT NULL,
	PARENT_TRANSACTION_ID BIGINT,
	ITEM_TYPE_ID BIGINT,
	REMAINING_QUANTITY DOUBLE,
	ISSUED_TO BIGINT,
	APPROVED_STATE INT,
	WO_ID BIGINT,
	GATE_PASS_ID BIGINT,
	CONSTRAINT ITEM_TRANSACTIONS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ITEM_TRANSACTIONS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ITEM_TRANSACTIONS_FK_PURCHASED_ITEM_ID FOREIGN KEY (PURCHASED_ITEM_ID) REFERENCES Purchased_Item(ID) ON DELETE CASCADE,
	CONSTRAINT ITEM_TRANSACTIONS_FK_ITEM_ID FOREIGN KEY (ITEM_ID) REFERENCES Item(ID) ON DELETE CASCADE,
	CONSTRAINT ITEM_TRANSACTIONS_FK_ITEM_TYPE_ID FOREIGN KEY (ITEM_TYPE_ID) REFERENCES Item_Types(ID) ON DELETE CASCADE,
	CONSTRAINT ITEM_TRANSACTIONS_FK_ISSUED_TO FOREIGN KEY (ISSUED_TO) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT ITEM_TRANSACTIONS_FK_WO_ID FOREIGN KEY (WO_ID) REFERENCES Tickets(ID) ON DELETE CASCADE,
	CONSTRAINT ITEM_TRANSACTIONS_FK_GATE_PASS FOREIGN KEY (GATE_PASS_ID) REFERENCES Gate_Pass (ID)
);

CREATE TABLE IF NOT EXISTS Workorder_items (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	COST DOUBLE,
	
	CONSTRAINT WORKORDER_ITEMS_FK_ID FOREIGN KEY (ID) REFERENCES Item_Transactions(ID) ON DELETE CASCADE,
	CONSTRAINT WORKORDER_ITEMS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WORKORDER_ITEMS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID)
);

CREATE TABLE IF NOT EXISTS Item_Activity (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	ITEM_ID BIGINT NOT NULL,
	MODIFIED_TIME BIGINT NOT NULL,
	MODIFIED_BY BIGINT NOT NULL,
	ACTIVITY_TYPE INT NOT NULL,
	INFO VARCHAR(5000),
	CREATED_TIME BIGINT NOT NULL,
	
	CONSTRAINT Inventory_Activity_FK_INVENTORY_ID FOREIGN KEY (ITEM_ID) REFERENCES Item(ID) ON DELETE CASCADE,
	CONSTRAINT Inventory_Activity_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT Inventory_Activity_FK_MODIFIED_BY FOREIGN KEY (MODIFIED_BY) REFERENCES ORG_Users(ORG_USERID)
);

CREATE TABLE IF NOT EXISTS Tool_types_category (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	DISPLAY_NAME VARCHAR(50),
	DESCRIPTION VARCHAR(500),
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT TOOL_TYPES_CATEGORY_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TOOL_TYPES_CATEGORY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Tool_types_status (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	DISPLAY_NAME VARCHAR(50),
	DESCRIPTION VARCHAR(500),
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT TOOL_TYPES_STATUS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TOOL_TYPES_STATUS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Tool_types(
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR (50),
	DESCRIPTION VARCHAR(500),
	CATEGORY BIGINT,
	STATUS BIGINT,
	PHOTO BIGINT,
	SERIAL_NUMBER VARCHAR(100),
	UNIT INT,
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	LOCAL_ID BIGINT,
	INDIVIDUAL_TRACKING BOOLEAN,
	CURRENT_QUANTITY DOUBLE,
	LAST_PURCHASED_DATE BIGINT,
	LAST_ISSUED_DATE BIGINT,
	IS_APPROVAL_NEEDED BOOLEAN,
	
	CONSTRAINT TOOLS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TOOLS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TOOLS_FK_STATUS FOREIGN KEY (STATUS) REFERENCES Tool_types_status(ID),
	CONSTRAINT TOOLS_FK_PHOTO FOREIGN KEY (PHOTO) REFERENCES FacilioFile(FILE_ID),
	CONSTRAINT TOOLS_FK_CATEGORY FOREIGN KEY (CATEGORY) REFERENCES Inventory_category(ID)
);

CREATE TABLE IF NOT EXISTS Tool_status (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	DISPLAY_NAME VARCHAR(50),
	DESCRIPTION VARCHAR(500),
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT TOOL_STATUS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TOOL_STATUS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);


CREATE TABLE IF NOT EXISTS Tool (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	TOOL_TYPE_ID BIGINT,
	STORE_ROOM_ID BIGINT,
	STATUS BIGINT,
	QUANTITY DOUBLE,
	CURRENT_QUANTITY DOUBLE,
	RATE DOUBLE,
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	LOCAL_ID BIGINT,
	SITE_ID BIGINT,
	LAST_PURCHASED_DATE BIGINT,
	
	CONSTRAINT STOCKED_TOOLS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT STOCKED_TOOLS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT STOCKED_TOOLS_FK_TOOLS_ID FOREIGN KEY (TOOL_TYPE_ID) REFERENCES Tool_types(ID),
	CONSTRAINT STOCKED_TOOLS_FK_STORE_ROOM_ID FOREIGN KEY (STORE_ROOM_ID) REFERENCES Store_room(ID),
	CONSTRAINT STOCKED_TOOLS_FK_STATUS FOREIGN KEY (STATUS) REFERENCES Tool_status(ID),
	CONSTRAINT STOCKED_TOOLS_FK_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID),
	CONSTRAINT STOCKED_TOOLS_UNIQUE_STORE_TOOL_TYPE UNIQUE(STORE_ROOM_ID, TOOL_TYPE_ID)
);

CREATE TABLE IF NOT EXISTS Purchased_Tool (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	TOOL_ID BIGINT,
	RATE DOUBLE,
	COST_DATE BIGINT,
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	SERIAL_NUMBER VARCHAR(100),
	IS_USED BOOLEAN,
	TOOL_TYPE_ID BIGINT,
	
	CONSTRAINT PURCHASED_TOOL_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT PURCHASED_TOOL_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT PURCHASED_TOOL_FK_ITEM_ID FOREIGN KEY (TOOL_ID) REFERENCES Tool(ID),
	CONSTRAINT PURCHASED_TOOL_FK_TOOL_TYPE_ID FOREIGN KEY (TOOL_TYPE_ID) REFERENCES Tool_types(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Tool_types_Notes (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	MODULEID BIGINT NOT NULL,
	CREATED_BY BIGINT,
	CREATED_TIME BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000) NOT NULL,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT TOOL_NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TOOL_NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TOOL_NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT TOOL_NOTES_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Tool_types(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Tool_types_Attachments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_ID BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	FILE_ID BIGINT NOT NULL,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT TOOL_ATTACHEMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TOOL_ATTACHEMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TOOL_ATTACHEMENTS_FK_PARENT_ASSET FOREIGN KEY (PARENT_ID) REFERENCES Tool_types (ID) ON DELETE CASCADE,
	CONSTRAINT TOOL_ATTACHEMENTS_FK_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile (FILE_ID)
);

CREATE TABLE IF NOT EXISTS Tool_transactions (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	TOOL BIGINT NOT NULL,
	QUANTITY DOUBLE NOT NULL,
	TRANSACTION_TYPE INT,
	TRANSACTION_STATE INT,
	PARENT_ID BIGINT NOT NULL,
	PARENT_TRANSACTION_ID BIGINT,
	CREATED_TIME BIGINT NOT NULL,
	MODIFIED_TIME BIGINT NOT NULL,
	PURCHASED_TOOL_ID BIGINT,
	TOOL_TYPE_ID BIGINT,
	REMAINING_QUANTITY DOUBLE,
	ISSUED_TO BIGINT,
	APPROVED_STATE INT,
	WO_ID BIGINT,
	GATE_PASS_ID BIGINT,
	CONSTRAINT TOOL_TRANSACTIONS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TOOL_TRANSACTIONS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TOOL_TRANSACTIONS_FK_TOOL FOREIGN KEY (TOOL) REFERENCES Tool(ID),
	CONSTRAINT TOOL_TRANSACTIONS_FK_PURCHASED_TOOL_ID FOREIGN KEY (PURCHASED_TOOL_ID) REFERENCES Purchased_Tool(ID) ON DELETE CASCADE,
	CONSTRAINT TOOL_TRANSACTIONS_FK_TOOL_TYPE_ID FOREIGN KEY (TOOL_TYPE_ID) REFERENCES Tool_types(ID) ON DELETE CASCADE,
	CONSTRAINT TOOL_TRANSACTIONS_FK_ISSUED_TO FOREIGN KEY (ISSUED_TO) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT TOOL_TRANSACTIONS_FK_WO_ID FOREIGN KEY (WO_ID) REFERENCES Tickets(ID) ON DELETE CASCADE,
	CONSTRAINT TOOL_TRANSACTIONS_FK_GATE_PASS FOREIGN KEY (GATE_PASS_ID) REFERENCES Gate_Pass (ID)
);

CREATE TABLE IF NOT EXISTS Workorder_tools (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ISSUE_TIME BIGINT,
	RETURN_TIME BIGINT,
	DURATION BIGINT,
	COST DOUBLE,
	
	CONSTRAINT WORKORDER_TOOLS_FK_ID FOREIGN KEY (ID) REFERENCES Tool_transactions(ID) ON DELETE CASCADE,
	CONSTRAINT WORKORDER_TOOLS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WORKORDER_TOOLS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID)
);

CREATE TABLE IF NOT EXISTS Item_vendors (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	ITEM_TYPES_ID BIGINT,
	VENDOR_ID BIGINT,
	ORDERING_UNIT INT,
	PRICE DOUBLE,
	DATE_ORDERED BIGINT,
	CREATED_TIME BIGINT,
	MODIFIED_TIME BIGINT,
	
	CONSTRAINT ITEM_VENDORS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ITEM_VENDORS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ITEM_VENDORS_FK_ITEM_TYPES_ID FOREIGN KEY (ITEM_TYPES_ID) REFERENCES Item_Types(ID),
	CONSTRAINT ITEM_VENDORS_FK_VENDOR_ID FOREIGN KEY (VENDOR_ID) REFERENCES Vendors(ID)
);

CREATE TABLE IF NOT EXISTS Labour (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(255),
	PHONE BIGINT,
	EMAIL VARCHAR(255),
	LOCATION_ID BIGINT(20),
	COST DOUBLE,
	UNIT TINYINT,
	USER_ID BIGINT,
	AVAILABILITY TINYINT,
	SYS_CREATED_TIME BIGINT(20),
	SYS_MODIFIED_TIME BIGINT(20),
	SYS_DELETED TINYINT,
	LOCAL_ID BIGINT(20),
	SITE_ID BIGINT,
	CONSTRAINT LABOUR_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT LABOUR_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Resources(ID),
	CONSTRAINT LABOUR_FK_USER_ID FOREIGN KEY (USER_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT LABOUR_FK_LOCATION_ID FOREIGN KEY (LOCATION_ID) REFERENCES Locations(ID),
  	CONSTRAINT LABOUR_FK_MODULE_ID FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Workorder_labour (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
    START_TIME BIGINT,
	END_TIME BIGINT,
	DURATION BIGINT,
	COST DOUBLE,
	PARENT_ID BIGINT,
	LABOUR BIGINT,
	CONSTRAINT WORKORDER_LABOUR_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT WORKORDER_LABOUR_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT WORKORDER_LABOUR_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Tickets(ID),
	CONSTRAINT WORKORDER_LABOUR_FK_LABOUR FOREIGN KEY (LABOUR) REFERENCES Labour(ID)
);

-- Triggers
DELIMITER $$

CREATE TRIGGER generateBaseSpaceLocalId BEFORE INSERT
ON BaseSpace FOR EACH ROW
BEGIN
DECLARE MAX_LOCAL_ID INT;
SELECT COALESCE(MAX(LOCAL_ID),0) INTO MAX_LOCAL_ID FROM BaseSpace WHERE ORGID = NEW.ORGID AND SPACE_TYPE = NEW.SPACE_TYPE;
SET NEW.LOCAL_ID = MAX_LOCAL_ID + 1;
END; $$

--CREATE TRIGGER incrementTicketNoteCount AFTER INSERT
--ON Ticket_Notes FOR EACH ROW
--BEGIN
--UPDATE Tickets SET NO_OF_NOTES = COALESCE(NO_OF_NOTES,0)+1 WHERE ID = NEW.PARENT_ID;		
--END; $$

--CREATE TRIGGER decrementTicketNoteCount AFTER DELETE
--ON Ticket_Notes FOR EACH ROW
--BEGIN
--UPDATE Tickets SET NO_OF_NOTES = NO_OF_NOTES-1 WHERE ID = OLD.PARENT_ID;		
--END; $$

--CREATE TRIGGER incrementTicketAttachmentCount AFTER INSERT
--ON Ticket_Attachments FOR EACH ROW
--BEGIN
--UPDATE Tickets SET NO_OF_ATTACHMENTS = COALESCE(NO_OF_ATTACHMENTS,0)+1 WHERE ID = NEW.PARENT_TICKET;		
--END; $$

--CREATE TRIGGER ticketAttachmentCascadeDelete BEFORE DELETE
--ON FacilioFile FOR EACH ROW
--BEGIN
--DELETE FROM Ticket_Attachments WHERE FILE_ID = OLD.FILE_ID;		
--END; $$

--CREATE TRIGGER decrementTicketAttachmentCount AFTER DELETE
--ON Ticket_Attachments FOR EACH ROW 
--BEGIN
--UPDATE Tickets SET NO_OF_ATTACHMENTS = NO_OF_ATTACHMENTS-1 WHERE ID = OLD.PARENT_TICKET;		
--END; $$

--CREATE TRIGGER incrementTaskAttachmentCount AFTER INSERT
--ON Task_Attachments FOR EACH ROW
--BEGIN
--UPDATE Tasks SET NO_OF_ATTACHMENTS = COALESCE(NO_OF_ATTACHMENTS,0)+1 WHERE ID = NEW.PARENT_ID;		
--END; $$

--CREATE TRIGGER decrementTaskAttachmentCount AFTER DELETE
--ON Task_Attachments FOR EACH ROW 
--BEGIN
--UPDATE Tasks SET NO_OF_ATTACHMENTS = NO_OF_ATTACHMENTS-1 WHERE ID = OLD.PARENT_ID;		
--END; $$

--CREATE TRIGGER incrementTaskCount AFTER INSERT
--ON Tasks FOR EACH ROW
--BEGIN
--DECLARE TICKET_STATUS_TYPE TINYINT;
--UPDATE Tickets SET NO_OF_TASKS = COALESCE(NO_OF_TASKS,0)+1 WHERE ID = NEW.PARENT_TICKET_ID;
--SELECT STATUS_TYPE INTO TICKET_STATUS_TYPE FROM TicketStatus INNER JOIN Tickets ON TicketStatus.ID = Tickets.STATUS_ID WHERE Tickets.ID = NEW.ID;
--IF TICKET_STATUS_TYPE = 2 THEN
--UPDATE Tickets SET NO_OF_CLOSED_TASKS = COALESCE(NO_OF_CLOSED_TASKS,0)+1 WHERE ID = NEW.PARENT_TICKET_ID;
--END IF;
--END; $$

--CREATE TRIGGER decrementTaskCount AFTER DELETE
--ON Tasks FOR EACH ROW
--BEGIN
--DECLARE TICKET_STATUS_TYPE TINYINT;
--UPDATE Tickets SET NO_OF_TASKS = NO_OF_TASKS-1 WHERE ID = OLD.PARENT_TICKET_ID;
--SELECT STATUS_TYPE INTO TICKET_STATUS_TYPE FROM TicketStatus INNER JOIN Tickets ON TicketStatus.ID = Tickets.STATUS_ID WHERE Tickets.ID = OLD.ID;
--IF TICKET_STATUS_TYPE = 2 THEN
--UPDATE Tickets SET NO_OF_CLOSED_TASKS = NO_OF_CLOSED_TASKS-1 WHERE ID = OLD.PARENT_TICKET_ID;
--END IF;
--END; $$

CREATE TRIGGER generateCustomViewOrder BEFORE INSERT
ON Views FOR EACH ROW 
BEGIN
DECLARE MAX_SEQUENCE_NUMBER INT;
SELECT GREATEST(COALESCE(MAX(SEQUENCE_NUMBER),1000),1000) INTO MAX_SEQUENCE_NUMBER FROM Views WHERE ORGID = NEW.ORGID AND MODULEID = NEW.MODULEID;
IF NEW.ISDEFAULT = FALSE THEN
SET NEW.SEQUENCE_NUMBER = MAX_SEQUENCE_NUMBER + 1;
END IF;
END; $$

CREATE TRIGGER generateTaskSequence BEFORE INSERT
ON Tasks FOR EACH ROW 
BEGIN
DECLARE MAX_SEQUENCE_NUMBER INT;
IF NEW.SECTION_ID IS NULL THEN
SELECT COALESCE(MAX(SEQUENCE),0) INTO MAX_SEQUENCE_NUMBER FROM Tasks WHERE ORGID = NEW.ORGID AND SECTION_ID = NEW.SECTION_ID;
SET NEW.SEQUENCE = MAX_SEQUENCE_NUMBER + 1;
END IF;
END; $$

DELIMITER ;

-- Insert Queries
-- Add entry in Jobs for workorderemail parser
INSERT INTO Jobs (JOBID, JOBNAME, IS_ACTIVE, IS_PERIODIC, PERIOD, NEXT_EXECUTION_TIME, EXECUTOR_NAME) VALUES (1, 'WorkOrderRequestEmailParser', true, true, 60, UNIX_TIMESTAMP()+30,'priority');



-- Create Event console
CREATE TABLE IF NOT EXISTS Event_Property (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	IS_EVENT_ENABLED BOOLEAN,
	EVENTS_TOPIC_NAME VARCHAR(50),
	CONSTRAINT EVENT_PROPERTY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Event_Rule (
	EVENT_RULE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	RULE_ORDER INT NOT NULL,
	BASE_CRITERIAID BIGINT NOT NULL,
	IGNORE_EVENT BOOLEAN,
	TRANSFORM_CRITERIAID BIGINT,
	TRANSFORM_ALARM_TEMPLATE_ID BIGINT,
	THRESHOLD_CRITERIAID BIGINT,
	THRESHOLD_OCCURS INT,
	THRESHOLD_OVER_SECONDS INT,
	CO_REL_WORKFLOW_ID BIGINT,
	CO_REL_ACTION TINYINT,
	CO_REL_TRANSFORM_TEMPLATE_ID BIGINT,
	CONSTRAINT EVENT_RULE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT EVENT_RULE_BASE_CRITERIAID_FK FOREIGN KEY (BASE_CRITERIAID) REFERENCES Criteria(CRITERIAID),
	CONSTRAINT EVENT_RULE_TRANSFORM_CRITERIAID_FK FOREIGN KEY (TRANSFORM_CRITERIAID) REFERENCES Criteria(CRITERIAID),
	CONSTRAINT EVENT_RULE_THRESHOLD_CRITERIAID_FK FOREIGN KEY (THRESHOLD_CRITERIAID) REFERENCES Criteria(CRITERIAID),
	CONSTRAINT EVENT_RULE_TRANSFORM_TEMPLATE_ID_FK FOREIGN KEY (TRANSFORM_ALARM_TEMPLATE_ID) REFERENCES JSON_Template(ID),
	CONSTRAINT EVENT_RULE_CO_REL_TRANSFORM_TEMPLATE_ID_FK FOREIGN KEY (CO_REL_TRANSFORM_TEMPLATE_ID) REFERENCES JSON_Template(ID),
	CONSTRAINT EVENT_RULE_CO_REL_WORKFLOW_ID_FK FOREIGN KEY (CO_REL_WORKFLOW_ID) REFERENCES Workflow(ID)
);

CREATE TABLE IF NOT EXISTS Event_Rules (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(1000),
	CRITERIA_ID BIGINT,
	WORKFLOW_ID BIGINT,
	EXECUTION_ORDER INT NOT NULL,
	SUCCESS_ACTION TINYINT NOT NULL,
	TRANSFORM_TEMPLATE_ID BIGINT,
	IS_ACTIVE BOOLEAN,
	CONSTRAINT EVENT_RULES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT EVENT_RULES_FK_CRITERIA_ID FOREIGN KEY (CRITERIA_ID) REFERENCES Criteria(CRITERIAID),
	CONSTRAINT EVENT_RULES_FK_WORKFLOW_ID FOREIGN KEY (WORKFLOW_ID) REFERENCES Workflow(ID),
	CONSTRAINT EVENT_RULES_FK_TRANSFORM_TEMPLATE_ID FOREIGN KEY (TRANSFORM_TEMPLATE_ID) REFERENCES Templates(ID)
);

CREATE TABLE IF NOT EXISTS Event (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	EVENT_CONDITION VARCHAR(500),
	SOURCE VARCHAR(100),
	RESOURCE_ID BIGINT,
	EVENT_MESSAGE VARCHAR(500),
	MESSAGE_KEY VARCHAR(1000),
	SEVERITY VARCHAR(100),
	CREATED_TIME BIGINT,
	EVENT_STATE TINYINT,
	INTERNAL_STATE TINYINT,
	EVENT_RULE_ID BIGINT,
	ALARM_ID BIGINT,
	PRIORITY VARCHAR(100),
	ALARM_CLASS VARCHAR(100),
	STATE VARCHAR(100),
	DESCRIPTION VARCHAR(1000),
	COMMENT VARCHAR(1000),
	ADDITIONAL_INFO VARCHAR(10000),
	CONTROLLER_ID BIGINT,
	SUB_RULE_ID BIGINT,
	CONSTRAINT EVENT_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT EVENT_FK_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources(ID),
	CONSTRAINT EVENT_FK_ALARM_ID FOREIGN KEY (ALARM_ID) REFERENCES Alarms(ID) ON DELETE SET NULL,
	CONSTRAINT EVENT_FK_EVENT_RULE_ID FOREIGN KEY (EVENT_RULE_ID) REFERENCES Event_Rule(EVENT_RULE_ID),
	CONSTRAINT EVENT_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID),
	CONSTRAINT EVENT_FK_RULE_ID FOREIGN KEY (SUB_RULE_ID) REFERENCES Reading_Rule(ID) ON DELETE SET NULL,
	CONSTRAINT EVENT_FK_CONTROLLER_ID FOREIGN KEY (CONTROLLER_ID) REFERENCES Controller (ID)
);

CREATE INDEX EVENT_ORGID_MESSAGE_KEY ON Event (ORGID,MESSAGE_KEY);
CREATE INDEX EVENT_ORGID_MESSAGE_KEY_CREATED_TIME ON Event (ORGID,MESSAGE_KEY,CREATED_TIME);
CREATE INDEX EVENT_ORGID_SUB_RULE_ID ON Event (ORGID,SUB_RULE_ID);
CREATE INDEX EVENT_ORGID_SUB_RULE_ID_RESOURCE_ID ON Event (ORGID, SUB_RULE_ID, RESOURCE_ID);

CREATE TABLE IF NOT EXISTS Event_To_Alarm_Field_Mapping (
	EVENT_TO_ALARM_FIELD_MAPPING_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	TRANSFORM_TYPE TINYINT NOT NULL,
	FROM_FIELD VARCHAR(100),
	TO_FIELD VARCHAR(100),
	CONSTANT_VALUE VARCHAR(100),
	MAPPING_ORDER INT NOT NULL,
	MAPPING_PAIRS VARCHAR(1000),
	CONSTRAINT EVENT_FIELD_MAPPING_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Source_To_Resource_Mapping (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SOURCE VARCHAR(100),
	RESOURCE_ID BIGINT,
	CONTROLLER_ID BIGINT,
	CONSTRAINT SOURCE_ASSET_MAPPING_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT SOURCE_ASSET_MAPPING_FK_RESOURCE_ID FOREIGN KEY (RESOURCE_ID) REFERENCES Resources(ID),
	CONSTRAINT SOURCE_ASSET_MAPPING_FK_CONTROLLER_ID FOREIGN KEY (CONTROLLER_ID) REFERENCES Controller (ID),
	CONSTRAINT SOURCE_ASSET_MAPPING_UNIQUE_NODE UNIQUE(ORGID, CONTROLLER_ID, SOURCE)
);

CREATE TABLE IF NOT EXISTS Notification_Logger (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NOTIFICATION_TYPE TINYINT NOT NULL,
	TO_ADDR VARCHAR(200) NOT NULL,
	INFO VARCHAR(5000),
	THREAD_NAME  VARCHAR(200) NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	CONSTRAINT NOTIFICATION_LOGGER_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Purchase_Orders (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(255),
	DESCRIPTION VARCHAR(255),
	VENDOR BIGINT,
	STOREROOM BIGINT,
	STATUS TINYINT,
	TOTAL_COST DOUBLE,
	SYS_CREATED_TIME BIGINT(20),
	SYS_MODIFIED_TIME BIGINT(20),
	SYS_CREATED_BY BIGINT,
	SYS_MODIFIED_BY BIGINT,
	SYS_DELETED TINYINT,
	COMPLETED_TIME BIGINT,
	LOCAL_ID BIGINT(20),
	SITE_ID BIGINT,
	TOTAL_QUANTITY DOUBLE,
	SHIP_TO_ADDRESS_ID BIGINT(20),
	BILL_TO_ADDRESS_ID BIGINT(20),
	ORDERED_TIME BIGINT(20),
	REQUIRED_TIME BIGINT(20),
	REQUESTED_BY BIGINT,

	CONSTRAINT PURCHASE_ORDERS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT PURCHASE_ORDERS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Resources(ID),
	CONSTRAINT PURCHASE_ORDERS_FK_VENDOR FOREIGN KEY (VENDOR) REFERENCES Vendors(ID),
	CONSTRAINT PURCHASE_ORDERS_FK_STORE_ROOM FOREIGN KEY (STOREROOM) REFERENCES Store_room(ID),
	CONSTRAINT PURCHASE_ORDERS_FK_SHIP_TO_ADDRESS_ID FOREIGN KEY (SHIP_TO_ADDRESS_ID) REFERENCES Locations(ID),
	CONSTRAINT PURCHASE_ORDERS_FK_SYS_CREATED_BY_ID FOREIGN KEY (SYS_CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT PURCHASE_ORDERS_FK_SYS_MODIFIED_BY_ID FOREIGN KEY (SYS_MODIFIED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT PURCHASE_ORDERS_FK_BILL_TO_ADDRESS_ID FOREIGN KEY (BILL_TO_ADDRESS_ID) REFERENCES Locations(ID),
	CONSTRAINT PURCHASE_ORDERS_FK_MODULE_ID FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID) ON DELETE CASCADE,
	CONSTRAINT PURCHASE_ORDERS_FK_REQUESTED_BY FOREIGN KEY (REQUESTED_BY) REFERENCES ORG_Users(ORG_USERID)

);


CREATE TABLE IF NOT EXISTS Purchase_Requests (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(255),
	DESCRIPTION VARCHAR(255),
	VENDOR BIGINT,
	STOREROOM BIGINT,
	STATUS TINYINT,
	TOTAL_COST DOUBLE,
	SYS_CREATED_TIME BIGINT(20),
	SYS_MODIFIED_TIME BIGINT(20),
	SYS_CREATED_BY BIGINT,
	SYS_MODIFIED_BY BIGINT,
	SYS_DELETED TINYINT,
	LOCAL_ID BIGINT(20),
	PURCHASE_ORDER_ID BIGINT(20),
	SHIP_TO_ADDRESS_ID BIGINT(20),
	BILL_TO_ADDRESS_ID BIGINT(20),
	REQUESTED_TIME BIGINT(20),
	REQUIRED_TIME BIGINT(20),
	SITE_ID BIGINT,
	REQUESTED_BY BIGINT,
	
	CONSTRAINT PURCHASE_REQUESTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT PURCHASE_REQUESTS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Resources(ID),
	CONSTRAINT PURCHASE_REQUESTS_FK_VENDOR FOREIGN KEY (VENDOR) REFERENCES Vendors(ID),
	CONSTRAINT PURCHASE_REQUESTS_FK_PURCHASE_ORDER_ID FOREIGN KEY (PURCHASE_ORDER_ID) REFERENCES Purchase_Orders(ID),
	CONSTRAINT PURCHASE_REQUESTS_FK_STORE_ROOM FOREIGN KEY (STOREROOM) REFERENCES Store_room(ID),
	CONSTRAINT PURCHASE_REQUESTS_FK_SHIP_TO_ADDRESS_ID FOREIGN KEY (SHIP_TO_ADDRESS_ID) REFERENCES Locations(ID),
	CONSTRAINT PURCHASE_REQUESTS_FK_BILL_TO_ADDRESS_ID FOREIGN KEY (BILL_TO_ADDRESS_ID) REFERENCES Locations(ID),
	CONSTRAINT PURCHASE_REQUESTS_FK_SYS_CREATED_BY_ID FOREIGN KEY (SYS_CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT PURCHASE_REQUESTS_FK_SYS_MODIFIED_BY_ID FOREIGN KEY (SYS_MODIFIED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT PURCHASE_REQUESTS_FK_MODULE_ID FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID) ON DELETE CASCADE,
    CONSTRAINT PURCHASE_REQUESTS_FK_REQUESTED_BY FOREIGN KEY (REQUESTED_BY) REFERENCES ORG_Users(ORG_USERID)
);

CREATE TABLE IF NOT EXISTS Purchase_Request_Attachments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_PURCHASE_REQUEST BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	FILE_ID BIGINT NOT NULL,
	ATTACHMENT_TYPE TINYINT,
	CONSTRAINT Purchase_Request_ATTACHEMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT Purchase_Request_ATTACHEMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT Purchase_Request_ATTACHEMENTS_FK_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile (FILE_ID),
	CONSTRAINT Purchase_Request_ATTACHEMENTS_FK_PARENT_PURCHASE_REQUEST FOREIGN KEY (PARENT_PURCHASE_REQUEST) REFERENCES Purchase_Requests (ID)

);

CREATE TABLE IF NOT EXISTS Purchase_Request_Notes (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	MODULEID BIGINT NOT NULL,
	CREATED_BY BIGINT,
	CREATED_TIME BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000) NOT NULL,
	CONSTRAINT Purchase_Request_NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT Purchase_Request_NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT Purchase_Request_NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT Purchase_Request_NOTES_FK_PARENT_TENANT FOREIGN KEY (PARENT_ID) REFERENCES Purchase_Requests (ID)
);



CREATE TABLE IF NOT EXISTS PurchaseRequestLineItems (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PR_ID BIGINT NOT NULL,
	INVENTORY_TYPE TINYINT NOT NULL,
	ITEM_TYPE BIGINT,
	TOOL_TYPE BIGINT,
	QUANTITY DOUBLE,
	UNIT_PRICE DOUBLE,
	COST DOUBLE,
	CONSTRAINT PURCHASEREQUESTLINEITEMS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT PURCHASEREQUESTLINEITEMS_FK_MODULE FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID),
	CONSTRAINT PURCHASEREQUESTLINEITEMS_FK_PR FOREIGN KEY (PR_ID) REFERENCES Purchase_Requests (ID) ON DELETE CASCADE,
	CONSTRAINT PURCHASEREQUESTLINEITEMS_FK_ITEM FOREIGN KEY (ITEM_TYPE) REFERENCES Item_Types (ID),
	CONSTRAINT PURCHASEREQUESTLINEITEMS_FK_TOOL FOREIGN KEY (TOOL_TYPE) REFERENCES Tool_types (ID)
);


CREATE TABLE IF NOT EXISTS Purchase_Order_Attachments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_PURCHASE_ORDER BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	FILE_ID BIGINT NOT NULL,
	ATTACHMENT_TYPE TINYINT,
	CONSTRAINT Purchase_Order_ATTACHEMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT Purchase_Order_ATTACHEMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT Purchase_Order_ATTACHEMENTS_FK_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile (FILE_ID),
	CONSTRAINT Purchase_Order_ATTACHEMENTS_FK_PARENT_PURCHASE_REQUEST FOREIGN KEY (PARENT_PURCHASE_ORDER) REFERENCES Purchase_Orders (ID)

);

CREATE TABLE IF NOT EXISTS Purchase_Order_Notes (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	MODULEID BIGINT NOT NULL,
	CREATED_BY BIGINT,
	CREATED_TIME BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000) NOT NULL,
	CONSTRAINT Purchase_Order_NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT Purchase_Order_NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT Purchase_Order_NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT Purchase_Order_NOTES_FK_PARENT_TENANT FOREIGN KEY (PARENT_ID) REFERENCES Purchase_Orders (ID)
);




CREATE TABLE IF NOT EXISTS PurchaseOrderLineItems (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PO_ID BIGINT NOT NULL,
	INVENTORY_TYPE TINYINT NOT NULL,
	ITEM_TYPE BIGINT,
	TOOL_TYPE BIGINT,
	QUANTITY DOUBLE,
	UNIT_PRICE DOUBLE,
	COST DOUBLE,
	QUANTITY_RECEIVED DOUBLE,
	CONSTRAINT PURCHASEORDERLINEITEMS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT PURCHASEORDERLINEITEMS_FK_MODULE FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID),
	CONSTRAINT PURCHASEORDERLINEITEMS_FK_PO FOREIGN KEY (PO_ID) REFERENCES Purchase_Orders (ID) ON DELETE CASCADE,
	CONSTRAINT PURCHASEORDERLINEITEMS_FK_ITEM FOREIGN KEY (ITEM_TYPE) REFERENCES Item_Types (ID),
	CONSTRAINT PURCHASEORDERLINEITEMS_FK_TOOL FOREIGN KEY (TOOL_TYPE) REFERENCES Tool_types (ID)
);

CREATE TABLE IF NOT EXISTS PurchaseRequest_PurchaseOrder (
	ORGID BIGINT NOT NULL,
	PO_ID BIGINT NOT NULL,
	PR_ID BIGINT NOT NULL,
	PRIMARY KEY (PO_ID, PR_ID),
	CONSTRAINT PURCHASEREQUESTS_PURCHASEORDER_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT PURCHASEREQUESTS_PURCHASEORDER_FK_PO FOREIGN KEY (PO_ID) REFERENCES Purchase_Orders (ID),
	CONSTRAINT PURCHASEREQUESTS_PURCHASEORDER_FK_PR FOREIGN KEY (PR_ID) REFERENCES Purchase_Requests (ID)
);

CREATE TABLE IF NOT EXISTS Receivables (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	MODULEID BIGINT NOT NULL,
	ORGID BIGINT NOT NULL,
	PO_ID BIGINT NOT NULL,
	STATUS TINYINT NOT NULL,
	SYS_CREATED_TIME BIGINT(20),
	SYS_MODIFIED_TIME BIGINT(20),
	SYS_CREATED_BY BIGINT,
	SYS_MODIFIED_BY BIGINT,
	SYS_DELETED TINYINT,
	LOCAL_ID BIGINT(20),
	SITE_ID BIGINT,
	CONSTRAINT RECEIVABLE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT RECEIVABLE_FK_MODULE FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID),
	CONSTRAINT RECEIVABLE_FK_SYS_CREATED_BY_ID FOREIGN KEY (SYS_CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT RECEIVABLE_FK_SYS_MODIFIED_BY_ID FOREIGN KEY (SYS_MODIFIED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT RECEIVABLE_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Resources(ID),
	CONSTRAINT RECEIVABLE_FK_POID FOREIGN KEY (PO_ID) REFERENCES Purchase_Orders (ID)
);

CREATE TABLE IF NOT EXISTS Receivables_Attachments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_RECEIVABLE BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	FILE_ID BIGINT NOT NULL,
	ATTACHMENT_TYPE TINYINT,
	CONSTRAINT Receivables_ATTACHEMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT Receivables_ATTACHEMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT Receivables_ATTACHEMENTS_FK_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile (FILE_ID),
	CONSTRAINT Receivables_ATTACHEMENTS_FK_PARENT_RECEIVABLE FOREIGN KEY (PARENT_RECEIVABLE) REFERENCES Receivables (ID)

);

CREATE TABLE IF NOT EXISTS Receivables_Notes (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	MODULEID BIGINT NOT NULL,
	CREATED_BY BIGINT,
	CREATED_TIME BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000) NOT NULL,
	CONSTRAINT Receivables_NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT Receivables_NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT Receivables_NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT Receivables_NOTES_FK_PARENT_TENANT FOREIGN KEY (PARENT_ID) REFERENCES Receivables (ID)
);

CREATE TABLE IF NOT EXISTS Receipts (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	RECEIVABLE_ID BIGINT NOT NULL,
	LINE_ITEM_ID BIGINT NOT NULL,
	QUANTITY DOUBLE NOT NULL,
	STATUS TINYINT NOT NULL,
	SYS_CREATED_TIME BIGINT(20),
	SYS_MODIFIED_TIME BIGINT(20),
	SYS_CREATED_BY BIGINT,
	SYS_MODIFIED_BY BIGINT,
	SYS_DELETED TINYINT,
	LOCAL_ID BIGINT(20),
	RECEIPT_TIME BIGINT,
	SITE_ID BIGINT,
	REMARKS VARCHAR(500),
	CONSTRAINT RECEIPTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT RECEIPTS_FK_MODULE FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID),
	CONSTRAINT RECEIPTS_FK_SYS_CREATED_BY_ID FOREIGN KEY (SYS_CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT RECEIPTS_FK_SYS_MODIFIED_BY_ID FOREIGN KEY (SYS_MODIFIED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT RECEIPTS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Resources(ID),
	CONSTRAINT RECEIPTS_FK_RECEIVABLEID FOREIGN KEY (RECEIVABLE_ID) REFERENCES Receivables(ID),
	CONSTRAINT RECEIPTS_FK_ITEMID FOREIGN KEY (LINE_ITEM_ID) REFERENCES PurchaseOrderLineItems(ID)
);

CREATE TABLE IF NOT EXISTS Contracts (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(255),
	DESCRIPTION VARCHAR(255),
	VENDOR BIGINT,
	STATUS TINYINT,
	TOTAL_COST DOUBLE,
	FROM_DATE BIGINT(20),
	END_DATE BIGINT(20),
	RENEWAL_DATE BIGINT(20),
	CONTRACT_TYPE TINYINT,
	SYS_CREATED_TIME BIGINT(20),
	SYS_MODIFIED_TIME BIGINT(20),
	SYS_CREATED_BY BIGINT,
	SYS_MODIFIED_BY BIGINT,
	SYS_DELETED TINYINT,
	SITE_ID BIGINT,
	CONSTRAINT CONTRACTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT CONTRACTS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Resources(ID),
	CONSTRAINT CONTRACTS_FK_VENDOR FOREIGN KEY (VENDOR) REFERENCES Vendors(ID),
	CONSTRAINT CONTRACTS_FK_SYS_CREATED_BY_ID FOREIGN KEY (SYS_CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT CONTRACTS_FK_SYS_MODIFIED_BY_ID FOREIGN KEY (SYS_MODIFIED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT CONTRACTS_FK_MODULE_ID FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Contracts_Attachments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_CONTRACT BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	FILE_ID BIGINT NOT NULL,
	ATTACHMENT_TYPE TINYINT,
	CONSTRAINT CONTRACTS_ATTACHEMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CONTRACTS_ATTACHEMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT CONTRACTS_ATTACHEMENTS_FK_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile (FILE_ID),
	CONSTRAINT CONTRACTS_ATTACHEMENTS_FK_PARENT_CONTRACT FOREIGN KEY (PARENT_CONTRACT) REFERENCES Contracts (ID)

);

CREATE TABLE IF NOT EXISTS Contracts_Notes (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	MODULEID BIGINT NOT NULL,
	CREATED_BY BIGINT,
	CREATED_TIME BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000) NOT NULL,
	CONSTRAINT CONTRACTS_NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CONTRACTS_NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT CONTRACTS_NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT CONTRACTS_NOTES_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Contracts (ID)
);

CREATE TABLE IF NOT EXISTS Purchase_Contracts (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	LOCAL_ID BIGINT(20),
	SITE_ID BIGINT,
	CONSTRAINT PURCHASE_CONTRACTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT PURCHASE_CONTRACTS_FK_ID FOREIGN KEY (ID) REFERENCES Contracts(ID) ON DELETE CASCADE,
	CONSTRAINT PURCHASE_CONTRACTS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Resources(ID),
	CONSTRAINT PURCHASE_CONTRACTS_FK_MODULE_ID FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS PurchaseContractLineItems (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PURCHASE_CONTRACT BIGINT NOT NULL,
	INVENTORY_TYPE TINYINT NOT NULL,
	ITEM_TYPE BIGINT,
	TOOL_TYPE BIGINT,
	QUANTITY DOUBLE,
	UNIT_PRICE DOUBLE,
	COST DOUBLE,
	QUANTITY_RECEIVED DOUBLE,
	CONSTRAINT PurchaseContractLineItems_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT PurchaseContractLineItems_FK_MODULE FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID),
	CONSTRAINT PurchaseContractLineItems_FK_PURCHASE_CONTRACT FOREIGN KEY (PURCHASE_CONTRACT) REFERENCES Purchase_Contracts (ID) ON DELETE CASCADE,
	CONSTRAINT PurchaseContractLineItems_FK_ITEM FOREIGN KEY (ITEM_TYPE) REFERENCES Item_Types (ID),
	CONSTRAINT PurchaseContractLineItems_FK_TOOL FOREIGN KEY (TOOL_TYPE) REFERENCES Tool_types (ID)
);

CREATE TABLE IF NOT EXISTS Labour_Contracts (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	LOCAL_ID BIGINT(20),
	SITE_ID BIGINT,
	CONSTRAINT LABOUR_CONTRACTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT LABOUR_CONTRACTS_FK_ID FOREIGN KEY (ID) REFERENCES Contracts(ID) ON DELETE CASCADE,
	CONSTRAINT LABOUR_CONTRACTS_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Resources(ID),
	CONSTRAINT LABOUR_CONTRACTS_FK_MODULE_ID FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS LabourContractLineItems (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	LABOUR_CONTRACT BIGINT NOT NULL,
	LABOUR BIGINT,
	COST_PER_HOUR DOUBLE,
	CONSTRAINT LabourContractLineItems_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT LabourContractLineItems_FK_MODULE FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID),
	CONSTRAINT LabourContractLineItems_FK_LABOUR_CONTRACT FOREIGN KEY (LABOUR_CONTRACT) REFERENCES Labour_Contracts (ID) ON DELETE CASCADE,
	CONSTRAINT LabourContractLineItems_FK_LABOUR FOREIGN KEY (LABOUR) REFERENCES Labour (ID)
);


CREATE TABLE IF NOT EXISTS Storeroom_Sites (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	ORGID BIGINT NOT NULL,
	STORE_ROOM_ID BIGINT,
	SITE_ID BIGINT,

	CONSTRAINT STORE_ROOM_SITES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT STORE_ROOM_SITES_FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES Site(ID),
	CONSTRAINT STORE_ROOM_SITES_FK_STORE_ROOM_ID FOREIGN KEY (STORE_ROOM_ID) REFERENCES Store_room(ID)
);

CREATE TABLE IF NOT EXISTS PO_Line_Item_Serial_Numbers (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	LINE_ITEM_ID BIGINT,
	PO_ID BIGINT,
	RECEIPT_ID BIGINT,
	SERIAL_NUMBER VARCHAR(100),
	SYS_CREATED_TIME BIGINT(20),
	SYS_MODIFIED_TIME BIGINT(20),
	SYS_CREATED_BY BIGINT,
	SYS_MODIFIED_BY BIGINT,
	SYS_DELETED TINYINT,

	CONSTRAINT PO_LINE_ITEM_SERIAL_NUMBER_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT PO_LINE_ITEM_SERIAL_NUMBER_FK_MODULE FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID),
	CONSTRAINT PO_LINE_ITEM_SERIAL_NUMBER_FK_LINE_ITEM_ID FOREIGN KEY (LINE_ITEM_ID) REFERENCES PurchaseOrderLineItems (ID),
	CONSTRAINT PO_LINE_ITEM_SERIAL_NUMBER_FK_PO_ID FOREIGN KEY (PO_ID) REFERENCES Purchase_Orders (ID),
 	CONSTRAINT PO_LINE_ITEM_SERIAL_NUMBER_FK_RECEIPT_ID FOREIGN KEY (RECEIPT_ID) REFERENCES Receipts (ID),
 	CONSTRAINT PO_LINE_ITEM_SERIAL_NUMBER_FK_SYS_CREATED_BY_ID FOREIGN KEY (SYS_CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT PO_LINE_ITEM_SERIAL_NUMBER_FK_SYS_MODIFIED_BY_ID FOREIGN KEY (SYS_MODIFIED_BY) REFERENCES ORG_Users(ORG_USERID)

);

CREATE TABLE IF NOT EXISTS Item_Attachments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_ITEM BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	FILE_ID BIGINT NOT NULL,
	ATTACHMENT_TYPE TINYINT,
	CONSTRAINT ITEM_ATTACHEMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ITEM_ATTACHEMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ITEM_ATTACHEMENTS_FK_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile (FILE_ID),
	CONSTRAINT ITEM_ATTACHEMENTS_FK_PARENT_CONTRACT FOREIGN KEY (PARENT_ITEM) REFERENCES Item (ID)

);

CREATE TABLE IF NOT EXISTS Item_Notes (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	MODULEID BIGINT NOT NULL,
	CREATED_BY BIGINT,
	CREATED_TIME BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000) NOT NULL,
	CONSTRAINT ITEM_NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ITEM_NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT ITEM_NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT ITEM_NOTES_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Item (ID)
);

CREATE TABLE IF NOT EXISTS Tool_Attachments (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT_TOOL BIGINT NOT NULL,
	CREATED_TIME BIGINT NOT NULL,
	FILE_ID BIGINT NOT NULL,
	ATTACHMENT_TYPE TINYINT,
	CONSTRAINT TOOLS_ATTACHEMENTS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TOOLS_ATTACHEMENTS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TOOLS_ATTACHEMENTS_FK_FILE_ID FOREIGN KEY (FILE_ID) REFERENCES FacilioFile (FILE_ID),
	CONSTRAINT TOOLS_ATTACHEMENTS_FK_PARENT_CONTRACT FOREIGN KEY (PARENT_TOOL) REFERENCES Tool (ID)

);

CREATE TABLE IF NOT EXISTS Tool_Notes (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	MODULEID BIGINT NOT NULL,
	CREATED_BY BIGINT,
	CREATED_TIME BIGINT,
	PARENT_ID BIGINT NOT NULL,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000) NOT NULL,
	CONSTRAINT TOOLS_NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TOOLS_NOTES_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TOOLS_NOTES_FK_CREATED_BY_ID FOREIGN KEY (CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT TOOLS_NOTES_FK_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES Tool (ID)
);

CREATE TABLE IF NOT EXISTS Gate_Pass_Line_Items (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	GATE_PASS_ID BIGINT,
	INVENTORY_TYPE TINYINT NOT NULL,
	ITEM_TYPE BIGINT,
	TOOL_TYPE BIGINT,
	QUANTITY DOUBLE,
	SERIAL_NUMBER VARCHAR(100),
	SYS_CREATED_TIME BIGINT(20),
	SYS_MODIFIED_TIME BIGINT(20),
	SYS_CREATED_BY BIGINT,
	SYS_MODIFIED_BY BIGINT,
	SYS_DELETED TINYINT,
	
	CONSTRAINT GATE_PASS_LINE_ITEM_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT GATE_PASS_LINE_ITEM_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT GATE_PASS_LINE_ITEM_FK_SYS_CREATED_BY_ID FOREIGN KEY (SYS_CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT GATE_PASS_LINE_ITEM_FK_SYS_MODIFIED_BY_ID FOREIGN KEY (SYS_MODIFIED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT GATE_PASS_LINE_ITEM_FK_ITEM FOREIGN KEY (ITEM_TYPE) REFERENCES Item_Types (ID),
	CONSTRAINT GATE_PASS_LINE_ITEM_FK_TOOL FOREIGN KEY (TOOL_TYPE) REFERENCES Tool_types (ID),
	CONSTRAINT GATE_PASS_LINE_ITEM_FK_GATE_PASS FOREIGN KEY (GATE_PASS_ID) REFERENCES Gate_Pass (ID)
);

-- Stateflow Tables
CREATE TABLE IF NOT EXISTS StateFlow (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	SITE_ID BIGINT,
	NAME VARCHAR(50),
	DESCRIPTION VARCHAR(255),
	CRITERIA_ID BIGINT,
	SEQUENCE INT,
	DEFAULT_STATE_ID BIGINT NOT NULL,
	CONSTRAINT STATEFLOW_FK_ORG FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT STATEFLOW_FK_SITEID FOREIGN KEY (SITE_ID) REFERENCES Resources (ID),
	CONSTRAINT STATEFLOW_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules (MODULEID),
	CONSTRAINT STATEFLOW_FK_CRITERIAID FOREIGN KEY (CRITERIA_ID) REFERENCES Criteria (CRITERIAID)
);
-- Adding foreign key to tickets table
ALTER TABLE Tickets ADD CONSTRAINT TICKETS_FK_STATEFLOWID FOREIGN KEY (STATE_FLOW_ID) REFERENCES StateFlow (ID);

CREATE TABLE IF NOT EXISTS StateFlowTransistion (
	ID BIGINT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	SITE_ID BIGINT,
	FROM_STATE_ID BIGINT NOT NULL,
	TO_STATE_ID BIGINT NOT NULL,
	FORM_ID BIGINT,
	MODULE_ID BIGINT NOT NULL,
	STATE_FLOW_ID BIGINT NOT NULL,
	ALL_APPROVAL_REQUIRED BOOLEAN,
	BUTTON_TYPE TINYINT,
	IS_SCHEDULED BOOLEAN,
	SCHEDULE_TIME INT,
	CONSTRAINT STATEFLOWTRANS_FK_ORG FOREIGN KEY (ORGID) REFERENCES Organizations (ORGID),
	CONSTRAINT STATEFLOWTRANS_FK_SITEID FOREIGN KEY (SITE_ID) REFERENCES Resources (ID),
	CONSTRAINT STATEFLOWTRANS_FK_FROMSTATE FOREIGN KEY (FROM_STATE_ID) REFERENCES TicketStatus (ID),
	CONSTRAINT STATEFLOWTRANS_FK_TOSTATE FOREIGN KEY (TO_STATE_ID) REFERENCES TicketStatus (ID),
	CONSTRAINT STATEFLOWTRANS_FK_FORMID FOREIGN KEY (FORM_ID) REFERENCES Forms (ID),
	CONSTRAINT STATEFLOWTRANS_FK_STATEFLOW FOREIGN KEY (STATE_FLOW_ID) REFERENCES StateFlow (ID),
	CONSTRAINT STATEFLOWTRANS_FK_MODULE FOREIGN KEY (MODULE_ID) REFERENCES Modules (MODULEID)
);

CREATE TABLE IF NOT EXISTS StateFlowScheduler (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	RECORD_ID BIGINT NOT NULL,
	TRANSISTION_ID BIGINT NOT NULL,
	CONSTRAINT RECORDTRANS_FK_TID FOREIGN KEY (TRANSISTION_ID) REFERENCES StateFlowTransistion (ID)
);

CREATE TABLE IF NOT EXISTS ConnectedApps (
	ID BIGINT PRIMARY KEY AUTO_INCREMENT,
	ORGID BIGINT NOT NULL,
	SYS_CREATED_TIME BIGINT(20),
	SYS_MODIFIED_TIME BIGINT(20),
	SYS_CREATED_BY BIGINT,
	SYS_MODIFIED_BY BIGINT,
	SYS_DELETED TINYINT,
	NAME VARCHAR(100),
	LINK_NAME VARCHAR(100),
	DESCRIPTION VARCHAR(500),
	LOGO_ID BIGINT,
	BASE_URL VARCHAR(250),
	IS_ACTIVE BOOLEAN DEFAULT TRUE,
	
	CONSTRAINT CONNECTEDAPPS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CONNECTEDAPPS_FK_SYS_CREATED_BY_ID FOREIGN KEY (SYS_CREATED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT CONNECTEDAPPS_FK_SYS_MODIFIED_BY_ID FOREIGN KEY (SYS_MODIFIED_BY) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT CONNECTEDAPPS_FK_LOGO_ID FOREIGN KEY (LOGO_ID) REFERENCES FacilioFile (FILE_ID)
);

-- Create Organizations Table
CREATE TABLE IF NOT EXISTS Organizations (
	ORGID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGNAME VARCHAR(50),
	FACILIODOMAINNAME VARCHAR(50)
);

-- Create Users Table
CREATE TABLE IF NOT EXISTS Users (
	USERID BIGINT AUTO_INCREMENT PRIMARY KEY,
	COGNITO_ID BIGINT ,
	USER_VERIFIED BOOLEAN,
	EMAIL VARCHAR(150)
);

-- Create ORG_Users Table
CREATE TABLE IF NOT EXISTS ORG_Users (
	ORG_USERID BIGINT AUTO_INCREMENT PRIMARY KEY,
	USERID BIGINT,
	ORGID BIGINT,
	INVITEDTIME BIGINT,
	ISDEFAULT BOOLEAN,
	INVITATION_ACCEPT_STATUS BOOLEAN,
	ROLE INT DEFAULT 0,
	CONSTRAINT ORG_USERS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ORG_USERS_FK_USERID FOREIGN KEY (USERID) REFERENCES Users(USERID)
);

-- Create GLobal_Domain_Index
CREATE TABLE IF NOT EXISTS Global_Domain_Index (
	DOMAINNAME VARCHAR(50),
	ORGID BIGINT 
);

-- Create Jobs Table
CREATE TABLE IF NOT EXISTS Jobs (
	JOBID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	JOBNAME VARCHAR(50),
	ISPERIODIC BOOLEAN,
	PERIOD INT,
	NEXTEXECUTIONTIME BIGINT,
	EXECUTORNAME VARCHAR(50),
	CONSTRAINT JOBS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

-- Create Assets Table
CREATE TABLE IF NOT EXISTS Assets (
	ASSETID BIGINT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(50),
	ORGID BIGINT,
	CONSTRAINT ASSETS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

-- Device Table

CREATE TABLE IF NOT EXISTS Service (
	SERVICE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS Building (
	BUILDING_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(50),
	AREA BIGINT
);

CREATE TABLE IF NOT EXISTS Zone (
	ZONE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(50),
	AREA BIGINT,
	BUILDING_ID BIGINT,
	CONSTRAINT ZONE_FK_BUILDING_ID FOREIGN KEY (BUILDING_ID) REFERENCES Building(BUILDING_ID)
);

CREATE TABLE IF NOT EXISTS Controller (
	CONTROLLER_ID BIGINT,
	CONTROLLER_TYPE INT,
	IP_ADDRESS VARCHAR(50),
	CERTIFICATE BLOB,
	POLL_TIME INT,
	JOBID BIGINT,
	JOB_STATUS BOOLEAN,
	CONSTRAINT CONTROLLER_FK_ASSET_ID FOREIGN KEY (CONTROLLER_ID) REFERENCES Assets(ASSETID),
	CONSTRAINT CONTROLLER_FK_JOBID FOREIGN KEY (JOBID) REFERENCES Jobs(JOBID)
);

CREATE TABLE IF NOT EXISTS Device (
	DEVICE_ID BIGINT,
	SERVICE_ID BIGINT,
	ZONE_ID BIGINT,
	BUILDING_ID BIGINT,
	CONTROLLER_ID BIGINT,
	PARENT_DEVICE_ID BIGINT,
	DEVICE_TYPE INT,
	STATUS INT,
	CONSTRAINT DEVICE_FK_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES Assets(ASSETID),
	CONSTRAINT DEVICE_FK_SERVICE_ID FOREIGN KEY (SERVICE_ID) REFERENCES Service(SERVICE_ID),
	CONSTRAINT DEVICE_FK_ZONE_ID FOREIGN KEY (ZONE_ID) REFERENCES Zone(ZONE_ID),
	CONSTRAINT DEVICE_FK_PARENT_DEVICE_ID FOREIGN KEY (PARENT_DEVICE_ID) REFERENCES Device(DEVICE_ID),
	CONSTRAINT DEVICE_FK_BUILDING_ID FOREIGN KEY (BUILDING_ID) REFERENCES Building(BUILDING_ID),
	CONSTRAINT DEVICE_FK_CONTROLLER_ID FOREIGN KEY (CONTROLLER_ID) REFERENCES Controller(CONTROLLER_ID)
);

CREATE TABLE IF NOT EXISTS Device_Instance (
	DEVICE_INSTANCE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	DEVICE_ID BIGINT,
	INSTANCE_ID INT,
	INSTANCE_NAME VARCHAR(50),
	COLUMN_NAME VARCHAR(50),
	CONSTRAINT DEVICE_INSTANCE_FK_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES Device(DEVICE_ID)
);

CREATE TABLE IF NOT EXISTS Energy_Data (
	ENERGY_DATA_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	DEVICE_ID BIGINT,
	ADDED_TIME BIGINT,
	SOURCE INT,
	TOTAL_ENERGY_CONSUMPTION DOUBLE,
	TOTAL_ENERGY_CONSUMPTION_DELTA DOUBLE,
	LINE_VOLTAGE_R DOUBLE,
	LINE_VOLTAGE_Y DOUBLE,
	LINE_VOLTAGE_B DOUBLE,
	PHASE_VOLTAGE_R DOUBLE,
	PHASE_VOLTAGE_Y DOUBLE,
	PHASE_VOLTAGE_B DOUBLE,
	LINE_CURRENT_R DOUBLE,
	LINE_CURRENT_Y DOUBLE,
	LINE_CURRENT_B DOUBLE,
	POWER_FACTOR_R DOUBLE,
	POWER_FACTOR_Y DOUBLE,
	POWER_FACTOR_B DOUBLE,
	FREQUENCY_R DOUBLE,
	FREQUENCY_Y DOUBLE,
	FREQUENCY_B DOUBLE,
	ACTIVE_POWER_R DOUBLE,
	ACTIVE_POWER_Y DOUBLE,
	ACTIVE_POWER_B DOUBLE,
	REACTIVE_POWER_R DOUBLE,
	REACTIVE_POWER_Y DOUBLE,
	REACTIVE_POWER_B DOUBLE,
	APPARENT_POWER_R DOUBLE,
	APPARENT_POWER_Y DOUBLE,
	APPARENT_POWER_B DOUBLE,
	PHASE_ENERGY_R DOUBLE,
	PHASE_ENERGY_Y DOUBLE,
	PHASE_ENERGY_B DOUBLE,
	CONSTRAINT ENERGY_DATA_FK_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES Device(DEVICE_ID)
);

CREATE TABLE IF NOT EXISTS Groups (
	GROUPID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	GROUP_NAME CHAR(255),
	GROUP_EMAIL CHAR(255),
	GROUP_DESC TEXT(1000),
	IS_ACTIVE BOOLEAN,
	CREATED_TIME BIGINT,
	CREATED_BY BIGINT,
	PARENT BIGINT,
	CONSTRAINT GROUPS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS GroupMembers (
	MEMBERID BIGINT AUTO_INCREMENT PRIMARY KEY,
	GROUPID BIGINT,
	ORG_USERID BIGINT,
	MEMBER_ROLE INT,
	CONSTRAINT GROUP_MEMBERS_FK_ORGID FOREIGN KEY (GROUPID) REFERENCES Groups(GROUPID) ON DELETE CASCADE,
	CONSTRAINT GROUP_MEMBERS_FK_USERID FOREIGN KEY (ORG_USERID) REFERENCES ORG_Users(ORG_USERID) ON DELETE CASCADE


-- Create Tickets Tables
CREATE TABLE IF NOT EXISTS Tickets_Objects (
	OBJID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	NAME VARCHAR(25),
	CONSTRAINT TICKETS_OBJECT_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Tickets_Fields (
	FIELDID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	OBJID BIGINT,
	FIELDNAME VARCHAR(25),
	COLUMNNUM TINYINT,
	DATATYPE TINYINT,
	CONSTRAINT TICKETS_FIELDS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TICKETS_FIELDS_OBJID FOREIGN KEY (OBJID) REFERENCES Tickets_Objects(OBJID)
);

CREATE TABLE IF NOT EXISTS Tickets_Data (
	TICKETID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	OBJID BIGINT,
	REQUESTOR VARCHAR(50),
	SUBJECT VARCHAR(50),
	DESCRIPTION VARCHAR(1000),
	STATUS TINYINT,
	AGENTID BIGINT,
	FAILED_ASSET_ID BIGINT,
	DUE_DATE BIGINT,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 INT,
	NUMBER_CF2 INT,
	NUMBER_CF3 INT,
	NUMBER_CF4 INT,
	NUMBER_CF5 INT,
	DECIMAL_CF1 DOUBLE(9,3),
	DECIMAL_CF2 DOUBLE(9,3),
	DECIMAL_CF3 DOUBLE(9,3),
	DECIMAL_CF4 DOUBLE(9,3),
	DECIMAL_CF5 DOUBLE(9,3),
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	DATE_CF1 DATE,
	DATE_CF2 DATE,
	DATE_CF3 DATE,
	DATE_CF4 DATE,
	DATE_CF5 DATE,
	DATETIME_CF1 DATETIME,
	DATETIME_CF2 DATETIME,
	DATETIME_CF3 DATETIME,
	DATETIME_CF4 DATETIME,
	DATETIME_CF5 DATETIME,
	CONSTRAINT TICKETS_DATA_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TICKETS_DATA_FK_OBJID FOREIGN KEY (OBJID) REFERENCES Tickets_Objects(OBJID),
	CONSTRAINT TICKETS_DATA_FK_AGENTID FOREIGN KEY (AGENTID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT TICKETS_DATA_FK_ASSETID FOREIGN KEY (FAILED_ASSET_ID) REFERENCES Assets(ASSETID)
);

-- Create Schedule Table
CREATE TABLE IF NOT EXISTS ScheduleObjects (
	SCHEDULEID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	SCHEDULED_START BIGINT,
	ESTIMATED_END BIGINT,
	ACTUAL_WORK_START BIGINT,
	ACTUAL_WORK_END BIGINT,
	CONSTRAINT SCHEDULE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

-- Create Notes Table
CREATE TABLE IF NOT EXISTS Notes (
	NOTEID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	OWNERID BIGINT,
	CREATION_TIME BIGINT,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000),
	CONSTRAINT NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT NOTES_FK_OWNER_ID FOREIGN KEY (OWNERID) REFERENCES ORG_Users(ORG_USERID)
);


-- Create Tasks Tables
CREATE TABLE IF NOT EXISTS Tasks_Objects (
	OBJID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	NAME VARCHAR(25),
	CONSTRAINT TASKS_OBJECT_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Tasks_Fields (
	FIELDID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	OBJID BIGINT,
	FIELDNAME VARCHAR(25),
	COLUMNNUM TINYINT,
	DATATYPE TINYINT,
	CONSTRAINT TASKS_FIELDS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TASKS_FIELDS_OBJID FOREIGN KEY (OBJID) REFERENCES Tasks_Objects(OBJID)
);

CREATE TABLE IF NOT EXISTS Tasks_Data (
	TASKID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	OBJID BIGINT,
	PARENT BIGINT,
	SUBJECT VARCHAR(50),
	DESCRIPTION VARCHAR(1000),
	ASSIGNED_TO_ID BIGINT,
	SCHEDULE_ID BIGINT,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 INT,
	NUMBER_CF2 INT,
	NUMBER_CF3 INT,
	NUMBER_CF4 INT,
	NUMBER_CF5 INT,
	DECIMAL_CF1 DOUBLE(9,3),
	DECIMAL_CF2 DOUBLE(9,3),
	DECIMAL_CF3 DOUBLE(9,3),
	DECIMAL_CF4 DOUBLE(9,3),
	DECIMAL_CF5 DOUBLE(9,3),
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	DATE_CF1 DATE,
	DATE_CF2 DATE,
	DATE_CF3 DATE,
	DATE_CF4 DATE,
	DATE_CF5 DATE,
	DATETIME_CF1 DATETIME,
	DATETIME_CF2 DATETIME,
	DATETIME_CF3 DATETIME,
	DATETIME_CF4 DATETIME,
	DATETIME_CF5 DATETIME,
	CONSTRAINT TASKS_DATA_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TASKS_DATA_FK_OBJID FOREIGN KEY (OBJID) REFERENCES Tasks_Objects(OBJID),
	CONSTRAINT TASKS_DATA_FK_PARENT FOREIGN KEY (PARENT) REFERENCES Tickets_Data(TICKETID),
	CONSTRAINT TASKS_DATA_FK_ASSIGNED_TO_ID FOREIGN KEY (ASSIGNED_TO_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT TASKS_DATA_FK_SCHEDULE_ID FOREIGN KEY (SCHEDULE_ID) REFERENCES ScheduleObjects(SCHEDULEID)
);

-- Create Note-Ticket relationship table
CREATE TABLE IF NOT EXISTS Tasks_Notes (
	TASK_NOTE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	TASKID BIGINT,
	NOTEID BIGINT,
	CONSTRAINT TASKS_NOTES_FK_TASK_ID FOREIGN KEY (TASKID) REFERENCES Tasks_Data(TASKID),
	CONSTRAINT TASKS_NOTES_FK_NOTE_ID FOREIGN KEY (NOTEID) REFERENCES Notes(NOTEID)
);
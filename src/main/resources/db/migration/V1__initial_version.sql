-- Create Organizations Table
CREATE TABLE IF NOT EXISTS Organizations (
	ORGID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGNAME VARCHAR(50),
	FACILIODOMAINNAME VARCHAR(50)
);

-- Create Users Table
CREATE TABLE IF NOT EXISTS Users (
	USERID BIGINT AUTO_INCREMENT PRIMARY KEY,
	COGNITO_ID BIGINT,
	USER_VERIFIED BOOLEAN,
	EMAIL VARCHAR(150)
);

-- Create Roles Table
CREATE TABLE IF NOT EXISTS Role (
	ROLE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	NAME VARCHAR(50),
	DESCRIPTION VARCHAR(500),
	PERMISSIONS VARCHAR(50),
	CONSTRAINT ROLE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

-- Create ORG_Users Table
CREATE TABLE IF NOT EXISTS ORG_Users (
	ORG_USERID BIGINT AUTO_INCREMENT PRIMARY KEY,
	USERID BIGINT,
	ORGID BIGINT,
	INVITEDTIME BIGINT,
	ISDEFAULT BOOLEAN,
	INVITATION_ACCEPT_STATUS BOOLEAN,
	ROLE_ID BIGINT,
	CONSTRAINT ORG_USERS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ORG_USERS_FK_USERID FOREIGN KEY (USERID) REFERENCES Users(USERID),
	CONSTRAINT ORG_USERS_FK_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES Role(ROLE_ID)
);

-- Create GLobal_Domain_Index
CREATE TABLE IF NOT EXISTS Global_Domain_Index (
	DOMAINNAME VARCHAR(50),
	ORGID BIGINT 
);

-- Create Jobs Table
CREATE TABLE IF NOT EXISTS Jobs (
	JOBID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	JOBNAME VARCHAR(50),
	ISPERIODIC BOOLEAN,
	PERIOD INT,
	NEXTEXECUTIONTIME BIGINT,
	EXECUTORNAME VARCHAR(50),
	CONSTRAINT JOBS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

-- Create Jobs Table
CREATE TABLE IF NOT EXISTS System_Jobs (
	JOBID BIGINT,
	LAST_EXECUTION_TIME BIGINT,
	CONSTRAINT SYSTEM_JOBS_FK_JOBID FOREIGN KEY (JOBID) REFERENCES Jobs(JOBID)
);

-- Create Assets Table
CREATE TABLE IF NOT EXISTS Assets (
	ASSETID BIGINT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(50),
	ORGID BIGINT,
	CONSTRAINT ASSETS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Groups (
	GROUPID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	GROUP_NAME CHAR(255),
	GROUP_EMAIL CHAR(255),
	GROUP_DESC TEXT(1000),
	IS_ACTIVE BOOLEAN,
	CREATED_TIME BIGINT,
	CREATED_BY BIGINT,
	PARENT BIGINT,
	CONSTRAINT GROUPS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS GroupMembers (
	MEMBERID BIGINT AUTO_INCREMENT PRIMARY KEY,
	GROUPID BIGINT,
	ORG_USERID BIGINT,
	MEMBER_ROLE INT,
	CONSTRAINT GROUP_MEMBERS_FK_ORGID FOREIGN KEY (GROUPID) REFERENCES Groups(GROUPID) ON DELETE CASCADE,
	CONSTRAINT GROUP_MEMBERS_FK_USERID FOREIGN KEY (ORG_USERID) REFERENCES ORG_Users(ORG_USERID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Modules (
	MODULEID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(25) NOT NULL,
	DISPLAY_NAME VARCHAR(25),
	CONSTRAINT MODULES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Fields (
	FIELDID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(25),
	DISPLAY_NAME VARCHAR(25),
	COLUMN_NAME VARCHAR(25),
	SEQUENCE_NUMBER TINYINT,
	DATA_TYPE TINYINT,
	CONSTRAINT FIELDS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT FIELDS_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID)
);

CREATE TABLE IF NOT EXISTS Locations (
  LOCATION_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  MODULEID BIGINT NOT NULL,
  NAME CHAR(255),
  STREET CHAR(255),
  CITY CHAR(255),
  STATE CHAR(255),
  ZIP CHAR(255),
  COUNTRY CHAR(255),
  LAT DECIMAL(10, 8),
  LNG DECIMAL(11, 8),
  CONTACT BIGINT NULL,
  PHONE CHAR(100),
  FAX_PHONE CHAR(100),
  CONSTRAINT LOCATIONS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
  CONSTRAINT LOCATIONS_CONTACT_FK FOREIGN KEY (CONTACT) REFERENCES ORG_Users (ORG_USERID)
);

CREATE TABLE IF NOT EXISTS Area (
	AREA_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	CONSTRAINT AREA_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Campus (
	CAMPUS_ID BIGINT,
	ORGID BIGINT NOT NULL,
	LOCATION_ID BIGINT,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50),
	CURRENT_OCCUPANCY BIGINT,
	MAX_OCCUPANCY BIGINT,
	AREA BIGINT,
	MANAGED_BY BIGINT,
	DESCRIPTION VARCHAR(1000),
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	LONG_INTEGER_CF1 BIGINT,
	LONG_INTEGER_CF2 BIGINT,
	LONG_INTEGER_CF3 BIGINT,
	LONG_INTEGER_CF4 BIGINT,
	LONG_INTEGER_CF5 BIGINT,
	DECIMAL_CF1 DOUBLE(9,3),
	DECIMAL_CF2 DOUBLE(9,3),
	DECIMAL_CF3 DOUBLE(9,3),
	DECIMAL_CF4 DOUBLE(9,3),
	DECIMAL_CF5 DOUBLE(9,3),
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,
	CONSTRAINT CAMPUS_FK_CAMPUS_ID FOREIGN KEY (CAMPUS_ID) REFERENCES Area(AREA_ID),
	CONSTRAINT CAMPUS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT CAMPUS_FK_MANAGED_BY FOREIGN KEY (MANAGED_BY) REFERENCES ORG_Users (ORG_USERID),
	CONSTRAINT CAMPUS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT CAMPUS_FK_LOCATION_ID FOREIGN KEY (LOCATION_ID) REFERENCES Locations (LOCATION_ID)
);

CREATE TABLE IF NOT EXISTS Building (
	BUILDING_ID BIGINT,
	ORGID BIGINT NOT NULL,
	LOCATION_ID BIGINT,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50),
	CAMPUS_ID BIGINT,
	FLOORS BIGINT,
	AREA BIGINT,
	CURRENT_OCCUPANCY BIGINT,
	MAX_OCCUPANCY BIGINT,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	LONG_INTEGER_CF1 BIGINT,
	LONG_INTEGER_CF2 BIGINT,
	LONG_INTEGER_CF3 BIGINT,
	LONG_INTEGER_CF4 BIGINT,
	LONG_INTEGER_CF5 BIGINT,
	DECIMAL_CF1 DOUBLE(9,3),
	DECIMAL_CF2 DOUBLE(9,3),
	DECIMAL_CF3 DOUBLE(9,3),
	DECIMAL_CF4 DOUBLE(9,3),
	DECIMAL_CF5 DOUBLE(9,3),
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,
	CONSTRAINT BUILDING_FK_BUILDING_ID FOREIGN KEY (BUILDING_ID) REFERENCES Area(AREA_ID),
	CONSTRAINT BUILDING_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT BUILDING_FK_CAMPUS_ID FOREIGN KEY (CAMPUS_ID) REFERENCES Campus (CAMPUS_ID),
	CONSTRAINT BUILDING_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT BUILDING_FK_LOCATION_ID FOREIGN KEY (LOCATION_ID) REFERENCES Locations (LOCATION_ID)
);

CREATE TABLE IF NOT EXISTS Floor (
	FLOOR_ID BIGINT,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50),
	BUILDING_ID BIGINT,
	MAIN_LEVEL BOOLEAN,
	AREA BIGINT,
	CURRENT_OCCUPANCY BIGINT,
	MAX_OCCUPANCY BIGINT,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	LONG_INTEGER_CF1 BIGINT,
	LONG_INTEGER_CF2 BIGINT,
	LONG_INTEGER_CF3 BIGINT,
	LONG_INTEGER_CF4 BIGINT,
	LONG_INTEGER_CF5 BIGINT,
	DECIMAL_CF1 DOUBLE(9,3),
	DECIMAL_CF2 DOUBLE(9,3),
	DECIMAL_CF3 DOUBLE(9,3),
	DECIMAL_CF4 DOUBLE(9,3),
	DECIMAL_CF5 DOUBLE(9,3),
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,
	CONSTRAINT FLOOR_FK_FLOOR_ID FOREIGN KEY (FLOOR_ID) REFERENCES Area(AREA_ID),
	CONSTRAINT FLOOR_FK_BUILDING_ID FOREIGN KEY (BUILDING_ID) REFERENCES Building(BUILDING_ID),
	CONSTRAINT FLOOR_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT FLOOR_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Space_Category (
	SPACE_CATEGORY_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	CATEGORY_NAME BIGINT,
	DESCRIPTION VARCHAR(1000),
	CONSTRAINT SPACE_CATEGORY_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT SPACE_CATEGORY_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Space (
	SPACE_ID BIGINT,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	DISPLAY_NAME VARCHAR(50),
	NAME VARCHAR(50),
	BUILDING_ID BIGINT,
	FLOOR_ID BIGINT,
	AREA BIGINT,
	AVAILABILITY BIGINT,
	CURRENT_OCCUPANCY BIGINT,
	MAX_OCCUPANCY BIGINT,
	OCCUPIABLE BOOLEAN,
	SPACE_CATEGORY_ID BIGINT,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	LONG_INTEGER_CF1 BIGINT,
	LONG_INTEGER_CF2 BIGINT,
	LONG_INTEGER_CF3 BIGINT,
	LONG_INTEGER_CF4 BIGINT,
	LONG_INTEGER_CF5 BIGINT,
	DECIMAL_CF1 DOUBLE(9,3),
	DECIMAL_CF2 DOUBLE(9,3),
	DECIMAL_CF3 DOUBLE(9,3),
	DECIMAL_CF4 DOUBLE(9,3),
	DECIMAL_CF5 DOUBLE(9,3),
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,
	CONSTRAINT SPACE_FK_SPACE_ID FOREIGN KEY (SPACE_ID) REFERENCES Area(AREA_ID),
	CONSTRAINT SPACE_FK_BUILDING_ID FOREIGN KEY (BUILDING_ID) REFERENCES Building(BUILDING_ID),
	CONSTRAINT SPACE_FK_FLOOR_ID FOREIGN KEY (FLOOR_ID) REFERENCES Floor(FLOOR_ID),
	CONSTRAINT SPACE_FK_CATEGORY_ID FOREIGN KEY (SPACE_CATEGORY_ID) REFERENCES Space_Category(SPACE_CATEGORY_ID),
	CONSTRAINT SPACE_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT SPACE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS Zone (
	ZONE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	NAME VARCHAR(50),
	SHORT_DESCRIPTION VARCHAR(500),
	CONSTRAINT ZONE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT ZONE_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID)
);

CREATE TABLE IF NOT EXISTS Zone_Space (
	ZONE_ID BIGINT,
	SPACE_ID BIGINT,
	CONSTRAINT ZONE_SPACE_FK_ZONE_ID FOREIGN KEY (ZONE_ID) REFERENCES Zone(ZONE_ID),
	CONSTRAINT ZONE_SPACE_FK_SPACE_ID FOREIGN KEY (SPACE_ID) REFERENCES Space(SPACE_ID)
);

-- Create Tickets Tables
CREATE TABLE IF NOT EXISTS Tickets (
	TICKETID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	REQUESTER VARCHAR(50),
	SUBJECT VARCHAR(50),
	DESCRIPTION VARCHAR(1000),
	STATUS TINYINT,
	ASSIGNED_TO_ID BIGINT,
	ASSET_ID BIGINT,
	AREA_ID BIGINT,
	DUE_DATE BIGINT,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	LONG_INTEGER_CF1 BIGINT,
	LONG_INTEGER_CF2 BIGINT,
	LONG_INTEGER_CF3 BIGINT,
	LONG_INTEGER_CF4 BIGINT,
	LONG_INTEGER_CF5 BIGINT,
	DECIMAL_CF1 DOUBLE(9,3),
	DECIMAL_CF2 DOUBLE(9,3),
	DECIMAL_CF3 DOUBLE(9,3),
	DECIMAL_CF4 DOUBLE(9,3),
	DECIMAL_CF5 DOUBLE(9,3),
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,
	CONSTRAINT TICKETS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TICKETS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TICKETS_FK_AGENTID FOREIGN KEY (ASSIGNED_TO_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT TICKETS_FK_ASSETID FOREIGN KEY (ASSET_ID) REFERENCES Assets(ASSETID),
	CONSTRAINT TICKETS_FK_AREA_ID FOREIGN KEY (AREA_ID) REFERENCES Area(AREA_ID)
);

-- Create Schedule Table
CREATE TABLE IF NOT EXISTS ScheduleObjects (
	SCHEDULEID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	SCHEDULED_START BIGINT,
	ESTIMATED_END BIGINT,
	ACTUAL_WORK_START BIGINT,
	ACTUAL_WORK_END BIGINT,
	CONSTRAINT SCHEDULE_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

-- Create Notes Table
CREATE TABLE IF NOT EXISTS Notes (
	NOTEID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT,
	OWNERID BIGINT,
	CREATION_TIME BIGINT,
	TITLE VARCHAR(50),
	BODY VARCHAR(1000),
	CONSTRAINT NOTES_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT NOTES_FK_OWNER_ID FOREIGN KEY (OWNERID) REFERENCES ORG_Users(ORG_USERID)
);

-- Create Tasks Tables
CREATE TABLE IF NOT EXISTS Tasks (
	TASKID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	MODULEID BIGINT NOT NULL,
	PARENT BIGINT,
	SUBJECT VARCHAR(50),
	DESCRIPTION VARCHAR(1000),
	ASSIGNMENT_GROUP_ID BIGINT,
	ASSIGNED_TO_ID BIGINT,
	SCHEDULE_ID BIGINT,
	STRING_CF1 VARCHAR(50),
	STRING_CF2 VARCHAR(50),
	STRING_CF3 VARCHAR(50),
	STRING_CF4 VARCHAR(50),
	STRING_CF5 VARCHAR(50),
	NUMBER_CF1 BIGINT,
	NUMBER_CF2 BIGINT,
	NUMBER_CF3 BIGINT,
	NUMBER_CF4 BIGINT,
	NUMBER_CF5 BIGINT,
	DECIMAL_CF1 DOUBLE(9,3),
	DECIMAL_CF2 DOUBLE(9,3),
	DECIMAL_CF3 DOUBLE(9,3),
	DECIMAL_CF4 DOUBLE(9,3),
	DECIMAL_CF5 DOUBLE(9,3),
	BOOLEAN_CF1 BOOLEAN,
	BOOLEAN_CF2 BOOLEAN,
	BOOLEAN_CF3 BOOLEAN,
	BOOLEAN_CF4 BOOLEAN,
	BOOLEAN_CF5 BOOLEAN,
	DATE_CF1 BIGINT,
	DATE_CF2 BIGINT,
	DATE_CF3 BIGINT,
	DATE_CF4 BIGINT,
	DATE_CF5 BIGINT,
	DATETIME_CF1 BIGINT,
	DATETIME_CF2 BIGINT,
	DATETIME_CF3 BIGINT,
	DATETIME_CF4 BIGINT,
	DATETIME_CF5 BIGINT,
	CONSTRAINT TASKS_FK_ORGID FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT TASKS_FK_MODULEID FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT TASKS_FK_PARENT FOREIGN KEY (PARENT) REFERENCES Tickets(TICKETID),
	CONSTRAINT TASKS_FK_ASSIGNMENT_GROUP FOREIGN KEY (ASSIGNMENT_GROUP_ID) REFERENCES Groups(GROUPID),
	CONSTRAINT TASKS_FK_ASSIGNED_TO_ID FOREIGN KEY (ASSIGNED_TO_ID) REFERENCES ORG_Users(ORG_USERID),
	CONSTRAINT TASKS_FK_SCHEDULE_ID FOREIGN KEY (SCHEDULE_ID) REFERENCES ScheduleObjects(SCHEDULEID)
);

-- Create Note-Ticket relationship table
CREATE TABLE IF NOT EXISTS Tasks_Notes (
	TASK_NOTE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	TASKID BIGINT,
	NOTEID BIGINT,
	CONSTRAINT TASKS_NOTES_FK_TASK_ID FOREIGN KEY (TASKID) REFERENCES Tasks(TASKID),
	CONSTRAINT TASKS_NOTES_FK_NOTE_ID FOREIGN KEY (NOTEID) REFERENCES Notes(NOTEID)
);

CREATE TABLE IF NOT EXISTS UserLocationCoverage (
  USER_LOCATION_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORG_USERID BIGINT,
  LOCATION_ID BIGINT,
  CONSTRAINT USERLOCATIONS_USERID_FK FOREIGN KEY (ORG_USERID) REFERENCES ORG_Users(ORG_USERID) ON DELETE CASCADE,
  CONSTRAINT USERLOCATIONS_LOCATION_FK FOREIGN KEY (LOCATION_ID) REFERENCES Locations (LOCATION_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS GroupLocationCoverage (
  GROUP_LOCATION_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  GROUPID BIGINT,
  LOCATION_ID BIGINT,
  CONSTRAINT GLC_GROUPID_FK FOREIGN KEY (GROUPID) REFERENCES Groups(GROUPID) ON DELETE CASCADE,
  CONSTRAINT GLC_LOCATION_FK FOREIGN KEY (LOCATION_ID) REFERENCES Locations (LOCATION_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Skills (
  SKILL_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  NAME VARCHAR(255),
  IS_ACTIVE BOOLEAN,
  DESCRIPTION VARCHAR(1000),
  CONSTRAINT SKILLS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

CREATE TABLE IF NOT EXISTS UserSkills (
  USER_SKILL_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORG_USERID BIGINT,
  SKILL_ID BIGINT,
  CONSTRAINT USERSKILLS_USERID_FK FOREIGN KEY (ORG_USERID) REFERENCES ORG_Users(ORG_USERID) ON DELETE CASCADE,
  CONSTRAINT USERSKILLS_SKILL_FK FOREIGN KEY (SKILL_ID) REFERENCES Skills (SKILL_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS GroupSkills (
  GROUP_SKILL_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  GROUPID BIGINT,
  SKILL_ID BIGINT,
  CONSTRAINT GROUPSKILLS_GROUPID_FK FOREIGN KEY (GROUPID) REFERENCES Groups(GROUPID) ON DELETE CASCADE,
  CONSTRAINT GROUPSKILLS_SKILL_FK FOREIGN KEY (SKILL_ID) REFERENCES Skills (SKILL_ID) ON DELETE CASCADE
);

-- Device Table

CREATE TABLE IF NOT EXISTS Service (
	SERVICE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS Controller (
	CONTROLLER_ID BIGINT,
	CONTROLLER_TYPE INT,
	IP_ADDRESS VARCHAR(50),
	POLL_TIME INT,
	JOBID BIGINT,
	JOB_STATUS BOOLEAN,
	STATUS INT,
	CONSTRAINT CONTROLLER_FK_ASSET_ID FOREIGN KEY (CONTROLLER_ID) REFERENCES Assets(ASSETID),
	CONSTRAINT CONTROLLER_FK_JOBID FOREIGN KEY (JOBID) REFERENCES Jobs(JOBID)
);

CREATE TABLE IF NOT EXISTS Device (
	DEVICE_ID BIGINT,
	SERVICE_ID BIGINT,
	ZONE_ID BIGINT,
	BUILDING_ID BIGINT,
	CONTROLLER_ID BIGINT,
	PARENT_DEVICE_ID BIGINT,
	DEVICE_TYPE INT,
	STATUS INT,
	CONSTRAINT DEVICE_FK_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES Assets(ASSETID),
	CONSTRAINT DEVICE_FK_SERVICE_ID FOREIGN KEY (SERVICE_ID) REFERENCES Service(SERVICE_ID),
	CONSTRAINT DEVICE_FK_ZONE_ID FOREIGN KEY (ZONE_ID) REFERENCES Zone(ZONE_ID),
	CONSTRAINT DEVICE_FK_PARENT_DEVICE_ID FOREIGN KEY (PARENT_DEVICE_ID) REFERENCES Device(DEVICE_ID),
	CONSTRAINT DEVICE_FK_BUILDING_ID FOREIGN KEY (BUILDING_ID) REFERENCES Building(BUILDING_ID),
	CONSTRAINT DEVICE_FK_CONTROLLER_ID FOREIGN KEY (CONTROLLER_ID) REFERENCES Controller(CONTROLLER_ID)
);

CREATE TABLE IF NOT EXISTS Controller_Instance (
	CONTROLLER_INSTANCE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	CONTROLLER_ID BIGINT,
	DEVICE_ID BIGINT,
	INSTANCE_ID INT,
	INSTANCE_NAME VARCHAR(50),
	COLUMN_NAME VARCHAR(50),
	CONSTRAINT DEVICE_INSTANCE_FK_CONTROLLER_ID FOREIGN KEY (CONTROLLER_ID) REFERENCES Controller(CONTROLLER_ID),
	CONSTRAINT DEVICE_INSTANCE_FK_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES Device(DEVICE_ID)
);

CREATE TABLE IF NOT EXISTS Unmodelled_Data (
	UNMODELLED_DATA_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	CONTROLLER_INSTANCE_ID BIGINT,
	ADDED_TIME BIGINT,
	INSTANCE_VALUE DOUBLE,
	CONSTRAINT UNMODELLED_DATA_FK_CONTROLLER_INSTANCE_ID FOREIGN KEY (CONTROLLER_INSTANCE_ID) REFERENCES Controller_Instance(CONTROLLER_INSTANCE_ID)
);

CREATE TABLE IF NOT EXISTS Energy_Data (
	ENERGY_DATA_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	DEVICE_ID BIGINT,
	ADDED_TIME BIGINT,
	TOTAL_ENERGY_CONSUMPTION DOUBLE,
	TOTAL_ENERGY_CONSUMPTION_DELTA DOUBLE,
	LINE_VOLTAGE_R DOUBLE,
	LINE_VOLTAGE_Y DOUBLE,
	LINE_VOLTAGE_B DOUBLE,
	PHASE_VOLTAGE_R DOUBLE,
	PHASE_VOLTAGE_Y DOUBLE,
	PHASE_VOLTAGE_B DOUBLE,
	LINE_CURRENT_R DOUBLE,
	LINE_CURRENT_Y DOUBLE,
	LINE_CURRENT_B DOUBLE,
	POWER_FACTOR_R DOUBLE,
	POWER_FACTOR_Y DOUBLE,
	POWER_FACTOR_B DOUBLE,
	FREQUENCY_R DOUBLE,
	FREQUENCY_Y DOUBLE,
	FREQUENCY_B DOUBLE,
	ACTIVE_POWER_R DOUBLE,
	ACTIVE_POWER_Y DOUBLE,
	ACTIVE_POWER_B DOUBLE,
	REACTIVE_POWER_R DOUBLE,
	REACTIVE_POWER_Y DOUBLE,
	REACTIVE_POWER_B DOUBLE,
	APPARENT_POWER_R DOUBLE,
	APPARENT_POWER_Y DOUBLE,
	APPARENT_POWER_B DOUBLE,
	PHASE_ENERGY_R DOUBLE,
	PHASE_ENERGY_Y DOUBLE,
	PHASE_ENERGY_B DOUBLE,
	CONSTRAINT ENERGY_DATA_FK_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES Device(DEVICE_ID)
);

CREATE TABLE IF NOT EXISTS File (
  FILE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ORGID BIGINT NOT NULL,
  FILE_NAME CHAR(255),
  FILE_PATH CHAR(255),
  FILE_SIZE BIGINT,
  CONTENT_TYPE CHAR(255),
  UPLOADED_BY BIGINT,
  UPLOADED_TIME BIGINT,
  CONSTRAINT FILE_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID)
);

-- Create File-Ticket relationship table
CREATE TABLE IF NOT EXISTS Ticket_Attachment (
	TICKET_ATTACHMENT_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	TICKETID BIGINT,
	FILE_ID BIGINT,
	CONSTRAINT TICKET_ATTACHMENT_FK_TID FOREIGN KEY (TICKETID) REFERENCES Tickets(TICKETID),
	CONSTRAINT TICKET_ATTACHMENT_FK_FID FOREIGN KEY (FILE_ID) REFERENCES File(FILE_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Criteria (
	CRITERIAID BIGINT AUTO_INCREMENT PRIMARY KEY,
	PATTERN VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS Conditions (
	CONDITIONID BIGINT AUTO_INCREMENT PRIMARY KEY,
	CRITERIAID BIGINT NOT NULL,
	SEQUENCE TINYINT NOT NULL,
	FIELDID BIGINT NOT NULL,
	OPERATOR VARCHAR(15) NOT NULL,
	VAL VARCHAR(50),
	COMPUTED_WHERE_CLAUSE VARCHAR(100),
	CONSTRAINT CONDITIONS_CRITERIAID_FK FOREIGN KEY (CRITERIAID) REFERENCES Criteria(CRITERIAID),
	CONSTRAINT CONDITIONS_FIELDID_FK FOREIGN KEY (FIELDID) REFERENCES Fields(FIELDID)
);

CREATE TABLE IF NOT EXISTS Views (
	VIEWID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ORGID BIGINT NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	DISPLAY_NAME VARCHAR(50),
	MODULEID BIGINT NOT NULL,
	CRITERIAID BIGINT NOT NULL,
	CONSTRAINT VIEWS_ORGID_FK FOREIGN KEY (ORGID) REFERENCES Organizations(ORGID),
	CONSTRAINT VIEWS_MODULEID_FK FOREIGN KEY (MODULEID) REFERENCES Modules(MODULEID),
	CONSTRAINT VIEWS_CRITERIAID_FK FOREIGN KEY (CRITERIAID) REFERENCES Criteria(CRITERIAID)
);
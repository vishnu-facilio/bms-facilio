<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
        "http://struts.apache.org/dtds/struts-2.5.dtd">


<struts>
    <package name="v3BaseApi" strict-method-invocation="false"
             extends="struts-default,json-default">
        <result-types>
            <result-type name="json"
                         class="com.facilio.bmsconsole.interceptors.CacheResult" />
        </result-types>

        <global-results>
            <result name="login" type="httpheader">
                <param name="status">401</param>
            </result>
            <result name="unauthorized" type="httpheader">
                <param name="status">403</param>
            </result>
            <result name="invalid" type="httpheader">
				<param name="status">400</param>
			</result>
			<result name="usernotinapp" type="httpheader">
				<param name="status">409</param>
			</result>
		
			<result name="error" type="json">
                <param name="ignoreHierarchy">false</param>
                <param name="includeProperties">responseCode, message, stackTrace</param>
            </result>
            <result name="exception" type="chain">
                <param name="actionName">handleException</param>
                <param name="namespace">/v1/exception</param>
            </result>
            <result name="cachedResponse" type="chain">
                <param name="actionName">cachedResponse</param>
                <param name="namespace">/v2/cachedResponse</param>
            </result>
            <result name="success" type="json">
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">false</param>
                <param name="includeProperties">^code.*,^data.*,^meta.*,message</param>
            </result>
            <result name="failure" type="json">
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">false</param>
                <param name="includeProperties">^message.*,^code.*,^data.*,^stackTrace.*</param>
            </result>
            <result name="sessionexpired" type="httpheader">
                <param name="status">440</param>
            </result>
        </global-results>

        <global-exception-mappings>
            <exception-mapping exception="java.lang.Exception"
                               result="exception" />
        </global-exception-mappings>
    </package>
    <package name="internalExV3" namespace="/v3/exception"
			 extends="v3BaseApi">
		<action name="handleException"
				class="com.facilio.v3.V3Action"
				method="handleException">
			<interceptor-ref name="defaultStack" />
		</action>
	</package>

    <package name="v3Api" namespace="/api/v3/modules/data" extends="v3BaseApi">
        <interceptors>
            <interceptor name="cacheinterceptor"
                         class="com.facilio.bmsconsole.interceptors.CacheInterceptor" />
            <interceptor name="scopeinterceptor"
                         class="com.facilio.bmsconsole.interceptors.ScopeInterceptor" />
            <interceptor name="datasourceinterceptor"
                         class="com.facilio.bmsconsole.interceptors.DataSourceInterceptor" />
            <interceptor name="authinterceptor"
                         class="com.facilio.bmsconsole.interceptors.AuthInterceptor" />
            <interceptor-stack name="defaultInterceptor">
                <interceptor-ref name="defaultStack" />
                <interceptor-ref name="authinterceptor" />
                <interceptor-ref name="datasourceinterceptor" />
                <interceptor-ref name="scopeinterceptor" />
                <interceptor-ref name="cacheinterceptor" />
                <interceptor-ref name="json">
                    <param name="enableSMD">true</param>
                </interceptor-ref>
            </interceptor-stack>
        </interceptors>

        <default-interceptor-ref
                name="defaultInterceptor" />

        <action name="create"
                class="com.facilio.v3.RESTAPIHandler"
                method="create">
        </action>

        <action name="update"
                class="com.facilio.v3.RESTAPIHandler"
                method="update">
        </action>

        <action name="list"
                class="com.facilio.v3.RESTAPIHandler"
                method="list">
        </action>

        <action name="summary"
                class="com.facilio.v3.RESTAPIHandler"
                method="summary">
        </action>

        <action name="patch"
                class="com.facilio.v3.RESTAPIHandler"
                method="patch">
        </action>

        <action name="bulkpatch"
                class="com.facilio.v3.RESTAPIHandler"
                method="bulkPatch">
        </action>

        <action name="delete"
                class="com.facilio.v3.RESTAPIHandler"
                method="delete">
        </action>

        <action name="files"
                class="com.facilio.v3.RESTAPIHandler"
                method="files">
        </action>

        <action name="count"
                class="com.facilio.v3.RESTAPIHandler"
                method="count">
        </action>
    </package>


    <package name="usernotification" namespace="/api/v3/usernotification/update" extends="v3Api">
        <action name="seen"
                class="com.facilio.bmsconsoleV3.actions.UserNotificationAction"
                method="updateUserNotificationSeen">
        </action>

        <action name="markAsRead"
                class="com.facilio.bmsconsoleV3.actions.UserNotificationAction"
                method="updateUserNotificationRead">
        </action>

    </package>
    
    <package name="v3triggers" namespace="/api/v3/trigger" extends="v3Api">
        <action name="list"
                class="com.facilio.trigger.action.TriggerAction"
                method="listTriggers" />

        <action name="addOrUpdate"
                class="com.facilio.trigger.action.TriggerAction"
                method="addOrUpdateTrigger">
        </action>
        
        <action name="delete"
                class="com.facilio.trigger.action.TriggerAction"
                method="deleteTrigger">
        </action>
        <action name="rearrange"
                class="com.facilio.trigger.action.TriggerAction"
                method="reArrangeTriggerAction" />

        <action name="changeStatus"
                class="com.facilio.trigger.action.TriggerAction"
                method="changeStatus" />
        
        <action name="execute"
                class="com.facilio.trigger.action.TriggerAction"
                method="executeTrigger">
        </action>

    </package>
    
    
    <package name="v3MailMessageAction" namespace="/api/v3/mailmessage" extends="v3Api">
        <action name="reSendVerificationEmail"
                class="com.facilio.bmsconsoleV3.actions.MailMessageAction"
                method="reSendVerificationEmail" />

        <action name="getfromEmailForEmailThreadingReply"
                class="com.facilio.bmsconsoleV3.actions.MailMessageAction"
                method="getfromEmailForEmailThreadingReply">
        </action>
        
    </package>
    
    
    <package name="control" namespace="/api/v3/control" extends="v3Api">
        <action name="getCategoryForType"
                class="com.facilio.bmsconsoleV3.actions.ControlAction"
                method="getCategoryForType">
        </action>
        <action name="getSlot"
                class="com.facilio.bmsconsoleV3.actions.ControlAction"
                method="getSlot">
        </action>
		<action name="getTenantsToBePublished"
                class="com.facilio.bmsconsoleV3.actions.ControlAction"
                method="getTenantsToBePublished">
        </action>
        <action name="publishToTenant"
                class="com.facilio.bmsconsoleV3.actions.ControlAction"
                method="publishToTenant">
        </action>
        <action name="unPublishToTenant"
                class="com.facilio.bmsconsoleV3.actions.ControlAction"
                method="unPublishToTenant">
        </action>
        <action name="resetTenantChanges"
                class="com.facilio.bmsconsoleV3.actions.ControlAction"
                method="resetTenantChanges">
        </action>
    </package>

    <package name="picklistApiv3" namespace="/api/v3/picklist"
             extends="v3Api">
        <action name="*"
                class="com.facilio.bmsconsoleV3.actions.picklist.V3PIckListAction"
                method="pickList">
            <param name="moduleName">{1}</param>
        </action>
    </package>
    
    <package name="moduleApiv3" namespace="/api/v3/modules/list" extends="v3Api">
        <action name="all" class="com.facilio.bmsconsoleV3.actions.V3ModuleAction" method="moduleList"></action>
    </package>
    
    <package name="placeholderApiv3" namespace="/api/v3/placeholders" extends="v3Api">
        <action name="*" class="com.facilio.bmsconsoleV3.actions.V3CommonAction" method="fetchPlaceholderFields">
            <param name="moduleName">{1}</param>
        </action>
    </package>
    
    <package name="summaryApiv3" namespace="/api/v3/summary/fields" extends="v3Api">
        <action name="*" class="com.facilio.bmsconsoleV3.actions.V3PageAction" method="fetchSummaryFields">
            <param name="moduleName">{1}</param>
            <result name="success" type="json">
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">false</param>
                <param name="includeProperties">^code.*,^data.*,^meta.*,message</param>
                <param name="excludeProperties">data.fields.*\.field.(columnName|completeColumnName|tableName|inputName|module|accessType)</param>
                
            </result>
        </action>
    </package>

    <package name="qandaTemplate" namespace="/api/v3/qanda/template" extends="v3Api">
        <action name="execute"
                class="com.facilio.qa.actions.QAndAAction"
                method="executeTemplate">
        </action>
    </package>

    <package name="qandaPageClone" namespace="/api/v3/qanda/pages/clone" extends="v3Api">
        <action name="*"
                class="com.facilio.qa.actions.QAndAAction"
                method="clonePage">
            <param name="pageId">{1}</param>
        </action>
    </package>

    <package name="qandaQuestionAnswers" namespace="/api/v3/qanda/questions/fetchanswers" extends="v3Api">
        <action name="*"
                class="com.facilio.qa.actions.QAndAAction"
                method="fetchAnswers">
            <param name="questionId">{1}</param>
        </action>
    </package>

    <package name="qandaQuestionOtherOptions" namespace="/api/v3/qanda/questions/fetchotheroptions" extends="v3Api">
        <action name="*"
                class="com.facilio.qa.actions.QAndAAction"
                method="fetchOtherOptions">
            <param name="questionId">{1}</param>
        </action>
    </package>

    <package name="qandaAnswers" namespace="/api/v3/qanda/answers" extends="v3Api">
        <action name="save"
                class="com.facilio.qa.actions.QAndAAction"
                method="addOrUpdateAnswers">
        </action>
        <action name="validate"
                class="com.facilio.qa.actions.QAndAAction"
                method="validateAnswers">
        </action>
    </package>

    <package name="qandaRules" namespace="/api/v3/qandarules" extends="v3Api">
        <action name="operators"
                class="com.facilio.qa.rules.actions.QAndARuleAction"
                method="fetchOperators">
        </action>
    </package>

    <package name="scoringRulesAdd" namespace="/api/v3/scoringrules/add" extends="v3Api">
        <action name="*"
                class="com.facilio.qa.rules.actions.QAndARuleAction"
                method="addScoringRules">
            <param name="pageId">{1}</param>
        </action>
    </package>

    <package name="scoringRulesFetch" namespace="/api/v3/scoringrules/list" extends="v3Api">
        <action name="*"
                class="com.facilio.qa.rules.actions.QAndARuleAction"
                method="fetchScoringRules">
            <param name="pageId">{1}</param>
        </action>
    </package>
    
    <package name="floorplan" namespace="/api/v3/floorplan" extends="v3Api">
        <action name="getFacilityDetails"
                class="com.facilio.bmsconsoleV3.actions.FloorplanAction"
                method="getFacilityDetails">
        </action>
        <action name="getFloorplanDetailsByType"
                class="com.facilio.bmsconsoleV3.actions.FloorplanAction"
                method="getFloorplanDetailsByType">
        </action>
    </package>
    
    <package name="bulkResourceAllocation" namespace="/api/v3/resourceAllocation" extends="v3Api">
        <action name="getModuleAndCrtieriaFromConfig"
                class="com.facilio.bmsconsoleV3.actions.BulkResourceAllocationAction"
                method="getModuleAndCrtieriaFromConfig">
        </action>
    </package>
    
    
    <package name="bundle" namespace="/api/v3/bundle" extends="v3Api">
        <action name="copyCustomiation"
                class="com.facilio.bundle.action.BundleAction"
                method="copyCustomiation">
        </action>
    </package>

</struts>

iot.accessKeyId=
iot.secretKeyId=
region=us-west-2
iot.endpoint=
logs.bucket=facilio-logs
s3.bucket.name=
static.bucket=facilio-client-build
key.pair.id=
user.id=

deployment=aws

db.default.ds=prod-db
db.identifiers=prod-db,new-demo-db,jobs-1,accesslog,asda-db,tutenlabs-db,prod-db-2
db.default.db=bms
#This will be the app db for new orgs created
db.default.app.db.new.org=bms_3
db.name=mysql
db.class=com.facilio.sql.mysql
hca-db.connections=10
starwood-db.connections=10
accesslog.connections=10

rebrand.supportemail=support@facilio.com
rebrand.brand=Facilio
rebrand.domain=facilio.com
rebrand.alertemail=alerts@facilio.com
rebrand.copyright.name=Facilio Inc
rebrand.copyright.year=2022
rebrand.iamemail=Facilio Team <noreply@facilioaccounts.com>

google.auth=true
google.auth.clientid=480704980623-4i4us50lucf9f5tt928j3457psdgdb46.apps.googleusercontent.com

## domain used in the app url -> eg: app.facilio.com,it will be 'buildingstalk' in the case of facilities.buildingstalk.com
domain=facilio

environment=production

schedulerServer=true
instantJobServer=true
messageProcessor=false

app.domain=app.facilio.com
wms.domain=app.facilio.com

wms.broadcaster=kafka

## default app domains
mainapp.domain=app.facilio.com
occupantportal.domain=facilioportal.com
tenantportal.domain=faciliotenants.com
clientportal.domain=facilioclients.com
vendorportal.domain=faciliovendors.com
employeeportal.domain=facilioworkplace.com

## aliases for default main app domain
allowedapp.domains=app.facilio.com,api.facilio.com,demo.facilio.com,tv.facilio.com,app.buildingsoncloud.com,app.facilio.ae

static.url=https://static.facilio.com
# change below to local_filestore for development setup
files.url=files.facilio.com


redis.enabled=true
redis.host=
redis.port=6379
redis.db=2

payment.url=https://payfacilio-test.chargebee.com/hosted_pages/plans/

weather.service=facilioweather
weather.key=

identity.service.url=https://app.facilio.com/identity

chargebee.site=payfacilio-test
chargebee.api=test_AcdMBlnceZzwYhGeAX6dkxzocvglIkJjL

cors.allowed.origins=https://facilio.ae,https://buildingsoncloud.com,https://fazilio.com,https://facilio.com,localhost:8080,localhost:9090,https://facilio.in,https://facilstack.com,https://facilioportal.com,https://faciliovendors.com,https://faciliotenants.com,https://facilioworkplace.com
#data science url . For staging and production , this URL should be http://54.221.38.121:7444/v1/anomalydetection

anomalyTempDir=/home/ubuntu/analytics/temp
anomalyCheckServiceURL=https://ml.facilio.com/api
anomalyPredictServiceURL=https://ml.facilio.com/api
anomalyBucket=facilio-analytics
anomalyBucketDir=prod/anomaly
anomalyPeriodicity=30
anomalyRefreshWaitTimeInSeconds=10
anomalyDetectWaitTimeInSeconds=3

admin.domain=facilio.com
onpremise=false

## Enable/ disable security filter. Cannot be disabled if environment is production though
security.filter=true

mail.domain=facilio-us.com
mail.smtp.host=
mail.smtp.socketFactory.port=
mail.smtp.port=
mail.username=
mail.password=

# outgoing mail status callback config name in ses
outgoing.mail.tracking.conf=us-mail-tracking

## S3 Bucket name to fetch incoming emails
incoming.email.s3.name=ses-facilio-support

push.notification.key=

service.email=aws
service.file.store=s3
mQueue.source=msk-us

service.pdf=external
service.pdf.url=https://pdf.faciliointegrations.com

response.size=true

### FacilioAudit Logs
facilio.access.log=false

## encryption type
password.hashing.function=MD5

secretmanger=aws-secrets-manager
service=facilio


# Malware Scanner
malwareScanner.enabled=true
malwareScanner.engine=clam
malwareScanner.timeout=10000
malwareScanner.host=us-mscanner.facilio.in
malwareScanner.port=3310
clam.readtimeout=8000
#100MB = 104857600Bytes
maxFileSizeInBytes=104857600

##Blacklist extension for attachment or upload file
fileExtension.blacklist =ade,adp,apk,appx,appxbundle,bat,cab,chm,cmd,com,cpl,dll,dmg,exe,hta,ins,iso,isp,jar,js,jse,lnk,mde,msc,msi,msix,msixbundle,msp,mst,nsh,php,pif,ps1,scr,sct,sh,shb,sys,vb,vbe,vbs,vxd,wsc,wsf,wsh,terminal
#API RateLimiter
apiRateLimiter.enabled=false
apiRateLimiter.allowedRequest=100
apiRateLimiter.intervalInSeconds=60
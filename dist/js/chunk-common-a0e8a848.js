"use strict";(self["webpackChunkfacilio_web"]=self["webpackChunkfacilio_web"]||[]).push([[67683],{
/***/887917:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
// EXPORTS
__webpack_require__.d(__webpack_exports__,{V:function(){/* binding */return Configuration},P:function(){/* binding */return clearAllFontInfos}});
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/base/browser/browser.js
var browser=__webpack_require__(730747),common_event=__webpack_require__(104669),lifecycle=__webpack_require__(905976),platform=__webpack_require__(901432),editorOptions=__webpack_require__(364141);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/base/common/event.js
// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/config/charWidthReader.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class CharWidthRequest{constructor(chr,type){this.chr=chr,this.type=type,this.width=0}fulfill(width){this.width=width}}class DomCharWidthReader{constructor(bareFontInfo,requests){this._bareFontInfo=bareFontInfo,this._requests=requests,this._container=null,this._testElements=null}read(){
// Create a test container with all these test elements
this._createDomElements(),
// Add the container to the DOM
document.body.appendChild(this._container),
// Read character widths
this._readFromDomElements(),
// Remove the container from the DOM
document.body.removeChild(this._container),this._container=null,this._testElements=null}_createDomElements(){const fontFamily=this._bareFontInfo.getMassagedFontFamily(browser/* isSafari */.G6?editorOptions/* EDITOR_FONT_DEFAULTS */.hL.fontFamily:null),container=document.createElement("div");container.style.position="absolute",container.style.top="-50000px",container.style.width="50000px";const regularDomNode=document.createElement("div");regularDomNode.style.fontFamily=fontFamily,regularDomNode.style.fontWeight=this._bareFontInfo.fontWeight,regularDomNode.style.fontSize=this._bareFontInfo.fontSize+"px",regularDomNode.style.fontFeatureSettings=this._bareFontInfo.fontFeatureSettings,regularDomNode.style.lineHeight=this._bareFontInfo.lineHeight+"px",regularDomNode.style.letterSpacing=this._bareFontInfo.letterSpacing+"px",container.appendChild(regularDomNode);const boldDomNode=document.createElement("div");boldDomNode.style.fontFamily=fontFamily,boldDomNode.style.fontWeight="bold",boldDomNode.style.fontSize=this._bareFontInfo.fontSize+"px",boldDomNode.style.fontFeatureSettings=this._bareFontInfo.fontFeatureSettings,boldDomNode.style.lineHeight=this._bareFontInfo.lineHeight+"px",boldDomNode.style.letterSpacing=this._bareFontInfo.letterSpacing+"px",container.appendChild(boldDomNode);const italicDomNode=document.createElement("div");italicDomNode.style.fontFamily=fontFamily,italicDomNode.style.fontWeight=this._bareFontInfo.fontWeight,italicDomNode.style.fontSize=this._bareFontInfo.fontSize+"px",italicDomNode.style.fontFeatureSettings=this._bareFontInfo.fontFeatureSettings,italicDomNode.style.lineHeight=this._bareFontInfo.lineHeight+"px",italicDomNode.style.letterSpacing=this._bareFontInfo.letterSpacing+"px",italicDomNode.style.fontStyle="italic",container.appendChild(italicDomNode);const testElements=[];for(const request of this._requests){let parent;0/* Regular */===request.type&&(parent=regularDomNode),2/* Bold */===request.type&&(parent=boldDomNode),1/* Italic */===request.type&&(parent=italicDomNode),parent.appendChild(document.createElement("br"));const testElement=document.createElement("span");DomCharWidthReader._render(testElement,request),parent.appendChild(testElement),testElements.push(testElement)}this._container=container,this._testElements=testElements}static _render(testElement,request){if(" "===request.chr){let htmlString=" ";
// Repeat character 256 (2^8) times
for(let i=0;i<8;i++)htmlString+=htmlString;testElement.innerText=htmlString}else{let testString=request.chr;
// Repeat character 256 (2^8) times
for(let i=0;i<8;i++)testString+=testString;testElement.textContent=testString}}_readFromDomElements(){for(let i=0,len=this._requests.length;i<len;i++){const request=this._requests[i],testElement=this._testElements[i];request.fulfill(testElement.offsetWidth/256)}}}function readCharWidths(bareFontInfo,requests){const reader=new DomCharWidthReader(bareFontInfo,requests);reader.read()}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/config/elementSizeObserver.js
var elementSizeObserver=__webpack_require__(254534),commonEditorConfig=__webpack_require__(156345),fontInfo=__webpack_require__(427374);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/config/commonEditorConfig.js
// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/config/configuration.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class CSSBasedConfigurationCache{constructor(){this._keys=Object.create(null),this._values=Object.create(null)}has(item){const itemId=item.getId();return!!this._values[itemId]}get(item){const itemId=item.getId();return this._values[itemId]}put(item,value){const itemId=item.getId();this._keys[itemId]=item,this._values[itemId]=value}remove(item){const itemId=item.getId();delete this._keys[itemId],delete this._values[itemId]}getValues(){return Object.keys(this._keys).map((id=>this._values[id]))}}function clearAllFontInfos(){CSSBasedConfiguration.INSTANCE.clearCache()}class CSSBasedConfiguration extends lifecycle/* Disposable */.JT{constructor(){super(),this._onDidChange=this._register(new common_event/* Emitter */.Q5),this.onDidChange=this._onDidChange.event,this._cache=new CSSBasedConfigurationCache,this._evictUntrustedReadingsTimeout=-1}dispose(){-1!==this._evictUntrustedReadingsTimeout&&(clearTimeout(this._evictUntrustedReadingsTimeout),this._evictUntrustedReadingsTimeout=-1),super.dispose()}clearCache(){this._cache=new CSSBasedConfigurationCache,this._onDidChange.fire()}_writeToCache(item,value){this._cache.put(item,value),value.isTrusted||-1!==this._evictUntrustedReadingsTimeout||(
// Try reading again after some time
this._evictUntrustedReadingsTimeout=setTimeout((()=>{this._evictUntrustedReadingsTimeout=-1,this._evictUntrustedReadings()}),5e3))}_evictUntrustedReadings(){const values=this._cache.getValues();let somethingRemoved=!1;for(const item of values)item.isTrusted||(somethingRemoved=!0,this._cache.remove(item));somethingRemoved&&this._onDidChange.fire()}readConfiguration(bareFontInfo){if(!this._cache.has(bareFontInfo)){let readConfig=CSSBasedConfiguration._actualReadConfiguration(bareFontInfo);(readConfig.typicalHalfwidthCharacterWidth<=2||readConfig.typicalFullwidthCharacterWidth<=2||readConfig.spaceWidth<=2||readConfig.maxDigitWidth<=2)&&(
// Hey, it's Bug 14341 ... we couldn't read
readConfig=new fontInfo/* FontInfo */.pR({zoomLevel:browser/* getZoomLevel */.px(),pixelRatio:browser/* getPixelRatio */.mX(),fontFamily:readConfig.fontFamily,fontWeight:readConfig.fontWeight,fontSize:readConfig.fontSize,fontFeatureSettings:readConfig.fontFeatureSettings,lineHeight:readConfig.lineHeight,letterSpacing:readConfig.letterSpacing,isMonospace:readConfig.isMonospace,typicalHalfwidthCharacterWidth:Math.max(readConfig.typicalHalfwidthCharacterWidth,5),typicalFullwidthCharacterWidth:Math.max(readConfig.typicalFullwidthCharacterWidth,5),canUseHalfwidthRightwardsArrow:readConfig.canUseHalfwidthRightwardsArrow,spaceWidth:Math.max(readConfig.spaceWidth,5),middotWidth:Math.max(readConfig.middotWidth,5),wsmiddotWidth:Math.max(readConfig.wsmiddotWidth,5),maxDigitWidth:Math.max(readConfig.maxDigitWidth,5)},!1)),this._writeToCache(bareFontInfo,readConfig)}return this._cache.get(bareFontInfo)}static createRequest(chr,type,all,monospace){const result=new CharWidthRequest(chr,type);return all.push(result),monospace&&monospace.push(result),result}static _actualReadConfiguration(bareFontInfo){const all=[],monospace=[],typicalHalfwidthCharacter=this.createRequest("n",0/* Regular */,all,monospace),typicalFullwidthCharacter=this.createRequest("ｍ",0/* Regular */,all,null),space=this.createRequest(" ",0/* Regular */,all,monospace),digit0=this.createRequest("0",0/* Regular */,all,monospace),digit1=this.createRequest("1",0/* Regular */,all,monospace),digit2=this.createRequest("2",0/* Regular */,all,monospace),digit3=this.createRequest("3",0/* Regular */,all,monospace),digit4=this.createRequest("4",0/* Regular */,all,monospace),digit5=this.createRequest("5",0/* Regular */,all,monospace),digit6=this.createRequest("6",0/* Regular */,all,monospace),digit7=this.createRequest("7",0/* Regular */,all,monospace),digit8=this.createRequest("8",0/* Regular */,all,monospace),digit9=this.createRequest("9",0/* Regular */,all,monospace),rightwardsArrow=this.createRequest("→",0/* Regular */,all,monospace),halfwidthRightwardsArrow=this.createRequest("￫",0/* Regular */,all,null),middot=this.createRequest("·",0/* Regular */,all,monospace),wsmiddotWidth=this.createRequest(String.fromCharCode(11825),0/* Regular */,all,null),monospaceTestChars="|/-_ilm%";for(let i=0,len=monospaceTestChars.length;i<len;i++)this.createRequest(monospaceTestChars.charAt(i),0/* Regular */,all,monospace),this.createRequest(monospaceTestChars.charAt(i),1/* Italic */,all,monospace),this.createRequest(monospaceTestChars.charAt(i),2/* Bold */,all,monospace);readCharWidths(bareFontInfo,all);const maxDigitWidth=Math.max(digit0.width,digit1.width,digit2.width,digit3.width,digit4.width,digit5.width,digit6.width,digit7.width,digit8.width,digit9.width);let isMonospace=bareFontInfo.fontFeatureSettings===editorOptions/* EditorFontLigatures */.n0.OFF;const referenceWidth=monospace[0].width;for(let i=1,len=monospace.length;isMonospace&&i<len;i++){const diff=referenceWidth-monospace[i].width;if(diff<-.001||diff>.001){isMonospace=!1;break}}let canUseHalfwidthRightwardsArrow=!0;isMonospace&&halfwidthRightwardsArrow.width!==referenceWidth&&(
// using a halfwidth rightwards arrow would break monospace...
canUseHalfwidthRightwardsArrow=!1),halfwidthRightwardsArrow.width>rightwardsArrow.width&&(
// using a halfwidth rightwards arrow would paint a larger arrow than a regular rightwards arrow
canUseHalfwidthRightwardsArrow=!1);
// let's trust the zoom level only 2s after it was changed.
const canTrustBrowserZoomLevel=browser/* getTimeSinceLastZoomLevelChanged */.WP()>2e3;return new fontInfo/* FontInfo */.pR({zoomLevel:browser/* getZoomLevel */.px(),pixelRatio:browser/* getPixelRatio */.mX(),fontFamily:bareFontInfo.fontFamily,fontWeight:bareFontInfo.fontWeight,fontSize:bareFontInfo.fontSize,fontFeatureSettings:bareFontInfo.fontFeatureSettings,lineHeight:bareFontInfo.lineHeight,letterSpacing:bareFontInfo.letterSpacing,isMonospace:isMonospace,typicalHalfwidthCharacterWidth:typicalHalfwidthCharacter.width,typicalFullwidthCharacterWidth:typicalFullwidthCharacter.width,canUseHalfwidthRightwardsArrow:canUseHalfwidthRightwardsArrow,spaceWidth:space.width,middotWidth:middot.width,wsmiddotWidth:wsmiddotWidth.width,maxDigitWidth:maxDigitWidth},canTrustBrowserZoomLevel)}}CSSBasedConfiguration.INSTANCE=new CSSBasedConfiguration;class Configuration extends commonEditorConfig/* CommonEditorConfiguration */.fv{constructor(isSimpleWidget,options,referenceDomElement=null,accessibilityService){super(isSimpleWidget,options),this.accessibilityService=accessibilityService,this._elementSizeObserver=this._register(new elementSizeObserver/* ElementSizeObserver */.I(referenceDomElement,options.dimension,(()=>this._recomputeOptions()))),this._register(CSSBasedConfiguration.INSTANCE.onDidChange((()=>this._recomputeOptions()))),this._validatedOptions.get(10/* automaticLayout */)&&this._elementSizeObserver.startObserving(),this._register(browser/* onDidChangeZoomLevel */.fX((_=>this._recomputeOptions()))),this._register(this.accessibilityService.onDidChangeScreenReaderOptimized((()=>this._recomputeOptions()))),this._recomputeOptions()}static applyFontInfoSlow(domNode,fontInfo){domNode.style.fontFamily=fontInfo.getMassagedFontFamily(browser/* isSafari */.G6?editorOptions/* EDITOR_FONT_DEFAULTS */.hL.fontFamily:null),domNode.style.fontWeight=fontInfo.fontWeight,domNode.style.fontSize=fontInfo.fontSize+"px",domNode.style.fontFeatureSettings=fontInfo.fontFeatureSettings,domNode.style.lineHeight=fontInfo.lineHeight+"px",domNode.style.letterSpacing=fontInfo.letterSpacing+"px"}static applyFontInfo(domNode,fontInfo){domNode.setFontFamily(fontInfo.getMassagedFontFamily(browser/* isSafari */.G6?editorOptions/* EDITOR_FONT_DEFAULTS */.hL.fontFamily:null)),domNode.setFontWeight(fontInfo.fontWeight),domNode.setFontSize(fontInfo.fontSize),domNode.setFontFeatureSettings(fontInfo.fontFeatureSettings),domNode.setLineHeight(fontInfo.lineHeight),domNode.setLetterSpacing(fontInfo.letterSpacing)}observeReferenceElement(dimension){this._elementSizeObserver.observe(dimension)}updatePixelRatio(){this._recomputeOptions()}static _getExtraEditorClassName(){let extra="";return browser/* isSafari */.G6||browser/* isWebkitWebView */.MG||(
// Use user-select: none in all browsers except Safari and native macOS WebView
extra+="no-user-select "),browser/* isSafari */.G6&&(
// See https://github.com/microsoft/vscode/issues/108822
extra+="no-minimap-shadow "),platform/* isMacintosh */.dz&&(extra+="mac "),extra}_getEnvConfiguration(){return{extraEditorClassName:Configuration._getExtraEditorClassName(),outerWidth:this._elementSizeObserver.getWidth(),outerHeight:this._elementSizeObserver.getHeight(),emptySelectionClipboard:browser/* isWebKit */.Pf||browser/* isFirefox */.vU,pixelRatio:browser/* getPixelRatio */.mX(),zoomLevel:browser/* getZoomLevel */.px(),accessibilitySupport:this.accessibilityService.isScreenReaderOptimized()?2/* Enabled */:this.accessibilityService.getAccessibilitySupport()}}readConfiguration(bareFontInfo){return CSSBasedConfiguration.INSTANCE.readConfiguration(bareFontInfo)}}
/***/},
/***/254534:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
/* harmony export */__webpack_require__.d(__webpack_exports__,{
/* harmony export */I:function(){/* binding */return ElementSizeObserver}
/* harmony export */});
/* harmony import */var _base_common_lifecycle_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(905976);
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/class ElementSizeObserver extends _base_common_lifecycle_js__WEBPACK_IMPORTED_MODULE_0__/* .Disposable */.JT{constructor(referenceDomElement,dimension,changeCallback){super(),this.referenceDomElement=referenceDomElement,this.changeCallback=changeCallback,this.width=-1,this.height=-1,this.resizeObserver=null,this.measureReferenceDomElementToken=-1,this.measureReferenceDomElement(!1,dimension)}dispose(){this.stopObserving(),super.dispose()}getWidth(){return this.width}getHeight(){return this.height}startObserving(){"undefined"!==typeof ResizeObserver?!this.resizeObserver&&this.referenceDomElement&&(this.resizeObserver=new ResizeObserver((entries=>{entries&&entries[0]&&entries[0].contentRect?this.observe({width:entries[0].contentRect.width,height:entries[0].contentRect.height}):this.observe()})),this.resizeObserver.observe(this.referenceDomElement)):-1===this.measureReferenceDomElementToken&&(
// setInterval type defaults to NodeJS.Timeout instead of number, so specify it as a number
this.measureReferenceDomElementToken=setInterval((()=>this.observe()),100))}stopObserving(){this.resizeObserver&&(this.resizeObserver.disconnect(),this.resizeObserver=null),-1!==this.measureReferenceDomElementToken&&(clearInterval(this.measureReferenceDomElementToken),this.measureReferenceDomElementToken=-1)}observe(dimension){this.measureReferenceDomElement(!0,dimension)}measureReferenceDomElement(callChangeCallback,dimension){let observedWidth=0,observedHeight=0;dimension?(observedWidth=dimension.width,observedHeight=dimension.height):this.referenceDomElement&&(observedWidth=this.referenceDomElement.clientWidth,observedHeight=this.referenceDomElement.clientHeight),observedWidth=Math.max(5,observedWidth),observedHeight=Math.max(5,observedHeight),this.width===observedWidth&&this.height===observedHeight||(this.width=observedWidth,this.height=observedHeight,callChangeCallback&&this.changeCallback())}}
/***/},
/***/971513:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
/* harmony export */__webpack_require__.d(__webpack_exports__,{
/* harmony export */Ox:function(){/* binding */return CoreNavigationCommands},
/* harmony export */wk:function(){/* binding */return CoreEditingCommands}
/* harmony export */});
/* unused harmony exports CoreEditorCommand, EditorScroll_, RevealLine_ */
/* harmony import */var _nls_js__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(663580),_base_browser_browser_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(730747),_base_common_types_js__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(998401),_base_browser_ui_aria_aria_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(585152),_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(616830),_services_codeEditorService_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(611640),_common_controller_cursorColumnSelection_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(172792),_common_controller_cursorCommon_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(533181),_common_controller_cursorDeleteOperations_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(531380),_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(183814),_common_controller_cursorTypeOperations_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(840419),_common_core_position_js__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(50187),_common_core_range_js__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__(624314),_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(29102),_platform_contextkey_common_contextkey_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(938819),_platform_keybinding_common_keybindingsRegistry_js__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(49989);
/* harmony import */
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
const CORE_WEIGHT=0/* EditorCore */;class CoreEditorCommand extends _editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .EditorCommand */._l{runEditorCommand(accessor,editor,args){const viewModel=editor._getViewModel();viewModel&&this.runCoreEditorCommand(viewModel,args||{})}}var EditorScroll_,RevealLine_,CoreNavigationCommands;(function(EditorScroll_){const isEditorScrollArgs=function(arg){if(!_base_common_types_js__WEBPACK_IMPORTED_MODULE_12__/* .isObject */.Kn(arg))return!1;const scrollArg=arg;return!!_base_common_types_js__WEBPACK_IMPORTED_MODULE_12__/* .isString */.HD(scrollArg.to)&&(!(!_base_common_types_js__WEBPACK_IMPORTED_MODULE_12__/* .isUndefined */.o8(scrollArg.by)&&!_base_common_types_js__WEBPACK_IMPORTED_MODULE_12__/* .isString */.HD(scrollArg.by))&&(!(!_base_common_types_js__WEBPACK_IMPORTED_MODULE_12__/* .isUndefined */.o8(scrollArg.value)&&!_base_common_types_js__WEBPACK_IMPORTED_MODULE_12__/* .isNumber */.hj(scrollArg.value))&&!(!_base_common_types_js__WEBPACK_IMPORTED_MODULE_12__/* .isUndefined */.o8(scrollArg.revealCursor)&&!_base_common_types_js__WEBPACK_IMPORTED_MODULE_12__/* .isBoolean */.jn(scrollArg.revealCursor))))};function parse(args){let direction,unit;switch(args.to){case EditorScroll_.RawDirection.Up:direction=1/* Up */;break;case EditorScroll_.RawDirection.Down:direction=2/* Down */;break;default:
// Illegal arguments
return null}switch(args.by){case EditorScroll_.RawUnit.Line:unit=1/* Line */;break;case EditorScroll_.RawUnit.WrappedLine:unit=2/* WrappedLine */;break;case EditorScroll_.RawUnit.Page:unit=3/* Page */;break;case EditorScroll_.RawUnit.HalfPage:unit=4/* HalfPage */;break;default:unit=2/* WrappedLine */}const value=Math.floor(args.value||1),revealCursor=!!args.revealCursor;return{direction:direction,unit:unit,value:value,revealCursor:revealCursor,select:!!args.select}}EditorScroll_.description={description:"Scroll editor in the given direction",args:[{name:"Editor scroll argument object",description:"Property-value pairs that can be passed through this argument:\n\t\t\t\t\t* 'to': A mandatory direction value.\n\t\t\t\t\t\t```\n\t\t\t\t\t\t'up', 'down'\n\t\t\t\t\t\t```\n\t\t\t\t\t* 'by': Unit to move. Default is computed based on 'to' value.\n\t\t\t\t\t\t```\n\t\t\t\t\t\t'line', 'wrappedLine', 'page', 'halfPage'\n\t\t\t\t\t\t```\n\t\t\t\t\t* 'value': Number of units to move. Default is '1'.\n\t\t\t\t\t* 'revealCursor': If 'true' reveals the cursor if it is outside view port.\n\t\t\t\t",constraint:isEditorScrollArgs,schema:{type:"object",required:["to"],properties:{to:{type:"string",enum:["up","down"]},by:{type:"string",enum:["line","wrappedLine","page","halfPage"]},value:{type:"number",default:1},revealCursor:{type:"boolean"}}}}]},
/**
     * Directions in the view for editor scroll command.
     */
EditorScroll_.RawDirection={Up:"up",Down:"down"},
/**
     * Units for editor scroll 'by' argument
     */
EditorScroll_.RawUnit={Line:"line",WrappedLine:"wrappedLine",Page:"page",HalfPage:"halfPage"},EditorScroll_.parse=parse})(EditorScroll_||(EditorScroll_={})),function(RevealLine_){const isRevealLineArgs=function(arg){if(!_base_common_types_js__WEBPACK_IMPORTED_MODULE_12__/* .isObject */.Kn(arg))return!1;const reveaLineArg=arg;return!(!_base_common_types_js__WEBPACK_IMPORTED_MODULE_12__/* .isNumber */.hj(reveaLineArg.lineNumber)&&!_base_common_types_js__WEBPACK_IMPORTED_MODULE_12__/* .isString */.HD(reveaLineArg.lineNumber))&&!(!_base_common_types_js__WEBPACK_IMPORTED_MODULE_12__/* .isUndefined */.o8(reveaLineArg.at)&&!_base_common_types_js__WEBPACK_IMPORTED_MODULE_12__/* .isString */.HD(reveaLineArg.at))};RevealLine_.description={description:"Reveal the given line at the given logical position",args:[{name:"Reveal line argument object",description:"Property-value pairs that can be passed through this argument:\n\t\t\t\t\t* 'lineNumber': A mandatory line number value.\n\t\t\t\t\t* 'at': Logical position at which line has to be revealed.\n\t\t\t\t\t\t```\n\t\t\t\t\t\t'top', 'center', 'bottom'\n\t\t\t\t\t\t```\n\t\t\t\t",constraint:isRevealLineArgs,schema:{type:"object",required:["lineNumber"],properties:{lineNumber:{type:["number","string"]},at:{type:"string",enum:["top","center","bottom"]}}}}]},
/**
     * Values for reveal line 'at' argument
     */
RevealLine_.RawAtArgument={Top:"top",Center:"center",Bottom:"bottom"}}(RevealLine_||(RevealLine_={}));class EditorOrNativeTextInputCommand{constructor(target){
// 1. handle case when focus is in editor.
target.addImplementation(1e4,"code-editor",((accessor,args)=>{
// Only if editor text focus (i.e. not if editor has widget focus).
const focusedEditor=accessor.get(_services_codeEditorService_js__WEBPACK_IMPORTED_MODULE_3__/* .ICodeEditorService */.$).getFocusedCodeEditor();return!(!focusedEditor||!focusedEditor.hasTextFocus())&&this._runEditorCommand(accessor,focusedEditor,args)})),
// 2. handle case when focus is in some other `input` / `textarea`.
target.addImplementation(1e3,"generic-dom-input-textarea",((accessor,args)=>{
// Only if focused on an element that allows for entering text
const activeElement=document.activeElement;return!!(activeElement&&["input","textarea"].indexOf(activeElement.tagName.toLowerCase())>=0)&&(this.runDOMCommand(),!0)})),
// 3. (default) handle case when focus is somewhere else.
target.addImplementation(0,"generic-dom",((accessor,args)=>{
// Redirecting to active editor
const activeEditor=accessor.get(_services_codeEditorService_js__WEBPACK_IMPORTED_MODULE_3__/* .ICodeEditorService */.$).getActiveCodeEditor();return!!activeEditor&&(activeEditor.focus(),this._runEditorCommand(accessor,activeEditor,args))}))}_runEditorCommand(accessor,editor,args){const result=this.runEditorCommand(accessor,editor,args);return result||!0}}(function(CoreNavigationCommands){class BaseMoveToCommand extends CoreEditorCommand{constructor(opts){super(opts),this._inSelectionMode=opts.inSelectionMode}runCoreEditorCommand(viewModel,args){viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,[_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.moveTo(viewModel,viewModel.getPrimaryCursorState(),this._inSelectionMode,args.position,args.viewPosition)]),viewModel.revealPrimaryCursor(args.source,!0)}}CoreNavigationCommands.MoveTo=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new BaseMoveToCommand({id:"_moveTo",inSelectionMode:!1,precondition:void 0})),CoreNavigationCommands.MoveToSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new BaseMoveToCommand({id:"_moveToSelect",inSelectionMode:!0,precondition:void 0}));class ColumnSelectCommand extends CoreEditorCommand{runCoreEditorCommand(viewModel,args){viewModel.model.pushStackElement();const result=this._getColumnSelectResult(viewModel,viewModel.getPrimaryCursorState(),viewModel.getCursorColumnSelectData(),args);viewModel.setCursorStates(args.source,3/* Explicit */,result.viewStates.map((viewState=>_common_controller_cursorCommon_js__WEBPACK_IMPORTED_MODULE_5__/* .CursorState */.Vi.fromViewState(viewState)))),viewModel.setCursorColumnSelectData({isReal:!0,fromViewLineNumber:result.fromLineNumber,fromViewVisualColumn:result.fromVisualColumn,toViewLineNumber:result.toLineNumber,toViewVisualColumn:result.toVisualColumn}),result.reversed?viewModel.revealTopMostCursor(args.source):viewModel.revealBottomMostCursor(args.source)}}CoreNavigationCommands.ColumnSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends ColumnSelectCommand{constructor(){super({id:"columnSelect",precondition:void 0})}_getColumnSelectResult(viewModel,primary,prevColumnSelectData,args){
// validate `args`
const validatedPosition=viewModel.model.validatePosition(args.position),validatedViewPosition=viewModel.coordinatesConverter.validateViewPosition(new _common_core_position_js__WEBPACK_IMPORTED_MODULE_13__/* .Position */.L(args.viewPosition.lineNumber,args.viewPosition.column),validatedPosition);let fromViewLineNumber=args.doColumnSelect?prevColumnSelectData.fromViewLineNumber:validatedViewPosition.lineNumber,fromViewVisualColumn=args.doColumnSelect?prevColumnSelectData.fromViewVisualColumn:args.mouseColumn-1;return _common_controller_cursorColumnSelection_js__WEBPACK_IMPORTED_MODULE_4__/* .ColumnSelection */.U.columnSelect(viewModel.cursorConfig,viewModel,fromViewLineNumber,fromViewVisualColumn,validatedViewPosition.lineNumber,args.mouseColumn-1)}}),CoreNavigationCommands.CursorColumnSelectLeft=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends ColumnSelectCommand{constructor(){super({id:"cursorColumnSelectLeft",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:3599/* LeftArrow */,linux:{primary:0}}})}_getColumnSelectResult(viewModel,primary,prevColumnSelectData,args){return _common_controller_cursorColumnSelection_js__WEBPACK_IMPORTED_MODULE_4__/* .ColumnSelection */.U.columnSelectLeft(viewModel.cursorConfig,viewModel,prevColumnSelectData)}}),CoreNavigationCommands.CursorColumnSelectRight=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends ColumnSelectCommand{constructor(){super({id:"cursorColumnSelectRight",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:3601/* RightArrow */,linux:{primary:0}}})}_getColumnSelectResult(viewModel,primary,prevColumnSelectData,args){return _common_controller_cursorColumnSelection_js__WEBPACK_IMPORTED_MODULE_4__/* .ColumnSelection */.U.columnSelectRight(viewModel.cursorConfig,viewModel,prevColumnSelectData)}});class ColumnSelectUpCommand extends ColumnSelectCommand{constructor(opts){super(opts),this._isPaged=opts.isPaged}_getColumnSelectResult(viewModel,primary,prevColumnSelectData,args){return _common_controller_cursorColumnSelection_js__WEBPACK_IMPORTED_MODULE_4__/* .ColumnSelection */.U.columnSelectUp(viewModel.cursorConfig,viewModel,prevColumnSelectData,this._isPaged)}}CoreNavigationCommands.CursorColumnSelectUp=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new ColumnSelectUpCommand({isPaged:!1,id:"cursorColumnSelectUp",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:3600/* UpArrow */,linux:{primary:0}}})),CoreNavigationCommands.CursorColumnSelectPageUp=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new ColumnSelectUpCommand({isPaged:!0,id:"cursorColumnSelectPageUp",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:3595/* PageUp */,linux:{primary:0}}}));class ColumnSelectDownCommand extends ColumnSelectCommand{constructor(opts){super(opts),this._isPaged=opts.isPaged}_getColumnSelectResult(viewModel,primary,prevColumnSelectData,args){return _common_controller_cursorColumnSelection_js__WEBPACK_IMPORTED_MODULE_4__/* .ColumnSelection */.U.columnSelectDown(viewModel.cursorConfig,viewModel,prevColumnSelectData,this._isPaged)}}CoreNavigationCommands.CursorColumnSelectDown=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new ColumnSelectDownCommand({isPaged:!1,id:"cursorColumnSelectDown",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:3602/* DownArrow */,linux:{primary:0}}})),CoreNavigationCommands.CursorColumnSelectPageDown=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new ColumnSelectDownCommand({isPaged:!0,id:"cursorColumnSelectPageDown",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:3596/* PageDown */,linux:{primary:0}}}));class CursorMoveImpl extends CoreEditorCommand{constructor(){super({id:"cursorMove",precondition:void 0,description:_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMove */.N.description})}runCoreEditorCommand(viewModel,args){const parsed=_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMove */.N.parse(args);parsed&&this._runCursorMove(viewModel,args.source,parsed)}_runCursorMove(viewModel,source,args){viewModel.model.pushStackElement(),viewModel.setCursorStates(source,3/* Explicit */,CursorMoveImpl._move(viewModel,viewModel.getCursorStates(),args)),viewModel.revealPrimaryCursor(source,!0)}static _move(viewModel,cursors,args){const inSelectionMode=args.select,value=args.value;switch(args.direction){case 0/* Left */:case 1/* Right */:case 2/* Up */:case 3/* Down */:case 4/* PrevBlankLine */:case 5/* NextBlankLine */:case 6/* WrappedLineStart */:case 7/* WrappedLineFirstNonWhitespaceCharacter */:case 8/* WrappedLineColumnCenter */:case 9/* WrappedLineEnd */:case 10/* WrappedLineLastNonWhitespaceCharacter */:return _common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.simpleMove(viewModel,cursors,args.direction,inSelectionMode,value,args.unit);case 11/* ViewPortTop */:case 13/* ViewPortBottom */:case 12/* ViewPortCenter */:case 14/* ViewPortIfOutside */:return _common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.viewportMove(viewModel,cursors,args.direction,inSelectionMode,value);default:return null}}}CoreNavigationCommands.CursorMoveImpl=CursorMoveImpl,CoreNavigationCommands.CursorMove=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new CursorMoveImpl);class CursorMoveBasedCommand extends CoreEditorCommand{constructor(opts){super(opts),this._staticArgs=opts.args}runCoreEditorCommand(viewModel,dynamicArgs){let args=this._staticArgs;-1/* PAGE_SIZE_MARKER */===this._staticArgs.value&&(
// -1 is a marker for page size
args={direction:this._staticArgs.direction,unit:this._staticArgs.unit,select:this._staticArgs.select,value:viewModel.cursorConfig.pageSize}),viewModel.model.pushStackElement(),viewModel.setCursorStates(dynamicArgs.source,3/* Explicit */,_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.simpleMove(viewModel,viewModel.getCursorStates(),args.direction,args.select,args.value,args.unit)),viewModel.revealPrimaryCursor(dynamicArgs.source,!0)}}CoreNavigationCommands.CursorLeft=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new CursorMoveBasedCommand({args:{direction:0/* Left */,unit:0/* None */,select:!1,value:1},id:"cursorLeft",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:15/* LeftArrow */,mac:{primary:15/* LeftArrow */,secondary:[288/* KeyB */]}}})),CoreNavigationCommands.CursorLeftSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new CursorMoveBasedCommand({args:{direction:0/* Left */,unit:0/* None */,select:!0,value:1},id:"cursorLeftSelect",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:1039/* LeftArrow */}})),CoreNavigationCommands.CursorRight=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new CursorMoveBasedCommand({args:{direction:1/* Right */,unit:0/* None */,select:!1,value:1},id:"cursorRight",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:17/* RightArrow */,mac:{primary:17/* RightArrow */,secondary:[292/* KeyF */]}}})),CoreNavigationCommands.CursorRightSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new CursorMoveBasedCommand({args:{direction:1/* Right */,unit:0/* None */,select:!0,value:1},id:"cursorRightSelect",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:1041/* RightArrow */}})),CoreNavigationCommands.CursorUp=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new CursorMoveBasedCommand({args:{direction:2/* Up */,unit:2/* WrappedLine */,select:!1,value:1},id:"cursorUp",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:16/* UpArrow */,mac:{primary:16/* UpArrow */,secondary:[302/* KeyP */]}}})),CoreNavigationCommands.CursorUpSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new CursorMoveBasedCommand({args:{direction:2/* Up */,unit:2/* WrappedLine */,select:!0,value:1},id:"cursorUpSelect",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:1040/* UpArrow */,secondary:[3088/* UpArrow */],mac:{primary:1040/* UpArrow */},linux:{primary:1040/* UpArrow */}}})),CoreNavigationCommands.CursorPageUp=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new CursorMoveBasedCommand({args:{direction:2/* Up */,unit:2/* WrappedLine */,select:!1,value:-1/* PAGE_SIZE_MARKER */},id:"cursorPageUp",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:11/* PageUp */}})),CoreNavigationCommands.CursorPageUpSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new CursorMoveBasedCommand({args:{direction:2/* Up */,unit:2/* WrappedLine */,select:!0,value:-1/* PAGE_SIZE_MARKER */},id:"cursorPageUpSelect",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:1035/* PageUp */}})),CoreNavigationCommands.CursorDown=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new CursorMoveBasedCommand({args:{direction:3/* Down */,unit:2/* WrappedLine */,select:!1,value:1},id:"cursorDown",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:18/* DownArrow */,mac:{primary:18/* DownArrow */,secondary:[300/* KeyN */]}}})),CoreNavigationCommands.CursorDownSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new CursorMoveBasedCommand({args:{direction:3/* Down */,unit:2/* WrappedLine */,select:!0,value:1},id:"cursorDownSelect",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:1042/* DownArrow */,secondary:[3090/* DownArrow */],mac:{primary:1042/* DownArrow */},linux:{primary:1042/* DownArrow */}}})),CoreNavigationCommands.CursorPageDown=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new CursorMoveBasedCommand({args:{direction:3/* Down */,unit:2/* WrappedLine */,select:!1,value:-1/* PAGE_SIZE_MARKER */},id:"cursorPageDown",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:12/* PageDown */}})),CoreNavigationCommands.CursorPageDownSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new CursorMoveBasedCommand({args:{direction:3/* Down */,unit:2/* WrappedLine */,select:!0,value:-1/* PAGE_SIZE_MARKER */},id:"cursorPageDownSelect",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:1036/* PageDown */}})),CoreNavigationCommands.CreateCursor=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditorCommand{constructor(){super({id:"createCursor",precondition:void 0})}runCoreEditorCommand(viewModel,args){let newState;newState=args.wholeLine?_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.line(viewModel,viewModel.getPrimaryCursorState(),!1,args.position,args.viewPosition):_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.moveTo(viewModel,viewModel.getPrimaryCursorState(),!1,args.position,args.viewPosition);const states=viewModel.getCursorStates();
// Check if we should remove a cursor (sort of like a toggle)
if(states.length>1){const newModelPosition=newState.modelState?newState.modelState.position:null,newViewPosition=newState.viewState?newState.viewState.position:null;for(let i=0,len=states.length;i<len;i++){const state=states[i];if((!newModelPosition||state.modelState.selection.containsPosition(newModelPosition))&&(!newViewPosition||state.viewState.selection.containsPosition(newViewPosition)))
// => Remove the cursor
return states.splice(i,1),viewModel.model.pushStackElement(),void viewModel.setCursorStates(args.source,3/* Explicit */,states)}}
// => Add the new cursor
states.push(newState),viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,states)}}),CoreNavigationCommands.LastCursorMoveToSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditorCommand{constructor(){super({id:"_lastCursorMoveToSelect",precondition:void 0})}runCoreEditorCommand(viewModel,args){const lastAddedCursorIndex=viewModel.getLastAddedCursorIndex(),states=viewModel.getCursorStates(),newStates=states.slice(0);newStates[lastAddedCursorIndex]=_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.moveTo(viewModel,states[lastAddedCursorIndex],!0,args.position,args.viewPosition),viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,newStates)}});class HomeCommand extends CoreEditorCommand{constructor(opts){super(opts),this._inSelectionMode=opts.inSelectionMode}runCoreEditorCommand(viewModel,args){viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.moveToBeginningOfLine(viewModel,viewModel.getCursorStates(),this._inSelectionMode)),viewModel.revealPrimaryCursor(args.source,!0)}}CoreNavigationCommands.CursorHome=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new HomeCommand({inSelectionMode:!1,id:"cursorHome",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:14/* Home */,mac:{primary:14/* Home */,secondary:[2063/* LeftArrow */]}}})),CoreNavigationCommands.CursorHomeSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new HomeCommand({inSelectionMode:!0,id:"cursorHomeSelect",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:1038/* Home */,mac:{primary:1038/* Home */,secondary:[3087/* LeftArrow */]}}}));class LineStartCommand extends CoreEditorCommand{constructor(opts){super(opts),this._inSelectionMode=opts.inSelectionMode}runCoreEditorCommand(viewModel,args){viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,this._exec(viewModel.getCursorStates())),viewModel.revealPrimaryCursor(args.source,!0)}_exec(cursors){const result=[];for(let i=0,len=cursors.length;i<len;i++){const cursor=cursors[i],lineNumber=cursor.modelState.position.lineNumber;result[i]=_common_controller_cursorCommon_js__WEBPACK_IMPORTED_MODULE_5__/* .CursorState */.Vi.fromModelState(cursor.modelState.move(this._inSelectionMode,lineNumber,1,0))}return result}}CoreNavigationCommands.CursorLineStart=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new LineStartCommand({inSelectionMode:!1,id:"cursorLineStart",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:0,mac:{primary:287/* KeyA */}}})),CoreNavigationCommands.CursorLineStartSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new LineStartCommand({inSelectionMode:!0,id:"cursorLineStartSelect",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:0,mac:{primary:1311/* KeyA */}}}));class EndCommand extends CoreEditorCommand{constructor(opts){super(opts),this._inSelectionMode=opts.inSelectionMode}runCoreEditorCommand(viewModel,args){viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.moveToEndOfLine(viewModel,viewModel.getCursorStates(),this._inSelectionMode,args.sticky||!1)),viewModel.revealPrimaryCursor(args.source,!0)}}CoreNavigationCommands.CursorEnd=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new EndCommand({inSelectionMode:!1,id:"cursorEnd",precondition:void 0,kbOpts:{args:{sticky:!1},weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:13/* End */,mac:{primary:13/* End */,secondary:[2065/* RightArrow */]}},description:{description:"Go to End",args:[{name:"args",schema:{type:"object",properties:{sticky:{description:_nls_js__WEBPACK_IMPORTED_MODULE_14__/* .localize */.N("stickydesc","Stick to the end even when going to longer lines"),type:"boolean",default:!1}}}}]}})),CoreNavigationCommands.CursorEndSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new EndCommand({inSelectionMode:!0,id:"cursorEndSelect",precondition:void 0,kbOpts:{args:{sticky:!1},weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:1037/* End */,mac:{primary:1037/* End */,secondary:[3089/* RightArrow */]}},description:{description:"Select to End",args:[{name:"args",schema:{type:"object",properties:{sticky:{description:_nls_js__WEBPACK_IMPORTED_MODULE_14__/* .localize */.N("stickydesc","Stick to the end even when going to longer lines"),type:"boolean",default:!1}}}}]}}));class LineEndCommand extends CoreEditorCommand{constructor(opts){super(opts),this._inSelectionMode=opts.inSelectionMode}runCoreEditorCommand(viewModel,args){viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,this._exec(viewModel,viewModel.getCursorStates())),viewModel.revealPrimaryCursor(args.source,!0)}_exec(viewModel,cursors){const result=[];for(let i=0,len=cursors.length;i<len;i++){const cursor=cursors[i],lineNumber=cursor.modelState.position.lineNumber,maxColumn=viewModel.model.getLineMaxColumn(lineNumber);result[i]=_common_controller_cursorCommon_js__WEBPACK_IMPORTED_MODULE_5__/* .CursorState */.Vi.fromModelState(cursor.modelState.move(this._inSelectionMode,lineNumber,maxColumn,0))}return result}}CoreNavigationCommands.CursorLineEnd=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new LineEndCommand({inSelectionMode:!1,id:"cursorLineEnd",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:0,mac:{primary:291/* KeyE */}}})),CoreNavigationCommands.CursorLineEndSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new LineEndCommand({inSelectionMode:!0,id:"cursorLineEndSelect",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:0,mac:{primary:1315/* KeyE */}}}));class TopCommand extends CoreEditorCommand{constructor(opts){super(opts),this._inSelectionMode=opts.inSelectionMode}runCoreEditorCommand(viewModel,args){viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.moveToBeginningOfBuffer(viewModel,viewModel.getCursorStates(),this._inSelectionMode)),viewModel.revealPrimaryCursor(args.source,!0)}}CoreNavigationCommands.CursorTop=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new TopCommand({inSelectionMode:!1,id:"cursorTop",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:2062/* Home */,mac:{primary:2064/* UpArrow */}}})),CoreNavigationCommands.CursorTopSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new TopCommand({inSelectionMode:!0,id:"cursorTopSelect",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:3086/* Home */,mac:{primary:3088/* UpArrow */}}}));class BottomCommand extends CoreEditorCommand{constructor(opts){super(opts),this._inSelectionMode=opts.inSelectionMode}runCoreEditorCommand(viewModel,args){viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.moveToEndOfBuffer(viewModel,viewModel.getCursorStates(),this._inSelectionMode)),viewModel.revealPrimaryCursor(args.source,!0)}}CoreNavigationCommands.CursorBottom=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new BottomCommand({inSelectionMode:!1,id:"cursorBottom",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:2061/* End */,mac:{primary:2066/* DownArrow */}}})),CoreNavigationCommands.CursorBottomSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new BottomCommand({inSelectionMode:!0,id:"cursorBottomSelect",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:3085/* End */,mac:{primary:3090/* DownArrow */}}}));class EditorScrollImpl extends CoreEditorCommand{constructor(){super({id:"editorScroll",precondition:void 0,description:EditorScroll_.description})}runCoreEditorCommand(viewModel,args){const parsed=EditorScroll_.parse(args);parsed&&this._runEditorScroll(viewModel,args.source,parsed)}_runEditorScroll(viewModel,source,args){const desiredScrollTop=this._computeDesiredScrollTop(viewModel,args);if(args.revealCursor){
// must ensure cursor is in new visible range
const desiredVisibleViewRange=viewModel.getCompletelyVisibleViewRangeAtScrollTop(desiredScrollTop);viewModel.setCursorStates(source,3/* Explicit */,[_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.findPositionInViewportIfOutside(viewModel,viewModel.getPrimaryCursorState(),desiredVisibleViewRange,args.select)])}viewModel.setScrollTop(desiredScrollTop,0/* Smooth */)}_computeDesiredScrollTop(viewModel,args){if(1/* Line */===args.unit){
// scrolling by model lines
const visibleViewRange=viewModel.getCompletelyVisibleViewRange(),visibleModelRange=viewModel.coordinatesConverter.convertViewRangeToModelRange(visibleViewRange);let desiredTopModelLineNumber;
// must go x model lines up
desiredTopModelLineNumber=1/* Up */===args.direction?Math.max(1,visibleModelRange.startLineNumber-args.value):Math.min(viewModel.model.getLineCount(),visibleModelRange.startLineNumber+args.value);const viewPosition=viewModel.coordinatesConverter.convertModelPositionToViewPosition(new _common_core_position_js__WEBPACK_IMPORTED_MODULE_13__/* .Position */.L(desiredTopModelLineNumber,1));return viewModel.getVerticalOffsetForLineNumber(viewPosition.lineNumber)}let noOfLines;noOfLines=3/* Page */===args.unit?viewModel.cursorConfig.pageSize*args.value:4/* HalfPage */===args.unit?Math.round(viewModel.cursorConfig.pageSize/2)*args.value:args.value;const deltaLines=(1/* Up */===args.direction?-1:1)*noOfLines;return viewModel.getScrollTop()+deltaLines*viewModel.cursorConfig.lineHeight}}CoreNavigationCommands.EditorScrollImpl=EditorScrollImpl,CoreNavigationCommands.EditorScroll=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new EditorScrollImpl),CoreNavigationCommands.ScrollLineUp=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditorCommand{constructor(){super({id:"scrollLineUp",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:2064/* UpArrow */,mac:{primary:267/* PageUp */}}})}runCoreEditorCommand(viewModel,args){CoreNavigationCommands.EditorScroll._runEditorScroll(viewModel,args.source,{direction:1/* Up */,unit:2/* WrappedLine */,value:1,revealCursor:!1,select:!1})}}),CoreNavigationCommands.ScrollPageUp=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditorCommand{constructor(){super({id:"scrollPageUp",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:2059/* PageUp */,win:{primary:523/* PageUp */},linux:{primary:523/* PageUp */}}})}runCoreEditorCommand(viewModel,args){CoreNavigationCommands.EditorScroll._runEditorScroll(viewModel,args.source,{direction:1/* Up */,unit:3/* Page */,value:1,revealCursor:!1,select:!1})}}),CoreNavigationCommands.ScrollLineDown=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditorCommand{constructor(){super({id:"scrollLineDown",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:2066/* DownArrow */,mac:{primary:268/* PageDown */}}})}runCoreEditorCommand(viewModel,args){CoreNavigationCommands.EditorScroll._runEditorScroll(viewModel,args.source,{direction:2/* Down */,unit:2/* WrappedLine */,value:1,revealCursor:!1,select:!1})}}),CoreNavigationCommands.ScrollPageDown=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditorCommand{constructor(){super({id:"scrollPageDown",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:2060/* PageDown */,win:{primary:524/* PageDown */},linux:{primary:524/* PageDown */}}})}runCoreEditorCommand(viewModel,args){CoreNavigationCommands.EditorScroll._runEditorScroll(viewModel,args.source,{direction:2/* Down */,unit:3/* Page */,value:1,revealCursor:!1,select:!1})}});class WordCommand extends CoreEditorCommand{constructor(opts){super(opts),this._inSelectionMode=opts.inSelectionMode}runCoreEditorCommand(viewModel,args){viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,[_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.word(viewModel,viewModel.getPrimaryCursorState(),this._inSelectionMode,args.position)]),viewModel.revealPrimaryCursor(args.source,!0)}}CoreNavigationCommands.WordSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new WordCommand({inSelectionMode:!1,id:"_wordSelect",precondition:void 0})),CoreNavigationCommands.WordSelectDrag=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new WordCommand({inSelectionMode:!0,id:"_wordSelectDrag",precondition:void 0})),CoreNavigationCommands.LastCursorWordSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditorCommand{constructor(){super({id:"lastCursorWordSelect",precondition:void 0})}runCoreEditorCommand(viewModel,args){const lastAddedCursorIndex=viewModel.getLastAddedCursorIndex(),states=viewModel.getCursorStates(),newStates=states.slice(0),lastAddedState=states[lastAddedCursorIndex];newStates[lastAddedCursorIndex]=_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.word(viewModel,lastAddedState,lastAddedState.modelState.hasSelection(),args.position),viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,newStates)}});class LineCommand extends CoreEditorCommand{constructor(opts){super(opts),this._inSelectionMode=opts.inSelectionMode}runCoreEditorCommand(viewModel,args){viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,[_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.line(viewModel,viewModel.getPrimaryCursorState(),this._inSelectionMode,args.position,args.viewPosition)]),viewModel.revealPrimaryCursor(args.source,!1)}}CoreNavigationCommands.LineSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new LineCommand({inSelectionMode:!1,id:"_lineSelect",precondition:void 0})),CoreNavigationCommands.LineSelectDrag=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new LineCommand({inSelectionMode:!0,id:"_lineSelectDrag",precondition:void 0}));class LastCursorLineCommand extends CoreEditorCommand{constructor(opts){super(opts),this._inSelectionMode=opts.inSelectionMode}runCoreEditorCommand(viewModel,args){const lastAddedCursorIndex=viewModel.getLastAddedCursorIndex(),states=viewModel.getCursorStates(),newStates=states.slice(0);newStates[lastAddedCursorIndex]=_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.line(viewModel,states[lastAddedCursorIndex],this._inSelectionMode,args.position,args.viewPosition),viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,newStates)}}CoreNavigationCommands.LastCursorLineSelect=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new LastCursorLineCommand({inSelectionMode:!1,id:"lastCursorLineSelect",precondition:void 0})),CoreNavigationCommands.LastCursorLineSelectDrag=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new LastCursorLineCommand({inSelectionMode:!0,id:"lastCursorLineSelectDrag",precondition:void 0})),CoreNavigationCommands.ExpandLineSelection=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditorCommand{constructor(){super({id:"expandLineSelection",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:2090/* KeyL */}})}runCoreEditorCommand(viewModel,args){viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.expandLineSelection(viewModel,viewModel.getCursorStates())),viewModel.revealPrimaryCursor(args.source,!0)}}),CoreNavigationCommands.CancelSelection=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditorCommand{constructor(){super({id:"cancelSelection",precondition:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.hasNonEmptySelection,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:9/* Escape */,secondary:[1033/* Escape */]}})}runCoreEditorCommand(viewModel,args){viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,[_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.cancelSelection(viewModel,viewModel.getPrimaryCursorState())]),viewModel.revealPrimaryCursor(args.source,!0)}}),CoreNavigationCommands.RemoveSecondaryCursors=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditorCommand{constructor(){super({id:"removeSecondaryCursors",precondition:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.hasMultipleSelections,kbOpts:{weight:CORE_WEIGHT+1,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:9/* Escape */,secondary:[1033/* Escape */]}})}runCoreEditorCommand(viewModel,args){viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,[viewModel.getPrimaryCursorState()]),viewModel.revealPrimaryCursor(args.source,!0),(0,_base_browser_ui_aria_aria_js__WEBPACK_IMPORTED_MODULE_1__/* .status */.i7)(_nls_js__WEBPACK_IMPORTED_MODULE_14__/* .localize */.N("removedCursor","Removed secondary cursors"))}}),CoreNavigationCommands.RevealLine=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditorCommand{constructor(){super({id:"revealLine",precondition:void 0,description:RevealLine_.description})}runCoreEditorCommand(viewModel,args){const revealLineArg=args,lineNumberArg=revealLineArg.lineNumber||0;let lineNumber="number"===typeof lineNumberArg?lineNumberArg+1:parseInt(lineNumberArg)+1;lineNumber<1&&(lineNumber=1);const lineCount=viewModel.model.getLineCount();lineNumber>lineCount&&(lineNumber=lineCount);const range=new _common_core_range_js__WEBPACK_IMPORTED_MODULE_15__/* .Range */.e(lineNumber,1,lineNumber,viewModel.model.getLineMaxColumn(lineNumber));let revealAt=0/* Simple */;if(revealLineArg.at)switch(revealLineArg.at){case RevealLine_.RawAtArgument.Top:revealAt=3/* Top */;break;case RevealLine_.RawAtArgument.Center:revealAt=1/* Center */;break;case RevealLine_.RawAtArgument.Bottom:revealAt=4/* Bottom */;break;default:break}const viewRange=viewModel.coordinatesConverter.convertModelRangeToViewRange(range);viewModel.revealRange(args.source,!1,viewRange,revealAt,0/* Smooth */)}}),CoreNavigationCommands.SelectAll=new class extends EditorOrNativeTextInputCommand{constructor(){super(_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .SelectAllCommand */.Sq)}runDOMCommand(){_base_browser_browser_js__WEBPACK_IMPORTED_MODULE_0__/* .isFirefox */.vU&&(document.activeElement.focus(),document.activeElement.select()),document.execCommand("selectAll")}runEditorCommand(accessor,editor,args){const viewModel=editor._getViewModel();viewModel&&this.runCoreEditorCommand(viewModel,args)}runCoreEditorCommand(viewModel,args){viewModel.model.pushStackElement(),viewModel.setCursorStates("keyboard",3/* Explicit */,[_common_controller_cursorMoveCommands_js__WEBPACK_IMPORTED_MODULE_7__/* .CursorMoveCommands */.P.selectAll(viewModel,viewModel.getPrimaryCursorState())])}},CoreNavigationCommands.SetSelection=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditorCommand{constructor(){super({id:"setSelection",precondition:void 0})}runCoreEditorCommand(viewModel,args){viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3/* Explicit */,[_common_controller_cursorCommon_js__WEBPACK_IMPORTED_MODULE_5__/* .CursorState */.Vi.fromModelSelection(args.selection)])}})})(CoreNavigationCommands||(CoreNavigationCommands={}));const columnSelectionCondition=_platform_contextkey_common_contextkey_js__WEBPACK_IMPORTED_MODULE_10__/* .ContextKeyExpr */.Ao.and(_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.columnSelection);function registerColumnSelection(id,keybinding){_platform_keybinding_common_keybindingsRegistry_js__WEBPACK_IMPORTED_MODULE_11__/* .KeybindingsRegistry */.W.registerKeybindingRule({id:id,primary:keybinding,when:columnSelectionCondition,weight:CORE_WEIGHT+1})}function registerCommand(command){return command.register(),command}var CoreEditingCommands;registerColumnSelection(CoreNavigationCommands.CursorColumnSelectLeft.id,1039/* LeftArrow */),registerColumnSelection(CoreNavigationCommands.CursorColumnSelectRight.id,1041/* RightArrow */),registerColumnSelection(CoreNavigationCommands.CursorColumnSelectUp.id,1040/* UpArrow */),registerColumnSelection(CoreNavigationCommands.CursorColumnSelectPageUp.id,1035/* PageUp */),registerColumnSelection(CoreNavigationCommands.CursorColumnSelectDown.id,1042/* DownArrow */),registerColumnSelection(CoreNavigationCommands.CursorColumnSelectPageDown.id,1036/* PageDown */),function(CoreEditingCommands){class CoreEditingCommand extends _editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .EditorCommand */._l{runEditorCommand(accessor,editor,args){const viewModel=editor._getViewModel();viewModel&&this.runCoreEditingCommand(editor,viewModel,args||{})}}CoreEditingCommands.CoreEditingCommand=CoreEditingCommand,CoreEditingCommands.LineBreakInsert=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditingCommand{constructor(){super({id:"lineBreakInsert",precondition:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.writable,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:0,mac:{primary:301/* KeyO */}}})}runCoreEditingCommand(editor,viewModel,args){editor.pushUndoStop(),editor.executeCommands(this.id,_common_controller_cursorTypeOperations_js__WEBPACK_IMPORTED_MODULE_8__/* .TypeOperations */.u.lineBreakInsert(viewModel.cursorConfig,viewModel.model,viewModel.getCursorStates().map((s=>s.modelState.selection))))}}),CoreEditingCommands.Outdent=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditingCommand{constructor(){super({id:"outdent",precondition:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.writable,kbOpts:{weight:CORE_WEIGHT,kbExpr:_platform_contextkey_common_contextkey_js__WEBPACK_IMPORTED_MODULE_10__/* .ContextKeyExpr */.Ao.and(_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.editorTextFocus,_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.tabDoesNotMoveFocus),primary:1026/* Tab */}})}runCoreEditingCommand(editor,viewModel,args){editor.pushUndoStop(),editor.executeCommands(this.id,_common_controller_cursorTypeOperations_js__WEBPACK_IMPORTED_MODULE_8__/* .TypeOperations */.u.outdent(viewModel.cursorConfig,viewModel.model,viewModel.getCursorStates().map((s=>s.modelState.selection)))),editor.pushUndoStop()}}),CoreEditingCommands.Tab=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditingCommand{constructor(){super({id:"tab",precondition:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.writable,kbOpts:{weight:CORE_WEIGHT,kbExpr:_platform_contextkey_common_contextkey_js__WEBPACK_IMPORTED_MODULE_10__/* .ContextKeyExpr */.Ao.and(_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.editorTextFocus,_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.tabDoesNotMoveFocus),primary:2/* Tab */}})}runCoreEditingCommand(editor,viewModel,args){editor.pushUndoStop(),editor.executeCommands(this.id,_common_controller_cursorTypeOperations_js__WEBPACK_IMPORTED_MODULE_8__/* .TypeOperations */.u.tab(viewModel.cursorConfig,viewModel.model,viewModel.getCursorStates().map((s=>s.modelState.selection)))),editor.pushUndoStop()}}),CoreEditingCommands.DeleteLeft=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditingCommand{constructor(){super({id:"deleteLeft",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:1/* Backspace */,secondary:[1025/* Backspace */],mac:{primary:1/* Backspace */,secondary:[1025/* Backspace */,294/* KeyH */,257/* Backspace */]}}})}runCoreEditingCommand(editor,viewModel,args){const[shouldPushStackElementBefore,commands]=_common_controller_cursorDeleteOperations_js__WEBPACK_IMPORTED_MODULE_6__/* .DeleteOperations */.A.deleteLeft(viewModel.getPrevEditOperationType(),viewModel.cursorConfig,viewModel.model,viewModel.getCursorStates().map((s=>s.modelState.selection)),viewModel.getCursorAutoClosedCharacters());shouldPushStackElementBefore&&editor.pushUndoStop(),editor.executeCommands(this.id,commands),viewModel.setPrevEditOperationType(2/* DeletingLeft */)}}),CoreEditingCommands.DeleteRight=(0,_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .registerEditorCommand */.fK)(new class extends CoreEditingCommand{constructor(){super({id:"deleteRight",precondition:void 0,kbOpts:{weight:CORE_WEIGHT,kbExpr:_common_editorContextKeys_js__WEBPACK_IMPORTED_MODULE_9__/* .EditorContextKeys */.u.textInputFocus,primary:20/* Delete */,mac:{primary:20/* Delete */,secondary:[290/* KeyD */,276/* Delete */]}}})}runCoreEditingCommand(editor,viewModel,args){const[shouldPushStackElementBefore,commands]=_common_controller_cursorDeleteOperations_js__WEBPACK_IMPORTED_MODULE_6__/* .DeleteOperations */.A.deleteRight(viewModel.getPrevEditOperationType(),viewModel.cursorConfig,viewModel.model,viewModel.getCursorStates().map((s=>s.modelState.selection)));shouldPushStackElementBefore&&editor.pushUndoStop(),editor.executeCommands(this.id,commands),viewModel.setPrevEditOperationType(3/* DeletingRight */)}}),CoreEditingCommands.Undo=new class extends EditorOrNativeTextInputCommand{constructor(){super(_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .UndoCommand */.n_)}runDOMCommand(){document.execCommand("undo")}runEditorCommand(accessor,editor,args){if(editor.hasModel()&&!0!==editor.getOption(80/* readOnly */))return editor.getModel().undo()}},CoreEditingCommands.Redo=new class extends EditorOrNativeTextInputCommand{constructor(){super(_editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .RedoCommand */.kz)}runDOMCommand(){document.execCommand("redo")}runEditorCommand(accessor,editor,args){if(editor.hasModel()&&!0!==editor.getOption(80/* readOnly */))return editor.getModel().redo()}}}(CoreEditingCommands||(CoreEditingCommands={}));
/**
 * A command that will invoke a command on the focused editor.
 */
class EditorHandlerCommand extends _editorExtensions_js__WEBPACK_IMPORTED_MODULE_2__/* .Command */.mY{constructor(id,handlerId,description){super({id:id,precondition:void 0,description:description}),this._handlerId=handlerId}runCommand(accessor,args){const editor=accessor.get(_services_codeEditorService_js__WEBPACK_IMPORTED_MODULE_3__/* .ICodeEditorService */.$).getFocusedCodeEditor();editor&&editor.trigger("keyboard",this._handlerId,args)}}function registerOverwritableCommand(handlerId,description){registerCommand(new EditorHandlerCommand("default:"+handlerId,handlerId)),registerCommand(new EditorHandlerCommand(handlerId,handlerId,description))}registerOverwritableCommand("type"/* Type */,{description:"Type",args:[{name:"args",schema:{type:"object",required:["text"],properties:{text:{type:"string"}}}}]}),registerOverwritableCommand("replacePreviousChar"/* ReplacePreviousChar */),registerOverwritableCommand("compositionType"/* CompositionType */),registerOverwritableCommand("compositionStart"/* CompositionStart */),registerOverwritableCommand("compositionEnd"/* CompositionEnd */),registerOverwritableCommand("paste"/* Paste */),registerOverwritableCommand("cut"/* Cut */)},
/***/35715:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
/* harmony export */__webpack_require__.d(__webpack_exports__,{
/* harmony export */Fz:function(){/* binding */return TextAreaInput},
/* harmony export */Nl:function(){/* binding */return InMemoryClipboardMetadataManager},
/* harmony export */RA:function(){/* binding */return CopyOptions},
/* harmony export */pd:function(){/* binding */return TextAreaSyntethicEvents}
/* harmony export */});
/* harmony import */var TextAreaSyntethicEvents,_base_browser_browser_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(730747),_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(965321),_base_common_async_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(715393),_base_common_event_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(104669),_base_common_lifecycle_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(905976),_base_common_mime_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(581170),_base_common_platform_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(901432),_base_common_strings_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(697295),_textAreaState_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(715887),_common_core_position_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(50187),_common_core_selection_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(203860);
/* harmony import */(function(TextAreaSyntethicEvents){TextAreaSyntethicEvents.Tap="-monaco-textarea-synthetic-tap"})(TextAreaSyntethicEvents||(TextAreaSyntethicEvents={}));const CopyOptions={forceCopyWithSyntaxHighlighting:!1};
/**
 * Every time we write to the clipboard, we record a bit of extra metadata here.
 * Every time we read from the cipboard, if the text matches our last written text,
 * we can fetch the previous metadata.
 */class InMemoryClipboardMetadataManager{constructor(){this._lastState=null}set(lastCopiedValue,data){this._lastState={lastCopiedValue:lastCopiedValue,data:data}}get(pastedText){return this._lastState&&this._lastState.lastCopiedValue===pastedText?this._lastState.data:(this._lastState=null,null)}}InMemoryClipboardMetadataManager.INSTANCE=new InMemoryClipboardMetadataManager;
/**
 * Writes screen reader content to the textarea and is able to analyze its input events to generate:
 *  - onCut
 *  - onPaste
 *  - onType
 *
 * Composition events are generated for presentation purposes (composition input is reflected in onType).
 */
class TextAreaInput extends _base_common_lifecycle_js__WEBPACK_IMPORTED_MODULE_4__/* .Disposable */.JT{constructor(host,textArea){super(),this.textArea=textArea,this._onFocus=this._register(new _base_common_event_js__WEBPACK_IMPORTED_MODULE_3__/* .Emitter */.Q5),this.onFocus=this._onFocus.event,this._onBlur=this._register(new _base_common_event_js__WEBPACK_IMPORTED_MODULE_3__/* .Emitter */.Q5),this.onBlur=this._onBlur.event,this._onKeyDown=this._register(new _base_common_event_js__WEBPACK_IMPORTED_MODULE_3__/* .Emitter */.Q5),this.onKeyDown=this._onKeyDown.event,this._onKeyUp=this._register(new _base_common_event_js__WEBPACK_IMPORTED_MODULE_3__/* .Emitter */.Q5),this.onKeyUp=this._onKeyUp.event,this._onCut=this._register(new _base_common_event_js__WEBPACK_IMPORTED_MODULE_3__/* .Emitter */.Q5),this.onCut=this._onCut.event,this._onPaste=this._register(new _base_common_event_js__WEBPACK_IMPORTED_MODULE_3__/* .Emitter */.Q5),this.onPaste=this._onPaste.event,this._onType=this._register(new _base_common_event_js__WEBPACK_IMPORTED_MODULE_3__/* .Emitter */.Q5),this.onType=this._onType.event,this._onCompositionStart=this._register(new _base_common_event_js__WEBPACK_IMPORTED_MODULE_3__/* .Emitter */.Q5),this.onCompositionStart=this._onCompositionStart.event,this._onCompositionUpdate=this._register(new _base_common_event_js__WEBPACK_IMPORTED_MODULE_3__/* .Emitter */.Q5),this.onCompositionUpdate=this._onCompositionUpdate.event,this._onCompositionEnd=this._register(new _base_common_event_js__WEBPACK_IMPORTED_MODULE_3__/* .Emitter */.Q5),this.onCompositionEnd=this._onCompositionEnd.event,this._onSelectionChangeRequest=this._register(new _base_common_event_js__WEBPACK_IMPORTED_MODULE_3__/* .Emitter */.Q5),this.onSelectionChangeRequest=this._onSelectionChangeRequest.event,this._host=host,this._textArea=this._register(new TextAreaWrapper(textArea)),this._asyncTriggerCut=this._register(new _base_common_async_js__WEBPACK_IMPORTED_MODULE_2__/* .RunOnceScheduler */.pY((()=>this._onCut.fire()),0)),this._asyncFocusGainWriteScreenReaderContent=this._register(new _base_common_async_js__WEBPACK_IMPORTED_MODULE_2__/* .RunOnceScheduler */.pY((()=>this.writeScreenReaderContent("asyncFocusGain")),0)),this._textAreaState=_textAreaState_js__WEBPACK_IMPORTED_MODULE_8__/* .TextAreaState */.un.EMPTY,this._selectionChangeListener=null,this.writeScreenReaderContent("ctor"),this._hasFocus=!1,this._isDoingComposition=!1,this._nextCommand=0/* Type */;let lastKeyDown=null;this._register(_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .addStandardDisposableListener */.mu(textArea.domNode,"keydown",(e=>{(109/* KEY_IN_COMPOSITION */===e.keyCode||this._isDoingComposition&&1/* Backspace */===e.keyCode)&&
// Stop propagation for keyDown events if the IME is processing key input
e.stopPropagation(),e.equals(9/* Escape */)&&
// Prevent default always for `Esc`, otherwise it will generate a keypress
// See https://msdn.microsoft.com/en-us/library/ie/ms536939(v=vs.85).aspx
e.preventDefault(),lastKeyDown=e,this._onKeyDown.fire(e)}))),this._register(_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .addStandardDisposableListener */.mu(textArea.domNode,"keyup",(e=>{this._onKeyUp.fire(e)}))),this._register(_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .addDisposableListener */.nm(textArea.domNode,"compositionstart",(e=>{if(_textAreaState_js__WEBPACK_IMPORTED_MODULE_8__/* ._debugComposition */.al,!this._isDoingComposition){if(this._isDoingComposition=!0,_base_common_platform_js__WEBPACK_IMPORTED_MODULE_6__/* .isMacintosh */.dz&&this._textAreaState.selectionStart===this._textAreaState.selectionEnd&&this._textAreaState.selectionStart>0&&this._textAreaState.value.substr(this._textAreaState.selectionStart-1,1)===e.data){const isArrowKey=lastKeyDown&&lastKeyDown.equals(109/* KEY_IN_COMPOSITION */)&&("ArrowRight"===lastKeyDown.code||"ArrowLeft"===lastKeyDown.code);if(isArrowKey||_base_browser_browser_js__WEBPACK_IMPORTED_MODULE_0__/* .isFirefox */.vU)return _textAreaState_js__WEBPACK_IMPORTED_MODULE_8__/* ._debugComposition */.al,this._textAreaState=new _textAreaState_js__WEBPACK_IMPORTED_MODULE_8__/* .TextAreaState */.un(this._textAreaState.value,this._textAreaState.selectionStart-1,this._textAreaState.selectionEnd,this._textAreaState.selectionStartPosition?new _common_core_position_js__WEBPACK_IMPORTED_MODULE_9__/* .Position */.L(this._textAreaState.selectionStartPosition.lineNumber,this._textAreaState.selectionStartPosition.column-1):null,this._textAreaState.selectionEndPosition),void this._onCompositionStart.fire({revealDeltaColumns:-1})}_base_browser_browser_js__WEBPACK_IMPORTED_MODULE_0__/* .isAndroid */.Dt?
// when tapping on the editor, Android enters composition mode to edit the current word
// so we cannot clear the textarea on Android and we must pretend the current word was selected
this._onCompositionStart.fire({revealDeltaColumns:-this._textAreaState.selectionStart}):(this._setAndWriteTextAreaState("compositionstart",_textAreaState_js__WEBPACK_IMPORTED_MODULE_8__/* .TextAreaState */.un.EMPTY),this._onCompositionStart.fire({revealDeltaColumns:0}))}})));
/**
         * Deduce the typed input from a text area's value and the last observed state.
         */
const deduceInputFromTextAreaValue=couldBeEmojiInput=>{const oldState=this._textAreaState,newState=_textAreaState_js__WEBPACK_IMPORTED_MODULE_8__/* .TextAreaState */.un.readFromTextArea(this._textArea);return[newState,_textAreaState_js__WEBPACK_IMPORTED_MODULE_8__/* .TextAreaState */.un.deduceInput(oldState,newState,couldBeEmojiInput)]},deduceAndroidCompositionInput=()=>{const oldState=this._textAreaState,newState=_textAreaState_js__WEBPACK_IMPORTED_MODULE_8__/* .TextAreaState */.un.readFromTextArea(this._textArea);return[newState,_textAreaState_js__WEBPACK_IMPORTED_MODULE_8__/* .TextAreaState */.un.deduceAndroidCompositionInput(oldState,newState)]},deduceComposition=text=>{const oldState=this._textAreaState,newState=_textAreaState_js__WEBPACK_IMPORTED_MODULE_8__/* .TextAreaState */.un.selectedText(text),typeInput={text:newState.value,replacePrevCharCnt:oldState.selectionEnd-oldState.selectionStart,replaceNextCharCnt:0,positionDelta:0};return[newState,typeInput]};this._register(_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .addDisposableListener */.nm(textArea.domNode,"compositionupdate",(e=>{if(_textAreaState_js__WEBPACK_IMPORTED_MODULE_8__/* ._debugComposition */.al,_base_browser_browser_js__WEBPACK_IMPORTED_MODULE_0__/* .isAndroid */.Dt){
// On Android, the data sent with the composition update event is unusable.
// For example, if the cursor is in the middle of a word like Mic|osoft
// and Microsoft is chosen from the keyboard's suggestions, the e.data will contain "Microsoft".
// This is not really usable because it doesn't tell us where the edit began and where it ended.
const[newState,typeInput]=deduceAndroidCompositionInput();return this._textAreaState=newState,this._onType.fire(typeInput),void this._onCompositionUpdate.fire(e)}const[newState,typeInput]=deduceComposition(e.data||"");this._textAreaState=newState,this._onType.fire(typeInput),this._onCompositionUpdate.fire(e)}))),this._register(_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .addDisposableListener */.nm(textArea.domNode,"compositionend",(e=>{
// https://github.com/microsoft/monaco-editor/issues/1663
// On iOS 13.2, Chinese system IME randomly trigger an additional compositionend event with empty data
if(_textAreaState_js__WEBPACK_IMPORTED_MODULE_8__/* ._debugComposition */.al,!this._isDoingComposition)return;if(this._isDoingComposition=!1,_base_browser_browser_js__WEBPACK_IMPORTED_MODULE_0__/* .isAndroid */.Dt){
// On Android, the data sent with the composition update event is unusable.
// For example, if the cursor is in the middle of a word like Mic|osoft
// and Microsoft is chosen from the keyboard's suggestions, the e.data will contain "Microsoft".
// This is not really usable because it doesn't tell us where the edit began and where it ended.
const[newState,typeInput]=deduceAndroidCompositionInput();return this._textAreaState=newState,this._onType.fire(typeInput),void this._onCompositionEnd.fire()}const[newState,typeInput]=deduceComposition(e.data||"");this._textAreaState=newState,this._onType.fire(typeInput),
// isChrome: the textarea is not updated correctly when composition ends
// isFirefox: the textarea is not updated correctly after inserting emojis
// => we cannot assume the text at the end consists only of the composited text
(_base_browser_browser_js__WEBPACK_IMPORTED_MODULE_0__/* .isChrome */.i7||_base_browser_browser_js__WEBPACK_IMPORTED_MODULE_0__/* .isFirefox */.vU)&&(this._textAreaState=_textAreaState_js__WEBPACK_IMPORTED_MODULE_8__/* .TextAreaState */.un.readFromTextArea(this._textArea)),this._onCompositionEnd.fire()}))),this._register(_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .addDisposableListener */.nm(textArea.domNode,"input",(()=>{if(
// Pretend here we touched the text area, as the `input` event will most likely
// result in a `selectionchange` event which we want to ignore
this._textArea.setIgnoreSelectionChangeTime("received input event"),this._isDoingComposition)return;const[newState,typeInput]=deduceInputFromTextAreaValue(/*couldBeEmojiInput*/_base_common_platform_js__WEBPACK_IMPORTED_MODULE_6__/* .isMacintosh */.dz);0===typeInput.replacePrevCharCnt&&1===typeInput.text.length&&_base_common_strings_js__WEBPACK_IMPORTED_MODULE_7__/* .isHighSurrogate */.ZG(typeInput.text.charCodeAt(0))||(this._textAreaState=newState,0/* Type */===this._nextCommand?""===typeInput.text&&0===typeInput.replacePrevCharCnt||this._onType.fire(typeInput):(""===typeInput.text&&0===typeInput.replacePrevCharCnt||this._firePaste(typeInput.text,null),this._nextCommand=0/* Type */))}))),
// --- Clipboard operations
this._register(_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .addDisposableListener */.nm(textArea.domNode,"cut",(e=>{
// Pretend here we touched the text area, as the `cut` event will most likely
// result in a `selectionchange` event which we want to ignore
this._textArea.setIgnoreSelectionChangeTime("received cut event"),this._ensureClipboardGetsEditorSelection(e),this._asyncTriggerCut.schedule()}))),this._register(_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .addDisposableListener */.nm(textArea.domNode,"copy",(e=>{this._ensureClipboardGetsEditorSelection(e)}))),this._register(_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .addDisposableListener */.nm(textArea.domNode,"paste",(e=>{if(
// Pretend here we touched the text area, as the `paste` event will most likely
// result in a `selectionchange` event which we want to ignore
this._textArea.setIgnoreSelectionChangeTime("received paste event"),ClipboardEventUtils.canUseTextData(e)){const[pastePlainText,metadata]=ClipboardEventUtils.getTextData(e);""!==pastePlainText&&this._firePaste(pastePlainText,metadata)}else this._textArea.getSelectionStart()!==this._textArea.getSelectionEnd()&&
// Clean up the textarea, to get a clean paste
this._setAndWriteTextAreaState("paste",_textAreaState_js__WEBPACK_IMPORTED_MODULE_8__/* .TextAreaState */.un.EMPTY),this._nextCommand=1/* Paste */}))),this._register(_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .addDisposableListener */.nm(textArea.domNode,"focus",(()=>{const hadFocus=this._hasFocus;this._setHasFocus(!0),_base_browser_browser_js__WEBPACK_IMPORTED_MODULE_0__/* .isSafari */.G6&&!hadFocus&&this._hasFocus&&
// When "tabbing into" the textarea, immediately after dispatching the 'focus' event,
// Safari will always move the selection at offset 0 in the textarea
this._asyncFocusGainWriteScreenReaderContent.schedule()}))),this._register(_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .addDisposableListener */.nm(textArea.domNode,"blur",(()=>{this._isDoingComposition&&(
// See https://github.com/microsoft/vscode/issues/112621
// where compositionend is not triggered when the editor
// is taken off-dom during a composition
// Clear the flag to be able to write to the textarea
this._isDoingComposition=!1,
// Clear the textarea to avoid an unwanted cursor type
this.writeScreenReaderContent("blurWithoutCompositionEnd"),
// Fire artificial composition end
this._onCompositionEnd.fire()),this._setHasFocus(!1)}))),this._register(_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .addDisposableListener */.nm(textArea.domNode,TextAreaSyntethicEvents.Tap,(()=>{_base_browser_browser_js__WEBPACK_IMPORTED_MODULE_0__/* .isAndroid */.Dt&&this._isDoingComposition&&(
// on Android, tapping does not cancel the current composition, so the
// textarea is stuck showing the old composition
// Clear the flag to be able to write to the textarea
this._isDoingComposition=!1,
// Clear the textarea to avoid an unwanted cursor type
this.writeScreenReaderContent("tapWithoutCompositionEnd"),
// Fire artificial composition end
this._onCompositionEnd.fire())})))}_installSelectionChangeListener(){
// See https://github.com/microsoft/vscode/issues/27216 and https://github.com/microsoft/vscode/issues/98256
// When using a Braille display, it is possible for users to reposition the
// system caret. This is reflected in Chrome as a `selectionchange` event.
// The `selectionchange` event appears to be emitted under numerous other circumstances,
// so it is quite a challenge to distinguish a `selectionchange` coming in from a user
// using a Braille display from all the other cases.
// The problems with the `selectionchange` event are:
//  * the event is emitted when the textarea is focused programmatically -- textarea.focus()
//  * the event is emitted when the selection is changed in the textarea programmatically -- textarea.setSelectionRange(...)
//  * the event is emitted when the value of the textarea is changed programmatically -- textarea.value = '...'
//  * the event is emitted when tabbing into the textarea
//  * the event is emitted asynchronously (sometimes with a delay as high as a few tens of ms)
//  * the event sometimes comes in bursts for a single logical textarea operation
// `selectionchange` events often come multiple times for a single logical change
// so throttle multiple `selectionchange` events that burst in a short period of time.
let previousSelectionChangeEventTime=0;return _base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .addDisposableListener */.nm(document,"selectionchange",(e=>{if(!this._hasFocus)return;if(this._isDoingComposition)return;if(!_base_browser_browser_js__WEBPACK_IMPORTED_MODULE_0__/* .isChrome */.i7)
// Support only for Chrome until testing happens on other browsers
return;const now=Date.now(),delta1=now-previousSelectionChangeEventTime;if(previousSelectionChangeEventTime=now,delta1<5)
// received another `selectionchange` event within 5ms of the previous `selectionchange` event
// => ignore it
return;const delta2=now-this._textArea.getIgnoreSelectionChangeTime();if(this._textArea.resetSelectionChangeTime(),delta2<100)
// received a `selectionchange` event within 100ms since we touched the textarea
// => ignore it, since we caused it
return;if(!this._textAreaState.selectionStartPosition||!this._textAreaState.selectionEndPosition)
// Cannot correlate a position in the textarea with a position in the editor...
return;const newValue=this._textArea.getValue();if(this._textAreaState.value!==newValue)
// Cannot correlate a position in the textarea with a position in the editor...
return;const newSelectionStart=this._textArea.getSelectionStart(),newSelectionEnd=this._textArea.getSelectionEnd();if(this._textAreaState.selectionStart===newSelectionStart&&this._textAreaState.selectionEnd===newSelectionEnd)
// Nothing to do...
return;const _newSelectionStartPosition=this._textAreaState.deduceEditorPosition(newSelectionStart),newSelectionStartPosition=this._host.deduceModelPosition(_newSelectionStartPosition[0],_newSelectionStartPosition[1],_newSelectionStartPosition[2]),_newSelectionEndPosition=this._textAreaState.deduceEditorPosition(newSelectionEnd),newSelectionEndPosition=this._host.deduceModelPosition(_newSelectionEndPosition[0],_newSelectionEndPosition[1],_newSelectionEndPosition[2]),newSelection=new _common_core_selection_js__WEBPACK_IMPORTED_MODULE_10__/* .Selection */.Y(newSelectionStartPosition.lineNumber,newSelectionStartPosition.column,newSelectionEndPosition.lineNumber,newSelectionEndPosition.column);this._onSelectionChangeRequest.fire(newSelection)}))}dispose(){super.dispose(),this._selectionChangeListener&&(this._selectionChangeListener.dispose(),this._selectionChangeListener=null)}focusTextArea(){
// Setting this._hasFocus and writing the screen reader content
// will result in a focus() and setSelectionRange() in the textarea
this._setHasFocus(!0),
// If the editor is off DOM, focus cannot be really set, so let's double check that we have managed to set the focus
this.refreshFocusState()}isFocused(){return this._hasFocus}refreshFocusState(){const shadowRoot=_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .getShadowRoot */.Ay(this.textArea.domNode);shadowRoot?this._setHasFocus(shadowRoot.activeElement===this.textArea.domNode):_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .isInDOM */.Uw(this.textArea.domNode)?this._setHasFocus(document.activeElement===this.textArea.domNode):this._setHasFocus(!1)}_setHasFocus(newHasFocus){this._hasFocus!==newHasFocus&&(this._hasFocus=newHasFocus,this._selectionChangeListener&&(this._selectionChangeListener.dispose(),this._selectionChangeListener=null),this._hasFocus&&(this._selectionChangeListener=this._installSelectionChangeListener()),this._hasFocus&&this.writeScreenReaderContent("focusgain"),this._hasFocus?this._onFocus.fire():this._onBlur.fire())}_setAndWriteTextAreaState(reason,textAreaState){this._hasFocus||(textAreaState=textAreaState.collapseSelection()),textAreaState.writeToTextArea(reason,this._textArea,this._hasFocus),this._textAreaState=textAreaState}writeScreenReaderContent(reason){this._isDoingComposition||this._setAndWriteTextAreaState(reason,this._host.getScreenReaderContent(this._textAreaState))}_ensureClipboardGetsEditorSelection(e){const dataToCopy=this._host.getDataToCopy(ClipboardEventUtils.canUseTextData(e)),storedMetadata={version:1,isFromEmptySelection:dataToCopy.isFromEmptySelection,multicursorText:dataToCopy.multicursorText,mode:dataToCopy.mode};InMemoryClipboardMetadataManager.INSTANCE.set(
// When writing "LINE\r\n" to the clipboard and then pasting,
// Firefox pastes "LINE\n", so let's work around this quirk
_base_browser_browser_js__WEBPACK_IMPORTED_MODULE_0__/* .isFirefox */.vU?dataToCopy.text.replace(/\r\n/g,"\n"):dataToCopy.text,storedMetadata),ClipboardEventUtils.canUseTextData(e)?ClipboardEventUtils.setTextData(e,dataToCopy.text,dataToCopy.html,storedMetadata):
// Looks like an old browser. The strategy is to place the text
// we'd like to be copied to the clipboard in the textarea and select it.
this._setAndWriteTextAreaState("copy or cut",_textAreaState_js__WEBPACK_IMPORTED_MODULE_8__/* .TextAreaState */.un.selectedText(dataToCopy.text))}_firePaste(text,metadata){metadata||(
// try the in-memory store
metadata=InMemoryClipboardMetadataManager.INSTANCE.get(text)),this._onPaste.fire({text:text,metadata:metadata})}}class ClipboardEventUtils{static canUseTextData(e){return!!e.clipboardData}static getTextData(e){if(e.clipboardData){e.preventDefault();const text=e.clipboardData.getData(_base_common_mime_js__WEBPACK_IMPORTED_MODULE_5__/* .Mimes */.vW.text);let metadata=null;const rawmetadata=e.clipboardData.getData("vscode-editor-data");if("string"===typeof rawmetadata)try{metadata=JSON.parse(rawmetadata),1!==metadata.version&&(metadata=null)}catch(err){
// no problem!
}return[text,metadata]}throw new Error("ClipboardEventUtils.getTextData: Cannot use text data!")}static setTextData(e,text,html,metadata){if(e.clipboardData)return e.clipboardData.setData(_base_common_mime_js__WEBPACK_IMPORTED_MODULE_5__/* .Mimes */.vW.text,text),"string"===typeof html&&e.clipboardData.setData("text/html",html),e.clipboardData.setData("vscode-editor-data",JSON.stringify(metadata)),void e.preventDefault();throw new Error("ClipboardEventUtils.setTextData: Cannot use text data!")}}class TextAreaWrapper extends _base_common_lifecycle_js__WEBPACK_IMPORTED_MODULE_4__/* .Disposable */.JT{constructor(_textArea){super(),this._actual=_textArea,this._ignoreSelectionChangeTime=0}setIgnoreSelectionChangeTime(reason){this._ignoreSelectionChangeTime=Date.now()}getIgnoreSelectionChangeTime(){return this._ignoreSelectionChangeTime}resetSelectionChangeTime(){this._ignoreSelectionChangeTime=0}getValue(){
// console.log('current value: ' + this._textArea.value);
return this._actual.domNode.value}setValue(reason,value){const textArea=this._actual.domNode;textArea.value!==value&&(
// console.log('reason: ' + reason + ', current value: ' + textArea.value + ' => new value: ' + value);
this.setIgnoreSelectionChangeTime("setValue"),textArea.value=value)}getSelectionStart(){return"backward"===this._actual.domNode.selectionDirection?this._actual.domNode.selectionEnd:this._actual.domNode.selectionStart}getSelectionEnd(){return"backward"===this._actual.domNode.selectionDirection?this._actual.domNode.selectionStart:this._actual.domNode.selectionEnd}setSelectionRange(reason,selectionStart,selectionEnd){const textArea=this._actual.domNode;let activeElement=null;const shadowRoot=_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .getShadowRoot */.Ay(textArea);activeElement=shadowRoot?shadowRoot.activeElement:document.activeElement;const currentIsFocused=activeElement===textArea,currentSelectionStart=textArea.selectionStart,currentSelectionEnd=textArea.selectionEnd;if(currentIsFocused&&currentSelectionStart===selectionStart&&currentSelectionEnd===selectionEnd)
// No change
// Firefox iframe bug https://github.com/microsoft/monaco-editor/issues/643#issuecomment-367871377
_base_browser_browser_js__WEBPACK_IMPORTED_MODULE_0__/* .isFirefox */.vU&&window.parent!==window&&textArea.focus();else{
// console.log('reason: ' + reason + ', setSelectionRange: ' + selectionStart + ' -> ' + selectionEnd);
if(currentIsFocused)
// No need to focus, only need to change the selection range
return this.setIgnoreSelectionChangeTime("setSelectionRange"),textArea.setSelectionRange(selectionStart,selectionEnd),void(_base_browser_browser_js__WEBPACK_IMPORTED_MODULE_0__/* .isFirefox */.vU&&window.parent!==window&&textArea.focus());
// If the focus is outside the textarea, browsers will try really hard to reveal the textarea.
// Here, we try to undo the browser's desperate reveal.
try{const scrollState=_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .saveParentsScrollTop */.vL(textArea);this.setIgnoreSelectionChangeTime("setSelectionRange"),textArea.focus(),textArea.setSelectionRange(selectionStart,selectionEnd),_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_1__/* .restoreParentsScrollTop */._0(textArea,scrollState)}catch(e){
// Sometimes IE throws when setting selection (e.g. textarea is off-DOM)
}}}}
/***/},
/***/715887:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
/* harmony export */__webpack_require__.d(__webpack_exports__,{
/* harmony export */al:function(){/* binding */return _debugComposition},
/* harmony export */ee:function(){/* binding */return PagedScreenReaderStrategy},
/* harmony export */un:function(){/* binding */return TextAreaState}
/* harmony export */});
/* harmony import */var _base_common_strings_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(697295),_common_core_position_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(50187),_common_core_range_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(624314);
/* harmony import */
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
const _debugComposition=!1;class TextAreaState{constructor(value,selectionStart,selectionEnd,selectionStartPosition,selectionEndPosition){this.value=value,this.selectionStart=selectionStart,this.selectionEnd=selectionEnd,this.selectionStartPosition=selectionStartPosition,this.selectionEndPosition=selectionEndPosition}toString(){return"[ <"+this.value+">, selectionStart: "+this.selectionStart+", selectionEnd: "+this.selectionEnd+"]"}static readFromTextArea(textArea){return new TextAreaState(textArea.getValue(),textArea.getSelectionStart(),textArea.getSelectionEnd(),null,null)}collapseSelection(){return new TextAreaState(this.value,this.value.length,this.value.length,null,null)}writeToTextArea(reason,textArea,select){textArea.setValue(reason,this.value),select&&textArea.setSelectionRange(reason,this.selectionStart,this.selectionEnd)}deduceEditorPosition(offset){if(offset<=this.selectionStart){const str=this.value.substring(offset,this.selectionStart);return this._finishDeduceEditorPosition(this.selectionStartPosition,str,-1)}if(offset>=this.selectionEnd){const str=this.value.substring(this.selectionEnd,offset);return this._finishDeduceEditorPosition(this.selectionEndPosition,str,1)}const str1=this.value.substring(this.selectionStart,offset);if(-1===str1.indexOf(String.fromCharCode(8230)))return this._finishDeduceEditorPosition(this.selectionStartPosition,str1,1);const str2=this.value.substring(offset,this.selectionEnd);return this._finishDeduceEditorPosition(this.selectionEndPosition,str2,-1)}_finishDeduceEditorPosition(anchor,deltaText,signum){let lineFeedCnt=0,lastLineFeedIndex=-1;while(-1!==(lastLineFeedIndex=deltaText.indexOf("\n",lastLineFeedIndex+1)))lineFeedCnt++;return[anchor,signum*deltaText.length,lineFeedCnt]}static selectedText(text){return new TextAreaState(text,0,text.length,null,null)}static deduceInput(previousState,currentState,couldBeEmojiInput){if(!previousState)
// This is the EMPTY state
return{text:"",replacePrevCharCnt:0,replaceNextCharCnt:0,positionDelta:0};let previousValue=previousState.value,previousSelectionStart=previousState.selectionStart,previousSelectionEnd=previousState.selectionEnd,currentValue=currentState.value,currentSelectionStart=currentState.selectionStart,currentSelectionEnd=currentState.selectionEnd;
// Strip the previous suffix from the value (without interfering with the current selection)
const previousSuffix=previousValue.substring(previousSelectionEnd),currentSuffix=currentValue.substring(currentSelectionEnd),suffixLength=_base_common_strings_js__WEBPACK_IMPORTED_MODULE_0__/* .commonSuffixLength */.P1(previousSuffix,currentSuffix);currentValue=currentValue.substring(0,currentValue.length-suffixLength),previousValue=previousValue.substring(0,previousValue.length-suffixLength);const previousPrefix=previousValue.substring(0,previousSelectionStart),currentPrefix=currentValue.substring(0,currentSelectionStart),prefixLength=_base_common_strings_js__WEBPACK_IMPORTED_MODULE_0__/* .commonPrefixLength */.Mh(previousPrefix,currentPrefix);if(currentValue=currentValue.substring(prefixLength),previousValue=previousValue.substring(prefixLength),currentSelectionStart-=prefixLength,previousSelectionStart-=prefixLength,currentSelectionEnd-=prefixLength,previousSelectionEnd-=prefixLength,couldBeEmojiInput&&currentSelectionStart===currentSelectionEnd&&previousValue.length>0){
// on OSX, emojis from the emoji picker are inserted at random locations
// the only hints we can use is that the selection is immediately after the inserted emoji
// and that none of the old text has been deleted
let potentialEmojiInput=null;if(currentSelectionStart===currentValue.length?
// emoji potentially inserted "somewhere" after the previous selection => it should appear at the end of `currentValue`
currentValue.startsWith(previousValue)&&(
// only if all of the old text is accounted for
potentialEmojiInput=currentValue.substring(previousValue.length)):
// emoji potentially inserted "somewhere" before the previous selection => it should appear at the start of `currentValue`
currentValue.endsWith(previousValue)&&(
// only if all of the old text is accounted for
potentialEmojiInput=currentValue.substring(0,currentValue.length-previousValue.length)),null!==potentialEmojiInput&&potentialEmojiInput.length>0&&(/\uFE0F/.test(potentialEmojiInput)||_base_common_strings_js__WEBPACK_IMPORTED_MODULE_0__/* .containsEmoji */.RP(potentialEmojiInput)))return{text:potentialEmojiInput,replacePrevCharCnt:0,replaceNextCharCnt:0,positionDelta:0}}if(currentSelectionStart===currentSelectionEnd){
// composition accept case (noticed in FF + Japanese)
// [blahblah] => blahblah|
if(previousValue===currentValue&&0===previousSelectionStart&&previousSelectionEnd===previousValue.length&&currentSelectionStart===currentValue.length&&-1===currentValue.indexOf("\n")&&_base_common_strings_js__WEBPACK_IMPORTED_MODULE_0__/* .containsFullWidthCharacter */.xe(currentValue))return{text:"",replacePrevCharCnt:0,replaceNextCharCnt:0,positionDelta:0};
// no current selection
const replacePreviousCharacters=previousPrefix.length-prefixLength;return{text:currentValue,replacePrevCharCnt:replacePreviousCharacters,replaceNextCharCnt:0,positionDelta:0}}
// there is a current selection => composition case
const replacePreviousCharacters=previousSelectionEnd-previousSelectionStart;return{text:currentValue,replacePrevCharCnt:replacePreviousCharacters,replaceNextCharCnt:0,positionDelta:0}}static deduceAndroidCompositionInput(previousState,currentState){if(!previousState)
// This is the EMPTY state
return{text:"",replacePrevCharCnt:0,replaceNextCharCnt:0,positionDelta:0};if(previousState.value===currentState.value)return{text:"",replacePrevCharCnt:0,replaceNextCharCnt:0,positionDelta:currentState.selectionEnd-previousState.selectionEnd};const prefixLength=Math.min(_base_common_strings_js__WEBPACK_IMPORTED_MODULE_0__/* .commonPrefixLength */.Mh(previousState.value,currentState.value),previousState.selectionEnd),suffixLength=Math.min(_base_common_strings_js__WEBPACK_IMPORTED_MODULE_0__/* .commonSuffixLength */.P1(previousState.value,currentState.value),previousState.value.length-previousState.selectionEnd),previousValue=previousState.value.substring(prefixLength,previousState.value.length-suffixLength),currentValue=currentState.value.substring(prefixLength,currentState.value.length-suffixLength),previousSelectionEnd=(previousState.selectionStart,previousState.selectionEnd-prefixLength),currentSelectionEnd=(currentState.selectionStart,currentState.selectionEnd-prefixLength);return{text:currentValue,replacePrevCharCnt:previousSelectionEnd,replaceNextCharCnt:previousValue.length-previousSelectionEnd,positionDelta:currentSelectionEnd-currentValue.length}}}TextAreaState.EMPTY=new TextAreaState("",0,0,null,null);class PagedScreenReaderStrategy{static _getPageOfLine(lineNumber,linesPerPage){return Math.floor((lineNumber-1)/linesPerPage)}static _getRangeForPage(page,linesPerPage){const offset=page*linesPerPage,startLineNumber=offset+1,endLineNumber=offset+linesPerPage;return new _common_core_range_js__WEBPACK_IMPORTED_MODULE_1__/* .Range */.e(startLineNumber,1,endLineNumber+1,1)}static fromEditorSelection(previousState,model,selection,linesPerPage,trimLongText){const selectionStartPage=PagedScreenReaderStrategy._getPageOfLine(selection.startLineNumber,linesPerPage),selectionStartPageRange=PagedScreenReaderStrategy._getRangeForPage(selectionStartPage,linesPerPage),selectionEndPage=PagedScreenReaderStrategy._getPageOfLine(selection.endLineNumber,linesPerPage),selectionEndPageRange=PagedScreenReaderStrategy._getRangeForPage(selectionEndPage,linesPerPage),pretextRange=selectionStartPageRange.intersectRanges(new _common_core_range_js__WEBPACK_IMPORTED_MODULE_1__/* .Range */.e(1,1,selection.startLineNumber,selection.startColumn));let pretext=model.getValueInRange(pretextRange,1/* LF */);const lastLine=model.getLineCount(),lastLineMaxColumn=model.getLineMaxColumn(lastLine),posttextRange=selectionEndPageRange.intersectRanges(new _common_core_range_js__WEBPACK_IMPORTED_MODULE_1__/* .Range */.e(selection.endLineNumber,selection.endColumn,lastLine,lastLineMaxColumn));let text,posttext=model.getValueInRange(posttextRange,1/* LF */);if(selectionStartPage===selectionEndPage||selectionStartPage+1===selectionEndPage)
// take full selection
text=model.getValueInRange(selection,1/* LF */);else{const selectionRange1=selectionStartPageRange.intersectRanges(selection),selectionRange2=selectionEndPageRange.intersectRanges(selection);text=model.getValueInRange(selectionRange1,1/* LF */)+String.fromCharCode(8230)+model.getValueInRange(selectionRange2,1/* LF */)}
// Chromium handles very poorly text even of a few thousand chars
// Cut text to avoid stalling the entire UI
if(trimLongText){const LIMIT_CHARS=500;pretext.length>LIMIT_CHARS&&(pretext=pretext.substring(pretext.length-LIMIT_CHARS,pretext.length)),posttext.length>LIMIT_CHARS&&(posttext=posttext.substring(0,LIMIT_CHARS)),text.length>2*LIMIT_CHARS&&(text=text.substring(0,LIMIT_CHARS)+String.fromCharCode(8230)+text.substring(text.length-LIMIT_CHARS,text.length))}return new TextAreaState(pretext+text+posttext,pretext.length,pretext.length+text.length,new _common_core_position_js__WEBPACK_IMPORTED_MODULE_2__/* .Position */.L(selection.startLineNumber,selection.startColumn),new _common_core_position_js__WEBPACK_IMPORTED_MODULE_2__/* .Position */.L(selection.endLineNumber,selection.endColumn))}}
/***/},
/***/355812:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
// EXPORTS
__webpack_require__.d(__webpack_exports__,{yy:function(){/* binding */return EditorState},Dl:function(){/* binding */return EditorStateCancellationTokenSource},ZF:function(){/* binding */return StableEditorScrollState},YQ:function(){/* binding */return TextModelCancellationTokenSource}});
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/base/common/strings.js
var strings=__webpack_require__(697295),core_range=__webpack_require__(624314),cancellation=__webpack_require__(471050),lifecycle=__webpack_require__(905976),editorExtensions=__webpack_require__(616830),contextkey=__webpack_require__(938819),linkedList=__webpack_require__(791741),instantiation=__webpack_require__(472065),extensions=__webpack_require__(65026),nls=__webpack_require__(663580);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/core/range.js
// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/core/keybindingCancellation.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
const IEditorCancellationTokens=(0,instantiation/* createDecorator */.yh)("IEditorCancelService"),ctxCancellableOperation=new contextkey/* RawContextKey */.uy("cancellableOperation",!1,(0,nls/* localize */.N)("cancellableOperation","Whether the editor runs a cancellable operation, e.g. like 'Peek References'"));(0,extensions/* registerSingleton */.z)(IEditorCancellationTokens,class{constructor(){this._tokens=new WeakMap}add(editor,cts){let removeFn,data=this._tokens.get(editor);return data||(data=editor.invokeWithinContext((accessor=>{const key=ctxCancellableOperation.bindTo(accessor.get(contextkey/* IContextKeyService */.i6)),tokens=new linkedList/* LinkedList */.S;return{key:key,tokens:tokens}})),this._tokens.set(editor,data)),data.key.set(!0),removeFn=data.tokens.push(cts),()=>{
// remove w/o cancellation
removeFn&&(removeFn(),data.key.set(!data.tokens.isEmpty()),removeFn=void 0)}}cancel(editor){const data=this._tokens.get(editor);if(!data)return;
// remove with cancellation
const cts=data.tokens.pop();cts&&(cts.cancel(),data.key.set(!data.tokens.isEmpty()))}},!0);class EditorKeybindingCancellationTokenSource extends cancellation/* CancellationTokenSource */.A{constructor(editor,parent){super(parent),this.editor=editor,this._unregister=editor.invokeWithinContext((accessor=>accessor.get(IEditorCancellationTokens).add(editor,this)))}dispose(){this._unregister(),super.dispose()}}(0,editorExtensions/* registerEditorCommand */.fK)(new class extends editorExtensions/* EditorCommand */._l{constructor(){super({id:"editor.cancelOperation",kbOpts:{weight:100/* EditorContrib */,primary:9/* Escape */},precondition:ctxCancellableOperation})}runEditorCommand(accessor,editor){accessor.get(IEditorCancellationTokens).cancel(editor)}});// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/core/editorState.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class EditorState{constructor(editor,flags){if(this.flags=flags,0!==(1/* Value */&this.flags)){const model=editor.getModel();this.modelVersionId=model?strings/* format */.WU("{0}#{1}",model.uri.toString(),model.getVersionId()):null}else this.modelVersionId=null;0!==(4/* Position */&this.flags)?this.position=editor.getPosition():this.position=null,0!==(2/* Selection */&this.flags)?this.selection=editor.getSelection():this.selection=null,0!==(8/* Scroll */&this.flags)?(this.scrollLeft=editor.getScrollLeft(),this.scrollTop=editor.getScrollTop()):(this.scrollLeft=-1,this.scrollTop=-1)}_equals(other){if(!(other instanceof EditorState))return!1;const state=other;return this.modelVersionId===state.modelVersionId&&(this.scrollLeft===state.scrollLeft&&this.scrollTop===state.scrollTop&&(!(!this.position&&state.position||this.position&&!state.position||this.position&&state.position&&!this.position.equals(state.position))&&!(!this.selection&&state.selection||this.selection&&!state.selection||this.selection&&state.selection&&!this.selection.equalsRange(state.selection))))}validate(editor){return this._equals(new EditorState(editor,this.flags))}}
/**
 * A cancellation token source that cancels when the editor changes as expressed
 * by the provided flags
 * @param range If provided, changes in position and selection within this range will not trigger cancellation
 */class EditorStateCancellationTokenSource extends EditorKeybindingCancellationTokenSource{constructor(editor,flags,range,parent){super(editor,parent),this._listener=new lifecycle/* DisposableStore */.SL,4/* Position */&flags&&this._listener.add(editor.onDidChangeCursorPosition((e=>{range&&core_range/* Range */.e.containsPosition(range,e.position)||this.cancel()}))),2/* Selection */&flags&&this._listener.add(editor.onDidChangeCursorSelection((e=>{range&&core_range/* Range */.e.containsRange(range,e.selection)||this.cancel()}))),8/* Scroll */&flags&&this._listener.add(editor.onDidScrollChange((_=>this.cancel()))),1/* Value */&flags&&(this._listener.add(editor.onDidChangeModel((_=>this.cancel()))),this._listener.add(editor.onDidChangeModelContent((_=>this.cancel()))))}dispose(){this._listener.dispose(),super.dispose()}}
/**
 * A cancellation token source that cancels when the provided model changes
 */class TextModelCancellationTokenSource extends cancellation/* CancellationTokenSource */.A{constructor(model,parent){super(parent),this._listener=model.onDidChangeContent((()=>this.cancel()))}dispose(){this._listener.dispose(),super.dispose()}}class StableEditorScrollState{constructor(_visiblePosition,_visiblePositionScrollDelta,_cursorPosition){this._visiblePosition=_visiblePosition,this._visiblePositionScrollDelta=_visiblePositionScrollDelta,this._cursorPosition=_cursorPosition}static capture(editor){let visiblePosition=null,visiblePositionScrollDelta=0;if(0!==editor.getScrollTop()){const visibleRanges=editor.getVisibleRanges();if(visibleRanges.length>0){visiblePosition=visibleRanges[0].getStartPosition();const visiblePositionScrollTop=editor.getTopForPosition(visiblePosition.lineNumber,visiblePosition.column);visiblePositionScrollDelta=editor.getScrollTop()-visiblePositionScrollTop}}return new StableEditorScrollState(visiblePosition,visiblePositionScrollDelta,editor.getPosition())}restore(editor){if(this._visiblePosition){const visiblePositionScrollTop=editor.getTopForPosition(this._visiblePosition.lineNumber,this._visiblePosition.column);editor.setScrollTop(visiblePositionScrollTop+this._visiblePositionScrollDelta)}}restoreRelativeVerticalPositionOfCursor(editor){const currentCursorPosition=editor.getPosition();if(!this._cursorPosition||!currentCursorPosition)return;const offset=editor.getTopForLineNumber(currentCursorPosition.lineNumber)-editor.getTopForLineNumber(this._cursorPosition.lineNumber);editor.setScrollTop(editor.getScrollTop()+offset)}}
/***/},
/***/888527:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
/* harmony export */__webpack_require__.d(__webpack_exports__,{
/* harmony export */$:function(){/* binding */return MarkdownRenderer}
/* harmony export */});
/* harmony import */var _a,_base_browser_markdownRenderer_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(842411),_platform_opener_common_opener_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(150988),_common_services_modeService_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(771531),_base_common_errors_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(817301),_common_modes_textToHtmlTokenizer_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(955713),_base_common_event_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(104669),_base_common_lifecycle_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(905976),_common_modes_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(860303),_config_configuration_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(887917),__decorate=function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}},__awaiter=function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};
/* harmony import */
/**
 * Markdown renderer that can render codeblocks with the editor mechanics. This
 * renderer should always be preferred.
 */
let MarkdownRenderer=class MarkdownRenderer{constructor(_options,_modeService,_openerService){this._options=_options,this._modeService=_modeService,this._openerService=_openerService,this._onDidRenderAsync=new _base_common_event_js__WEBPACK_IMPORTED_MODULE_5__/* .Emitter */.Q5,this.onDidRenderAsync=this._onDidRenderAsync.event}dispose(){this._onDidRenderAsync.dispose()}render(markdown,options,markedOptions){if(!markdown){const element=document.createElement("span");return{element:element,dispose:()=>{}}}const disposables=new _base_common_lifecycle_js__WEBPACK_IMPORTED_MODULE_6__/* .DisposableStore */.SL,rendered=disposables.add((0,_base_browser_markdownRenderer_js__WEBPACK_IMPORTED_MODULE_0__/* .renderMarkdown */.a)(markdown,Object.assign(Object.assign({},this._getRenderOptions(markdown,disposables)),options),markedOptions));return{element:rendered.element,dispose:()=>disposables.dispose()}}_getRenderOptions(markdown,disposeables){return{baseUrl:this._options.baseUrl,codeBlockRenderer:(languageAlias,value)=>__awaiter(this,void 0,void 0,(function*(){var _a,_b,_c,_d;
// In markdown,
// it is possible that we stumble upon language aliases (e.g.js instead of javascript)
// it is possible no alias is given in which case we fall back to the current editor lang
let languageId;languageAlias?languageId=this._modeService.getModeIdForLanguageName(languageAlias):this._options.editor&&(languageId=null===(_a=this._options.editor.getModel())||void 0===_a?void 0:_a.getLanguageId()),languageId||(languageId="plaintext"),this._modeService.triggerMode(languageId);const tokenization=null!==(_b=yield _common_modes_js__WEBPACK_IMPORTED_MODULE_7__/* .TokenizationRegistry */.RW.getPromise(languageId))&&void 0!==_b?_b:void 0,element=document.createElement("span");
// use "good" font
if(element.innerHTML=null!==(_d=null===(_c=MarkdownRenderer._ttpTokenizer)||void 0===_c?void 0:_c.createHTML(value,this._modeService.languageIdCodec,tokenization))&&void 0!==_d?_d:(0,_common_modes_textToHtmlTokenizer_js__WEBPACK_IMPORTED_MODULE_4__/* .tokenizeToString */.C)(value,this._modeService.languageIdCodec,tokenization),this._options.editor){const fontInfo=this._options.editor.getOption(43/* fontInfo */);_config_configuration_js__WEBPACK_IMPORTED_MODULE_8__/* .Configuration */.V.applyFontInfoSlow(element,fontInfo)}else this._options.codeBlockFontFamily&&(element.style.fontFamily=this._options.codeBlockFontFamily);return element})),asyncRenderCallback:()=>this._onDidRenderAsync.fire(),actionHandler:{callback:content=>this._openerService.open(content,{fromUserGesture:!0,allowContributedOpeners:!0,allowCommands:markdown.isTrusted}).catch(_base_common_errors_js__WEBPACK_IMPORTED_MODULE_3__/* .onUnexpectedError */.dL),disposables:disposeables}}}};MarkdownRenderer._ttpTokenizer=null===(_a=window.trustedTypes)||void 0===_a?void 0:_a.createPolicy("tokenizeToString",{createHTML(value,languageIdCodec,tokenizer){return(0,_common_modes_textToHtmlTokenizer_js__WEBPACK_IMPORTED_MODULE_4__/* .tokenizeToString */.C)(value,languageIdCodec,tokenizer)}}),MarkdownRenderer=__decorate([__param(1,_common_services_modeService_js__WEBPACK_IMPORTED_MODULE_2__/* .IModeService */.h),__param(2,_platform_opener_common_opener_js__WEBPACK_IMPORTED_MODULE_1__/* .IOpenerService */.v4)],MarkdownRenderer)},
/***/65520:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
/* harmony export */__webpack_require__.d(__webpack_exports__,{
/* harmony export */CL:function(){/* binding */return isCodeEditor},
/* harmony export */Pi:function(){/* binding */return getCodeEditor},
/* harmony export */QI:function(){/* binding */return isDiffEditor}
/* harmony export */});
/* harmony import */var _common_editorCommon_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(296518);
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
/**
 *@internal
 */function isCodeEditor(thing){return!(!thing||"function"!==typeof thing.getEditorType)&&thing.getEditorType()===_common_editorCommon_js__WEBPACK_IMPORTED_MODULE_0__/* .EditorType */.g.ICodeEditor}
/**
 *@internal
 */function isDiffEditor(thing){return!(!thing||"function"!==typeof thing.getEditorType)&&thing.getEditorType()===_common_editorCommon_js__WEBPACK_IMPORTED_MODULE_0__/* .EditorType */.g.IDiffEditor}
/**
 *@internal
 */function getCodeEditor(thing){return isCodeEditor(thing)?thing:isDiffEditor(thing)?thing.getModifiedEditor():null}
/***/},
/***/616830:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
/* harmony export */__webpack_require__.d(__webpack_exports__,{
/* harmony export */AJ:function(){/* binding */return MultiCommand},
/* harmony export */QG:function(){/* binding */return registerInstantiatedEditorAction},
/* harmony export */Qr:function(){/* binding */return registerEditorAction},
/* harmony export */R6:function(){/* binding */return EditorAction},
/* harmony export */Sq:function(){/* binding */return SelectAllCommand},
/* harmony export */Uc:function(){/* binding */return EditorExtensionsRegistry},
/* harmony export */_K:function(){/* binding */return registerEditorContribution},
/* harmony export */_l:function(){/* binding */return EditorCommand},
/* harmony export */f:function(){/* binding */return registerModelCommand},
/* harmony export */fK:function(){/* binding */return registerEditorCommand},
/* harmony export */jY:function(){/* binding */return MultiEditorAction},
/* harmony export */kz:function(){/* binding */return RedoCommand},
/* harmony export */mY:function(){/* binding */return Command},
/* harmony export */n_:function(){/* binding */return UndoCommand},
/* harmony export */rn:function(){/* binding */return registerMultiEditorAction},
/* harmony export */sb:function(){/* binding */return registerModelAndPositionCommand}
/* harmony export */});
/* unused harmony export ProxyCommand */
/* harmony import */var EditorExtensionsRegistry,_nls_js__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(663580),_base_common_uri_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(70666),_services_codeEditorService_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(611640),_common_core_position_js__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(50187),_common_services_modelService_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(151200),_common_services_resolverService_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(288216),_platform_actions_common_actions_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(784144),_platform_commands_common_commands_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(820942),_platform_contextkey_common_contextkey_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(938819),_platform_keybinding_common_keybindingsRegistry_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(49989),_platform_registry_common_platform_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(789872),_platform_telemetry_common_telemetry_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(10829),_base_common_types_js__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(998401),_platform_log_common_log_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(43557);
/* harmony import */
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class Command{constructor(opts){this.id=opts.id,this.precondition=opts.precondition,this._kbOpts=opts.kbOpts,this._menuOpts=opts.menuOpts,this._description=opts.description}register(){if(Array.isArray(this._menuOpts)?this._menuOpts.forEach(this._registerMenuItem,this):this._menuOpts&&this._registerMenuItem(this._menuOpts),this._kbOpts){const kbOptsArr=Array.isArray(this._kbOpts)?this._kbOpts:[this._kbOpts];for(const kbOpts of kbOptsArr){let kbWhen=kbOpts.kbExpr;this.precondition&&(kbWhen=kbWhen?_platform_contextkey_common_contextkey_js__WEBPACK_IMPORTED_MODULE_6__/* .ContextKeyExpr */.Ao.and(kbWhen,this.precondition):this.precondition);const desc={id:this.id,weight:kbOpts.weight,args:kbOpts.args,when:kbWhen,primary:kbOpts.primary,secondary:kbOpts.secondary,win:kbOpts.win,linux:kbOpts.linux,mac:kbOpts.mac};_platform_keybinding_common_keybindingsRegistry_js__WEBPACK_IMPORTED_MODULE_7__/* .KeybindingsRegistry */.W.registerKeybindingRule(desc)}}_platform_commands_common_commands_js__WEBPACK_IMPORTED_MODULE_5__/* .CommandsRegistry */.P.registerCommand({id:this.id,handler:(accessor,args)=>this.runCommand(accessor,args),description:this._description})}_registerMenuItem(item){_platform_actions_common_actions_js__WEBPACK_IMPORTED_MODULE_4__/* .MenuRegistry */.BH.appendMenuItem(item.menuId,{group:item.group,command:{id:this.id,title:item.title,icon:item.icon,precondition:this.precondition},when:item.when,order:item.order})}}class MultiCommand extends Command{constructor(){super(...arguments),this._implementations=[]}
/**
     * A higher priority gets to be looked at first
     */addImplementation(priority,name,implementation){return this._implementations.push({priority:priority,name:name,implementation:implementation}),this._implementations.sort(((a,b)=>b.priority-a.priority)),{dispose:()=>{for(let i=0;i<this._implementations.length;i++)if(this._implementations[i].implementation===implementation)return void this._implementations.splice(i,1)}}}runCommand(accessor,args){const logService=accessor.get(_platform_log_common_log_js__WEBPACK_IMPORTED_MODULE_10__/* .ILogService */.VZ);logService.trace(`Executing Command '${this.id}' which has ${this._implementations.length} bound.`);for(const impl of this._implementations){const result=impl.implementation(accessor,args);if(result){if(logService.trace(`Command '${this.id}' was handled by '${impl.name}'.`),"boolean"===typeof result)return;return result}}logService.trace(`The Command '${this.id}' was not handled by any implementation.`)}}
//#endregion
/**
 * A command that delegates to another command's implementation.
 *
 * This lets different commands be registered but share the same implementation
 */class ProxyCommand extends Command{constructor(command,opts){super(opts),this.command=command}runCommand(accessor,args){return this.command.runCommand(accessor,args)}}class EditorCommand extends Command{
/**
     * Create a command class that is bound to a certain editor contribution.
     */
static bindToContribution(controllerGetter){return class extends EditorCommand{constructor(opts){super(opts),this._callback=opts.handler}runEditorCommand(accessor,editor,args){const controller=controllerGetter(editor);controller&&this._callback(controllerGetter(editor),args)}}}runCommand(accessor,args){const codeEditorService=accessor.get(_services_codeEditorService_js__WEBPACK_IMPORTED_MODULE_1__/* .ICodeEditorService */.$),editor=codeEditorService.getFocusedCodeEditor()||codeEditorService.getActiveCodeEditor();
// Find the editor with text focus or active
if(editor)return editor.invokeWithinContext((editorAccessor=>{const kbService=editorAccessor.get(_platform_contextkey_common_contextkey_js__WEBPACK_IMPORTED_MODULE_6__/* .IContextKeyService */.i6);if(kbService.contextMatchesRules((0,_base_common_types_js__WEBPACK_IMPORTED_MODULE_11__/* .withNullAsUndefined */.f6)(this.precondition)))return this.runEditorCommand(editorAccessor,editor,args)}))}}class EditorAction extends EditorCommand{constructor(opts){super(EditorAction.convertOptions(opts)),this.label=opts.label,this.alias=opts.alias}static convertOptions(opts){let menuOpts;function withDefaults(item){return item.menuId||(item.menuId=_platform_actions_common_actions_js__WEBPACK_IMPORTED_MODULE_4__/* .MenuId */.eH.EditorContext),item.title||(item.title=opts.label),item.when=_platform_contextkey_common_contextkey_js__WEBPACK_IMPORTED_MODULE_6__/* .ContextKeyExpr */.Ao.and(opts.precondition,item.when),item}return menuOpts=Array.isArray(opts.menuOpts)?opts.menuOpts:opts.menuOpts?[opts.menuOpts]:[],Array.isArray(opts.contextMenuOpts)?menuOpts.push(...opts.contextMenuOpts.map(withDefaults)):opts.contextMenuOpts&&menuOpts.push(withDefaults(opts.contextMenuOpts)),opts.menuOpts=menuOpts,opts}runEditorCommand(accessor,editor,args){return this.reportTelemetry(accessor,editor),this.run(accessor,editor,args||{})}reportTelemetry(accessor,editor){accessor.get(_platform_telemetry_common_telemetry_js__WEBPACK_IMPORTED_MODULE_9__/* .ITelemetryService */.b).publicLog2("editorActionInvoked",{name:this.label,id:this.id})}}class MultiEditorAction extends EditorAction{constructor(){super(...arguments),this._implementations=[]}
/**
     * A higher priority gets to be looked at first
     */addImplementation(priority,implementation){return this._implementations.push([priority,implementation]),this._implementations.sort(((a,b)=>b[0]-a[0])),{dispose:()=>{for(let i=0;i<this._implementations.length;i++)if(this._implementations[i][1]===implementation)return void this._implementations.splice(i,1)}}}run(accessor,editor,args){for(const impl of this._implementations){const result=impl[1](accessor,editor,args);if(result){if("boolean"===typeof result)return;return result}}}}
//#endregion
// --- Registration of commands and actions
function registerModelAndPositionCommand(id,handler){_platform_commands_common_commands_js__WEBPACK_IMPORTED_MODULE_5__/* .CommandsRegistry */.P.registerCommand(id,(function(accessor,...args){const[resource,position]=args;(0,_base_common_types_js__WEBPACK_IMPORTED_MODULE_11__/* .assertType */.p_)(_base_common_uri_js__WEBPACK_IMPORTED_MODULE_0__/* .URI */.o.isUri(resource)),(0,_base_common_types_js__WEBPACK_IMPORTED_MODULE_11__/* .assertType */.p_)(_common_core_position_js__WEBPACK_IMPORTED_MODULE_12__/* .Position */.L.isIPosition(position));const model=accessor.get(_common_services_modelService_js__WEBPACK_IMPORTED_MODULE_2__/* .IModelService */.q).getModel(resource);if(model){const editorPosition=_common_core_position_js__WEBPACK_IMPORTED_MODULE_12__/* .Position */.L.lift(position);return handler(model,editorPosition,...args.slice(2))}return accessor.get(_common_services_resolverService_js__WEBPACK_IMPORTED_MODULE_3__/* .ITextModelService */.S).createModelReference(resource).then((reference=>new Promise(((resolve,reject)=>{try{const result=handler(reference.object.textEditorModel,_common_core_position_js__WEBPACK_IMPORTED_MODULE_12__/* .Position */.L.lift(position),args.slice(2));resolve(result)}catch(err){reject(err)}})).finally((()=>{reference.dispose()}))))}))}function registerModelCommand(id,handler){_platform_commands_common_commands_js__WEBPACK_IMPORTED_MODULE_5__/* .CommandsRegistry */.P.registerCommand(id,(function(accessor,...args){const[resource]=args;(0,_base_common_types_js__WEBPACK_IMPORTED_MODULE_11__/* .assertType */.p_)(_base_common_uri_js__WEBPACK_IMPORTED_MODULE_0__/* .URI */.o.isUri(resource));const model=accessor.get(_common_services_modelService_js__WEBPACK_IMPORTED_MODULE_2__/* .IModelService */.q).getModel(resource);return model?handler(model,...args.slice(1)):accessor.get(_common_services_resolverService_js__WEBPACK_IMPORTED_MODULE_3__/* .ITextModelService */.S).createModelReference(resource).then((reference=>new Promise(((resolve,reject)=>{try{const result=handler(reference.object.textEditorModel,args.slice(1));resolve(result)}catch(err){reject(err)}})).finally((()=>{reference.dispose()}))))}))}function registerEditorCommand(editorCommand){return EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand),editorCommand}function registerEditorAction(ctor){const action=new ctor;return EditorContributionRegistry.INSTANCE.registerEditorAction(action),action}function registerMultiEditorAction(action){return EditorContributionRegistry.INSTANCE.registerEditorAction(action),action}function registerInstantiatedEditorAction(editorAction){EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction)}function registerEditorContribution(id,ctor){EditorContributionRegistry.INSTANCE.registerEditorContribution(id,ctor)}(function(EditorExtensionsRegistry){function getEditorCommand(commandId){return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId)}function getEditorActions(){return EditorContributionRegistry.INSTANCE.getEditorActions()}function getEditorContributions(){return EditorContributionRegistry.INSTANCE.getEditorContributions()}function getSomeEditorContributions(ids){return EditorContributionRegistry.INSTANCE.getEditorContributions().filter((c=>ids.indexOf(c.id)>=0))}function getDiffEditorContributions(){return EditorContributionRegistry.INSTANCE.getDiffEditorContributions()}EditorExtensionsRegistry.getEditorCommand=getEditorCommand,EditorExtensionsRegistry.getEditorActions=getEditorActions,EditorExtensionsRegistry.getEditorContributions=getEditorContributions,EditorExtensionsRegistry.getSomeEditorContributions=getSomeEditorContributions,EditorExtensionsRegistry.getDiffEditorContributions=getDiffEditorContributions})(EditorExtensionsRegistry||(EditorExtensionsRegistry={}));
// Editor extension points
const Extensions={EditorCommonContributions:"editor.contributions"};class EditorContributionRegistry{constructor(){this.editorContributions=[],this.diffEditorContributions=[],this.editorActions=[],this.editorCommands=Object.create(null)}registerEditorContribution(id,ctor){this.editorContributions.push({id:id,ctor:ctor})}getEditorContributions(){return this.editorContributions.slice(0)}getDiffEditorContributions(){return this.diffEditorContributions.slice(0)}registerEditorAction(action){action.register(),this.editorActions.push(action)}getEditorActions(){return this.editorActions.slice(0)}registerEditorCommand(editorCommand){editorCommand.register(),this.editorCommands[editorCommand.id]=editorCommand}getEditorCommand(commandId){return this.editorCommands[commandId]||null}}function registerCommand(command){return command.register(),command}EditorContributionRegistry.INSTANCE=new EditorContributionRegistry,_platform_registry_common_platform_js__WEBPACK_IMPORTED_MODULE_8__/* .Registry */.B.add(Extensions.EditorCommonContributions,EditorContributionRegistry.INSTANCE);const UndoCommand=registerCommand(new MultiCommand({id:"undo",precondition:void 0,kbOpts:{weight:0/* EditorCore */,primary:2104/* KeyZ */},menuOpts:[{menuId:_platform_actions_common_actions_js__WEBPACK_IMPORTED_MODULE_4__/* .MenuId */.eH.MenubarEditMenu,group:"1_do",title:_nls_js__WEBPACK_IMPORTED_MODULE_13__/* .localize */.N({key:"miUndo",comment:["&& denotes a mnemonic"]},"&&Undo"),order:1},{menuId:_platform_actions_common_actions_js__WEBPACK_IMPORTED_MODULE_4__/* .MenuId */.eH.CommandPalette,group:"",title:_nls_js__WEBPACK_IMPORTED_MODULE_13__/* .localize */.N("undo","Undo"),order:1}]}));registerCommand(new ProxyCommand(UndoCommand,{id:"default:undo",precondition:void 0}));const RedoCommand=registerCommand(new MultiCommand({id:"redo",precondition:void 0,kbOpts:{weight:0/* EditorCore */,primary:2103/* KeyY */,secondary:[3128/* KeyZ */],mac:{primary:3128/* KeyZ */}},menuOpts:[{menuId:_platform_actions_common_actions_js__WEBPACK_IMPORTED_MODULE_4__/* .MenuId */.eH.MenubarEditMenu,group:"1_do",title:_nls_js__WEBPACK_IMPORTED_MODULE_13__/* .localize */.N({key:"miRedo",comment:["&& denotes a mnemonic"]},"&&Redo"),order:2},{menuId:_platform_actions_common_actions_js__WEBPACK_IMPORTED_MODULE_4__/* .MenuId */.eH.CommandPalette,group:"",title:_nls_js__WEBPACK_IMPORTED_MODULE_13__/* .localize */.N("redo","Redo"),order:1}]}));registerCommand(new ProxyCommand(RedoCommand,{id:"default:redo",precondition:void 0}));const SelectAllCommand=registerCommand(new MultiCommand({id:"editor.action.selectAll",precondition:void 0,kbOpts:{weight:0/* EditorCore */,kbExpr:null,primary:2079/* KeyA */},menuOpts:[{menuId:_platform_actions_common_actions_js__WEBPACK_IMPORTED_MODULE_4__/* .MenuId */.eH.MenubarSelectionMenu,group:"1_basic",title:_nls_js__WEBPACK_IMPORTED_MODULE_13__/* .localize */.N({key:"miSelectAll",comment:["&& denotes a mnemonic"]},"&&Select All"),order:1},{menuId:_platform_actions_common_actions_js__WEBPACK_IMPORTED_MODULE_4__/* .MenuId */.eH.CommandPalette,group:"",title:_nls_js__WEBPACK_IMPORTED_MODULE_13__/* .localize */.N("selectAll","Select All"),order:1}]}));
/***/},
/***/966007:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
/* harmony export */__webpack_require__.d(__webpack_exports__,{
/* harmony export */Gl:function(){/* binding */return ResourceTextEdit},
/* harmony export */fo:function(){/* binding */return ResourceEdit},
/* harmony export */vu:function(){/* binding */return IBulkEditService}
/* harmony export */});
/* unused harmony export ResourceFileEdit */
/* harmony import */var _platform_instantiation_common_instantiation_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(472065),_base_common_uri_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(70666),_base_common_types_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(998401);
/* harmony import */
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
const IBulkEditService=(0,_platform_instantiation_common_instantiation_js__WEBPACK_IMPORTED_MODULE_0__/* .createDecorator */.yh)("IWorkspaceEditService");function isWorkspaceFileEdit(thing){return(0,_base_common_types_js__WEBPACK_IMPORTED_MODULE_2__/* .isObject */.Kn)(thing)&&(Boolean(thing.newUri)||Boolean(thing.oldUri))}function isWorkspaceTextEdit(thing){return(0,_base_common_types_js__WEBPACK_IMPORTED_MODULE_2__/* .isObject */.Kn)(thing)&&_base_common_uri_js__WEBPACK_IMPORTED_MODULE_1__/* .URI */.o.isUri(thing.resource)&&(0,_base_common_types_js__WEBPACK_IMPORTED_MODULE_2__/* .isObject */.Kn)(thing.edit)}class ResourceEdit{constructor(metadata){this.metadata=metadata}static convert(edit){return edit.edits.map((edit=>{if(isWorkspaceTextEdit(edit))return new ResourceTextEdit(edit.resource,edit.edit,edit.modelVersionId,edit.metadata);if(isWorkspaceFileEdit(edit))return new ResourceFileEdit(edit.oldUri,edit.newUri,edit.options,edit.metadata);throw new Error("Unsupported edit")}))}}class ResourceTextEdit extends ResourceEdit{constructor(resource,textEdit,versionId,metadata){super(metadata),this.resource=resource,this.textEdit=textEdit,this.versionId=versionId}}class ResourceFileEdit extends ResourceEdit{constructor(oldResource,newResource,options,metadata){super(metadata),this.oldResource=oldResource,this.newResource=newResource,this.options=options}}
/***/},
/***/611640:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
/* harmony export */__webpack_require__.d(__webpack_exports__,{
/* harmony export */$:function(){/* binding */return ICodeEditorService}
/* harmony export */});
/* harmony import */var _platform_instantiation_common_instantiation_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(472065);
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/const ICodeEditorService=(0,_platform_instantiation_common_instantiation_js__WEBPACK_IMPORTED_MODULE_0__/* .createDecorator */.yh)("codeEditorService");
/***/},
/***/97562:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
// EXPORTS
__webpack_require__.d(__webpack_exports__,{w3:function(){/* binding */return CodeEditorServiceImpl}});
// UNUSED EXPORTS: DecorationSubTypeOptionsProvider, DecorationTypeOptionsProvider, GlobalStyleSheet, RefCountedStyleSheet, _CSS_MAP
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/base/browser/dom.js
var dom=__webpack_require__(965321),lifecycle=__webpack_require__(905976),strings=__webpack_require__(697295),uri=__webpack_require__(70666),common_event=__webpack_require__(104669);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js
// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/services/abstractCodeEditorService.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class AbstractCodeEditorService extends lifecycle/* Disposable */.JT{constructor(){super(),this._onCodeEditorAdd=this._register(new common_event/* Emitter */.Q5),this.onCodeEditorAdd=this._onCodeEditorAdd.event,this._onCodeEditorRemove=this._register(new common_event/* Emitter */.Q5),this.onCodeEditorRemove=this._onCodeEditorRemove.event,this._onDiffEditorAdd=this._register(new common_event/* Emitter */.Q5),this._onDiffEditorRemove=this._register(new common_event/* Emitter */.Q5),this._onDecorationTypeRegistered=this._register(new common_event/* Emitter */.Q5),this._modelProperties=new Map,this._codeEditors=Object.create(null),this._diffEditors=Object.create(null)}addCodeEditor(editor){this._codeEditors[editor.getId()]=editor,this._onCodeEditorAdd.fire(editor)}removeCodeEditor(editor){delete this._codeEditors[editor.getId()]&&this._onCodeEditorRemove.fire(editor)}listCodeEditors(){return Object.keys(this._codeEditors).map((id=>this._codeEditors[id]))}addDiffEditor(editor){this._diffEditors[editor.getId()]=editor,this._onDiffEditorAdd.fire(editor)}removeDiffEditor(editor){delete this._diffEditors[editor.getId()]&&this._onDiffEditorRemove.fire(editor)}listDiffEditors(){return Object.keys(this._diffEditors).map((id=>this._diffEditors[id]))}getFocusedCodeEditor(){let editorWithWidgetFocus=null;const editors=this.listCodeEditors();for(const editor of editors){if(editor.hasTextFocus())
// bingo!
return editor;editor.hasWidgetFocus()&&(editorWithWidgetFocus=editor)}return editorWithWidgetFocus}setModelProperty(resource,key,value){const key1=resource.toString();let dest;this._modelProperties.has(key1)?dest=this._modelProperties.get(key1):(dest=new Map,this._modelProperties.set(key1,dest)),dest.set(key,value)}getModelProperty(resource,key){const key1=resource.toString();if(this._modelProperties.has(key1)){const innerMap=this._modelProperties.get(key1);return innerMap.get(key)}}}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/editorCommon.js
var editorCommon=__webpack_require__(296518),model=__webpack_require__(984973),themeService=__webpack_require__(897781),__decorate=function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/model.js
class RefCountedStyleSheet{constructor(parent,editorId,styleSheet){this._parent=parent,this._editorId=editorId,this._styleSheet=styleSheet,this._refCount=0}ref(){this._refCount++}unref(){var _a;this._refCount--,0===this._refCount&&(null===(_a=this._styleSheet.parentNode)||void 0===_a||_a.removeChild(this._styleSheet),this._parent._removeEditorStyleSheets(this._editorId))}insertRule(rule,index){const sheet=this._styleSheet.sheet;sheet.insertRule(rule,index)}removeRulesContainingSelector(ruleName){dom/* removeCSSRulesContainingSelector */.uN(ruleName,this._styleSheet)}}class GlobalStyleSheet{constructor(styleSheet){this._styleSheet=styleSheet}ref(){}unref(){}insertRule(rule,index){const sheet=this._styleSheet.sheet;sheet.insertRule(rule,index)}removeRulesContainingSelector(ruleName){dom/* removeCSSRulesContainingSelector */.uN(ruleName,this._styleSheet)}}let CodeEditorServiceImpl=class extends AbstractCodeEditorService{constructor(styleSheet,themeService){super(),this._decorationOptionProviders=new Map,this._editorStyleSheets=new Map,this._globalStyleSheet=styleSheet||null,this._themeService=themeService}_getOrCreateGlobalStyleSheet(){return this._globalStyleSheet||(this._globalStyleSheet=new GlobalStyleSheet(dom/* createStyleSheet */.dS())),this._globalStyleSheet}_getOrCreateStyleSheet(editor){if(!editor)return this._getOrCreateGlobalStyleSheet();const domNode=editor.getContainerDomNode();if(!dom/* isInShadowDOM */.OO(domNode))return this._getOrCreateGlobalStyleSheet();const editorId=editor.getId();if(!this._editorStyleSheets.has(editorId)){const refCountedStyleSheet=new RefCountedStyleSheet(this,editorId,dom/* createStyleSheet */.dS(domNode));this._editorStyleSheets.set(editorId,refCountedStyleSheet)}return this._editorStyleSheets.get(editorId)}_removeEditorStyleSheets(editorId){this._editorStyleSheets.delete(editorId)}registerDecorationType(description,key,options,parentTypeKey,editor){let provider=this._decorationOptionProviders.get(key);if(!provider){const styleSheet=this._getOrCreateStyleSheet(editor),providerArgs={styleSheet:styleSheet,key:key,parentTypeKey:parentTypeKey,options:options||Object.create(null)};provider=parentTypeKey?new DecorationSubTypeOptionsProvider(this._themeService,styleSheet,providerArgs):new DecorationTypeOptionsProvider(description,this._themeService,styleSheet,providerArgs),this._decorationOptionProviders.set(key,provider),this._onDecorationTypeRegistered.fire(key)}provider.refCount++}removeDecorationType(key){const provider=this._decorationOptionProviders.get(key);provider&&(provider.refCount--,provider.refCount<=0&&(this._decorationOptionProviders.delete(key),provider.dispose(),this.listCodeEditors().forEach((ed=>ed.removeDecorations(key)))))}resolveDecorationOptions(decorationTypeKey,writable){const provider=this._decorationOptionProviders.get(decorationTypeKey);if(!provider)throw new Error("Unknown decoration type key: "+decorationTypeKey);return provider.getOptions(this,writable)}};CodeEditorServiceImpl=__decorate([__param(1,themeService/* IThemeService */.XE)],CodeEditorServiceImpl);class DecorationSubTypeOptionsProvider{constructor(themeService,styleSheet,providerArgs){this._styleSheet=styleSheet,this._styleSheet.ref(),this._parentTypeKey=providerArgs.parentTypeKey,this.refCount=0,this._beforeContentRules=new DecorationCSSRules(3/* BeforeContentClassName */,providerArgs,themeService),this._afterContentRules=new DecorationCSSRules(4/* AfterContentClassName */,providerArgs,themeService)}getOptions(codeEditorService,writable){const options=codeEditorService.resolveDecorationOptions(this._parentTypeKey,!0);return this._beforeContentRules&&(options.beforeContentClassName=this._beforeContentRules.className),this._afterContentRules&&(options.afterContentClassName=this._afterContentRules.className),options}dispose(){this._beforeContentRules&&(this._beforeContentRules.dispose(),this._beforeContentRules=null),this._afterContentRules&&(this._afterContentRules.dispose(),this._afterContentRules=null),this._styleSheet.unref()}}class DecorationTypeOptionsProvider{constructor(description,themeService,styleSheet,providerArgs){this._disposables=new lifecycle/* DisposableStore */.SL,this.description=description,this._styleSheet=styleSheet,this._styleSheet.ref(),this.refCount=0;const createCSSRules=type=>{const rules=new DecorationCSSRules(type,providerArgs,themeService);if(this._disposables.add(rules),rules.hasContent)return rules.className},createInlineCSSRules=type=>{const rules=new DecorationCSSRules(type,providerArgs,themeService);return this._disposables.add(rules),rules.hasContent?{className:rules.className,hasLetterSpacing:rules.hasLetterSpacing}:null};this.className=createCSSRules(0/* ClassName */);const inlineData=createInlineCSSRules(1/* InlineClassName */);if(inlineData&&(this.inlineClassName=inlineData.className,this.inlineClassNameAffectsLetterSpacing=inlineData.hasLetterSpacing),this.beforeContentClassName=createCSSRules(3/* BeforeContentClassName */),this.afterContentClassName=createCSSRules(4/* AfterContentClassName */),providerArgs.options.beforeInjectedText&&providerArgs.options.beforeInjectedText.contentText){const beforeInlineData=createInlineCSSRules(5/* BeforeInjectedTextClassName */);this.beforeInjectedText={content:providerArgs.options.beforeInjectedText.contentText,inlineClassName:null===beforeInlineData||void 0===beforeInlineData?void 0:beforeInlineData.className,inlineClassNameAffectsLetterSpacing:(null===beforeInlineData||void 0===beforeInlineData?void 0:beforeInlineData.hasLetterSpacing)||providerArgs.options.beforeInjectedText.affectsLetterSpacing}}if(providerArgs.options.afterInjectedText&&providerArgs.options.afterInjectedText.contentText){const afterInlineData=createInlineCSSRules(6/* AfterInjectedTextClassName */);this.afterInjectedText={content:providerArgs.options.afterInjectedText.contentText,inlineClassName:null===afterInlineData||void 0===afterInlineData?void 0:afterInlineData.className,inlineClassNameAffectsLetterSpacing:(null===afterInlineData||void 0===afterInlineData?void 0:afterInlineData.hasLetterSpacing)||providerArgs.options.afterInjectedText.affectsLetterSpacing}}this.glyphMarginClassName=createCSSRules(2/* GlyphMarginClassName */);const options=providerArgs.options;this.isWholeLine=Boolean(options.isWholeLine),this.stickiness=options.rangeBehavior;const lightOverviewRulerColor=options.light&&options.light.overviewRulerColor||options.overviewRulerColor,darkOverviewRulerColor=options.dark&&options.dark.overviewRulerColor||options.overviewRulerColor;"undefined"===typeof lightOverviewRulerColor&&"undefined"===typeof darkOverviewRulerColor||(this.overviewRuler={color:lightOverviewRulerColor||darkOverviewRulerColor,darkColor:darkOverviewRulerColor||lightOverviewRulerColor,position:options.overviewRulerLane||model/* OverviewRulerLane */.sh.Center})}getOptions(codeEditorService,writable){return writable?{description:this.description,inlineClassName:this.inlineClassName,beforeContentClassName:this.beforeContentClassName,afterContentClassName:this.afterContentClassName,className:this.className,glyphMarginClassName:this.glyphMarginClassName,isWholeLine:this.isWholeLine,overviewRuler:this.overviewRuler,stickiness:this.stickiness,before:this.beforeInjectedText,after:this.afterInjectedText}:this}dispose(){this._disposables.dispose(),this._styleSheet.unref()}}const _CSS_MAP={color:"color:{0} !important;",opacity:"opacity:{0};",backgroundColor:"background-color:{0};",outline:"outline:{0};",outlineColor:"outline-color:{0};",outlineStyle:"outline-style:{0};",outlineWidth:"outline-width:{0};",border:"border:{0};",borderColor:"border-color:{0};",borderRadius:"border-radius:{0};",borderSpacing:"border-spacing:{0};",borderStyle:"border-style:{0};",borderWidth:"border-width:{0};",fontStyle:"font-style:{0};",fontWeight:"font-weight:{0};",fontSize:"font-size:{0};",fontFamily:"font-family:{0};",textDecoration:"text-decoration:{0};",cursor:"cursor:{0};",letterSpacing:"letter-spacing:{0};",gutterIconPath:"background:{0} center center no-repeat;",gutterIconSize:"background-size:{0};",contentText:"content:'{0}';",contentIconPath:"content:{0};",margin:"margin:{0};",padding:"padding:{0};",width:"width:{0};",height:"height:{0};",verticalAlign:"vertical-align:{0};"};class DecorationCSSRules{constructor(ruleType,providerArgs,themeService){this._theme=themeService.getColorTheme(),this._ruleType=ruleType,this._providerArgs=providerArgs,this._usesThemeColors=!1,this._hasContent=!1,this._hasLetterSpacing=!1;let className=CSSNameHelper.getClassName(this._providerArgs.key,ruleType);this._providerArgs.parentTypeKey&&(className=className+" "+CSSNameHelper.getClassName(this._providerArgs.parentTypeKey,ruleType)),this._className=className,this._unThemedSelector=CSSNameHelper.getSelector(this._providerArgs.key,this._providerArgs.parentTypeKey,ruleType),this._buildCSS(),this._usesThemeColors?this._themeListener=themeService.onDidColorThemeChange((theme=>{this._theme=themeService.getColorTheme(),this._removeCSS(),this._buildCSS()})):this._themeListener=null}dispose(){this._hasContent&&(this._removeCSS(),this._hasContent=!1),this._themeListener&&(this._themeListener.dispose(),this._themeListener=null)}get hasContent(){return this._hasContent}get hasLetterSpacing(){return this._hasLetterSpacing}get className(){return this._className}_buildCSS(){const options=this._providerArgs.options;let unthemedCSS,lightCSS,darkCSS;switch(this._ruleType){case 0/* ClassName */:unthemedCSS=this.getCSSTextForModelDecorationClassName(options),lightCSS=this.getCSSTextForModelDecorationClassName(options.light),darkCSS=this.getCSSTextForModelDecorationClassName(options.dark);break;case 1/* InlineClassName */:unthemedCSS=this.getCSSTextForModelDecorationInlineClassName(options),lightCSS=this.getCSSTextForModelDecorationInlineClassName(options.light),darkCSS=this.getCSSTextForModelDecorationInlineClassName(options.dark);break;case 2/* GlyphMarginClassName */:unthemedCSS=this.getCSSTextForModelDecorationGlyphMarginClassName(options),lightCSS=this.getCSSTextForModelDecorationGlyphMarginClassName(options.light),darkCSS=this.getCSSTextForModelDecorationGlyphMarginClassName(options.dark);break;case 3/* BeforeContentClassName */:unthemedCSS=this.getCSSTextForModelDecorationContentClassName(options.before),lightCSS=this.getCSSTextForModelDecorationContentClassName(options.light&&options.light.before),darkCSS=this.getCSSTextForModelDecorationContentClassName(options.dark&&options.dark.before);break;case 4/* AfterContentClassName */:unthemedCSS=this.getCSSTextForModelDecorationContentClassName(options.after),lightCSS=this.getCSSTextForModelDecorationContentClassName(options.light&&options.light.after),darkCSS=this.getCSSTextForModelDecorationContentClassName(options.dark&&options.dark.after);break;case 5/* BeforeInjectedTextClassName */:unthemedCSS=this.getCSSTextForModelDecorationContentClassName(options.beforeInjectedText),lightCSS=this.getCSSTextForModelDecorationContentClassName(options.light&&options.light.beforeInjectedText),darkCSS=this.getCSSTextForModelDecorationContentClassName(options.dark&&options.dark.beforeInjectedText);break;case 6/* AfterInjectedTextClassName */:unthemedCSS=this.getCSSTextForModelDecorationContentClassName(options.afterInjectedText),lightCSS=this.getCSSTextForModelDecorationContentClassName(options.light&&options.light.afterInjectedText),darkCSS=this.getCSSTextForModelDecorationContentClassName(options.dark&&options.dark.afterInjectedText);break;default:throw new Error("Unknown rule type: "+this._ruleType)}const sheet=this._providerArgs.styleSheet;let hasContent=!1;unthemedCSS.length>0&&(sheet.insertRule(`${this._unThemedSelector} {${unthemedCSS}}`,0),hasContent=!0),lightCSS.length>0&&(sheet.insertRule(`.vs${this._unThemedSelector} {${lightCSS}}`,0),hasContent=!0),darkCSS.length>0&&(sheet.insertRule(`.vs-dark${this._unThemedSelector}, .hc-black${this._unThemedSelector} {${darkCSS}}`,0),hasContent=!0),this._hasContent=hasContent}_removeCSS(){this._providerArgs.styleSheet.removeRulesContainingSelector(this._unThemedSelector)}
/**
     * Build the CSS for decorations styled via `className`.
     */getCSSTextForModelDecorationClassName(opts){if(!opts)return"";const cssTextArr=[];return this.collectCSSText(opts,["backgroundColor"],cssTextArr),this.collectCSSText(opts,["outline","outlineColor","outlineStyle","outlineWidth"],cssTextArr),this.collectBorderSettingsCSSText(opts,cssTextArr),cssTextArr.join("")}
/**
     * Build the CSS for decorations styled via `inlineClassName`.
     */getCSSTextForModelDecorationInlineClassName(opts){if(!opts)return"";const cssTextArr=[];return this.collectCSSText(opts,["fontStyle","fontWeight","textDecoration","cursor","color","opacity","letterSpacing"],cssTextArr),opts.letterSpacing&&(this._hasLetterSpacing=!0),cssTextArr.join("")}
/**
     * Build the CSS for decorations styled before or after content.
     */getCSSTextForModelDecorationContentClassName(opts){if(!opts)return"";const cssTextArr=[];if("undefined"!==typeof opts){if(this.collectBorderSettingsCSSText(opts,cssTextArr),"undefined"!==typeof opts.contentIconPath&&cssTextArr.push(strings/* format */.WU(_CSS_MAP.contentIconPath,dom/* asCSSUrl */.wY(uri/* URI */.o.revive(opts.contentIconPath)))),"string"===typeof opts.contentText){const truncated=opts.contentText.match(/^.*$/m)[0],escaped=truncated.replace(/['\\]/g,"\\$&");// only take first line
cssTextArr.push(strings/* format */.WU(_CSS_MAP.contentText,escaped))}this.collectCSSText(opts,["verticalAlign","fontStyle","fontWeight","fontSize","fontFamily","textDecoration","color","opacity","backgroundColor","margin","padding"],cssTextArr),this.collectCSSText(opts,["width","height"],cssTextArr)&&cssTextArr.push("display:inline-block;")}return cssTextArr.join("")}
/**
     * Build the CSS for decorations styled via `glpyhMarginClassName`.
     */getCSSTextForModelDecorationGlyphMarginClassName(opts){if(!opts)return"";const cssTextArr=[];return"undefined"!==typeof opts.gutterIconPath&&(cssTextArr.push(strings/* format */.WU(_CSS_MAP.gutterIconPath,dom/* asCSSUrl */.wY(uri/* URI */.o.revive(opts.gutterIconPath)))),"undefined"!==typeof opts.gutterIconSize&&cssTextArr.push(strings/* format */.WU(_CSS_MAP.gutterIconSize,opts.gutterIconSize))),cssTextArr.join("")}collectBorderSettingsCSSText(opts,cssTextArr){return!!this.collectCSSText(opts,["border","borderColor","borderRadius","borderSpacing","borderStyle","borderWidth"],cssTextArr)&&(cssTextArr.push(strings/* format */.WU("box-sizing: border-box;")),!0)}collectCSSText(opts,properties,cssTextArr){const lenBefore=cssTextArr.length;for(let property of properties){const value=this.resolveValue(opts[property]);"string"===typeof value&&cssTextArr.push(strings/* format */.WU(_CSS_MAP[property],value))}return cssTextArr.length!==lenBefore}resolveValue(value){if((0,editorCommon/* isThemeColor */.I)(value)){this._usesThemeColors=!0;const color=this._theme.getColor(value.id);return color?color.toString():"transparent"}return value}}class CSSNameHelper{static getClassName(key,type){return"ced-"+key+"-"+type}static getSelector(key,parentKey,ruleType){let selector=".monaco-editor ."+this.getClassName(key,ruleType);return parentKey&&(selector=selector+"."+this.getClassName(parentKey,ruleType)),3/* BeforeContentClassName */===ruleType?selector+="::before":4/* AfterContentClassName */===ruleType&&(selector+="::after"),selector}}
/***/},
/***/742351:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
/* harmony export */__webpack_require__.d(__webpack_exports__,{
/* harmony export */B:function(){/* binding */return OpenerService}
/* harmony export */});
/* harmony import */var _base_browser_dom_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(965321),_base_common_cancellation_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(471050),_base_common_linkedList_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(791741),_base_common_map_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(843702),_base_common_marshalling_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(323897),_base_common_network_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(566663),_base_common_resources_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(195935),_base_common_uri_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(70666),_codeEditorService_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(611640),_platform_commands_common_commands_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(820942),_platform_editor_common_editor_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(122844),_platform_opener_common_opener_js__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(150988),__decorate=function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}},__awaiter=function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};
/* harmony import */let CommandOpener=class{constructor(_commandService){this._commandService=_commandService}open(target,options){return __awaiter(this,void 0,void 0,(function*(){if(!(0,_platform_opener_common_opener_js__WEBPACK_IMPORTED_MODULE_11__/* .matchesScheme */.xn)(target,_base_common_network_js__WEBPACK_IMPORTED_MODULE_5__/* .Schemas */.lg.command))return!1;if(!(null===options||void 0===options?void 0:options.allowCommands))
// silently ignore commands when command-links are disabled, also
// surpress other openers by returning TRUE
return!0;
// run command or bail out if command isn't known
"string"===typeof target&&(target=_base_common_uri_js__WEBPACK_IMPORTED_MODULE_7__/* .URI */.o.parse(target));
// execute as command
let args=[];try{args=(0,_base_common_marshalling_js__WEBPACK_IMPORTED_MODULE_4__/* .parse */.Q)(decodeURIComponent(target.query))}catch(_a){
// ignore and retry
try{args=(0,_base_common_marshalling_js__WEBPACK_IMPORTED_MODULE_4__/* .parse */.Q)(target.query)}catch(_b){
// ignore error
}}return Array.isArray(args)||(args=[args]),yield this._commandService.executeCommand(target.path,...args),!0}))}};CommandOpener=__decorate([__param(0,_platform_commands_common_commands_js__WEBPACK_IMPORTED_MODULE_9__/* .ICommandService */.H)],CommandOpener);let EditorOpener=class{constructor(_editorService){this._editorService=_editorService}open(target,options){return __awaiter(this,void 0,void 0,(function*(){let selection;"string"===typeof target&&(target=_base_common_uri_js__WEBPACK_IMPORTED_MODULE_7__/* .URI */.o.parse(target));const match=/^L?(\d+)(?:,(\d+))?/.exec(target.fragment);return match&&(
// support file:///some/file.js#73,84
// support file:///some/file.js#L73
selection={startLineNumber:parseInt(match[1]),startColumn:match[2]?parseInt(match[2]):1},
// remove fragment
target=target.with({fragment:""})),target.scheme===_base_common_network_js__WEBPACK_IMPORTED_MODULE_5__/* .Schemas */.lg.file&&(target=(0,_base_common_resources_js__WEBPACK_IMPORTED_MODULE_6__/* .normalizePath */.AH)(target)),yield this._editorService.openCodeEditor({resource:target,options:Object.assign({selection:selection,context:(null===options||void 0===options?void 0:options.fromUserGesture)?_platform_editor_common_editor_js__WEBPACK_IMPORTED_MODULE_10__/* .EditorOpenContext */.Y.USER:_platform_editor_common_editor_js__WEBPACK_IMPORTED_MODULE_10__/* .EditorOpenContext */.Y.API},null===options||void 0===options?void 0:options.editorOptions)},this._editorService.getFocusedCodeEditor(),null===options||void 0===options?void 0:options.openToSide),!0}))}};EditorOpener=__decorate([__param(0,_codeEditorService_js__WEBPACK_IMPORTED_MODULE_8__/* .ICodeEditorService */.$)],EditorOpener);let OpenerService=class{constructor(editorService,commandService){this._openers=new _base_common_linkedList_js__WEBPACK_IMPORTED_MODULE_2__/* .LinkedList */.S,this._validators=new _base_common_linkedList_js__WEBPACK_IMPORTED_MODULE_2__/* .LinkedList */.S,this._resolvers=new _base_common_linkedList_js__WEBPACK_IMPORTED_MODULE_2__/* .LinkedList */.S,this._resolvedUriTargets=new _base_common_map_js__WEBPACK_IMPORTED_MODULE_3__/* .ResourceMap */.Y9((uri=>uri.with({path:null,fragment:null,query:null}).toString())),this._externalOpeners=new _base_common_linkedList_js__WEBPACK_IMPORTED_MODULE_2__/* .LinkedList */.S,
// Default external opener is going through window.open()
this._defaultExternalOpener={openExternal:href=>__awaiter(this,void 0,void 0,(function*(){
// ensure to open HTTP/HTTPS links into new windows
// to not trigger a navigation. Any other link is
// safe to be set as HREF to prevent a blank window
// from opening.
return(0,_platform_opener_common_opener_js__WEBPACK_IMPORTED_MODULE_11__/* .matchesScheme */.xn)(href,_base_common_network_js__WEBPACK_IMPORTED_MODULE_5__/* .Schemas */.lg.http)||(0,_platform_opener_common_opener_js__WEBPACK_IMPORTED_MODULE_11__/* .matchesScheme */.xn)(href,_base_common_network_js__WEBPACK_IMPORTED_MODULE_5__/* .Schemas */.lg.https)?_base_browser_dom_js__WEBPACK_IMPORTED_MODULE_0__/* .windowOpenNoOpener */.V3(href):window.location.href=href,!0}))},
// Default opener: any external, maito, http(s), command, and catch-all-editors
this._openers.push({open:(target,options)=>__awaiter(this,void 0,void 0,(function*(){return!!((null===options||void 0===options?void 0:options.openExternal)||(0,_platform_opener_common_opener_js__WEBPACK_IMPORTED_MODULE_11__/* .matchesScheme */.xn)(target,_base_common_network_js__WEBPACK_IMPORTED_MODULE_5__/* .Schemas */.lg.mailto)||(0,_platform_opener_common_opener_js__WEBPACK_IMPORTED_MODULE_11__/* .matchesScheme */.xn)(target,_base_common_network_js__WEBPACK_IMPORTED_MODULE_5__/* .Schemas */.lg.http)||(0,_platform_opener_common_opener_js__WEBPACK_IMPORTED_MODULE_11__/* .matchesScheme */.xn)(target,_base_common_network_js__WEBPACK_IMPORTED_MODULE_5__/* .Schemas */.lg.https))&&(yield this._doOpenExternal(target,options),!0)}))}),this._openers.push(new CommandOpener(commandService)),this._openers.push(new EditorOpener(editorService))}registerOpener(opener){const remove=this._openers.unshift(opener);return{dispose:remove}}registerValidator(validator){const remove=this._validators.push(validator);return{dispose:remove}}registerExternalUriResolver(resolver){const remove=this._resolvers.push(resolver);return{dispose:remove}}setDefaultExternalOpener(externalOpener){this._defaultExternalOpener=externalOpener}registerExternalOpener(opener){const remove=this._externalOpeners.push(opener);return{dispose:remove}}open(target,options){var _a;return __awaiter(this,void 0,void 0,(function*(){
// check with contributed validators
const targetURI="string"===typeof target?_base_common_uri_js__WEBPACK_IMPORTED_MODULE_7__/* .URI */.o.parse(target):target,validationTarget=null!==(_a=this._resolvedUriTargets.get(targetURI))&&void 0!==_a?_a:target;
// validate against the original URI that this URI resolves to, if one exists
for(const validator of this._validators)if(!(yield validator.shouldOpen(validationTarget)))return!1;
// check with contributed openers
for(const opener of this._openers){const handled=yield opener.open(target,options);if(handled)return!0}return!1}))}resolveExternalUri(resource,options){return __awaiter(this,void 0,void 0,(function*(){for(const resolver of this._resolvers)try{const result=yield resolver.resolveExternalUri(resource,options);if(result)return this._resolvedUriTargets.has(result.resolved)||this._resolvedUriTargets.set(result.resolved,resource),result}catch(_a){
// noop
}throw new Error("Could not resolve external URI: "+resource.toString())}))}_doOpenExternal(resource,options){return __awaiter(this,void 0,void 0,(function*(){
//todo@jrieken IExternalUriResolver should support `uri: URI | string`
const uri="string"===typeof resource?_base_common_uri_js__WEBPACK_IMPORTED_MODULE_7__/* .URI */.o.parse(resource):resource;let externalUri,href;try{externalUri=(yield this.resolveExternalUri(uri,options)).resolved}catch(_a){externalUri=uri}if(
// open the url-string AS IS
href="string"===typeof resource&&uri.toString()===externalUri.toString()?resource:encodeURI(externalUri.toString(!0)),null===options||void 0===options?void 0:options.allowContributedOpeners){const preferredOpenerId="string"===typeof(null===options||void 0===options?void 0:options.allowContributedOpeners)?null===options||void 0===options?void 0:options.allowContributedOpeners:void 0;for(const opener of this._externalOpeners){const didOpen=yield opener.openExternal(href,{sourceUri:uri,preferredOpenerId:preferredOpenerId},_base_common_cancellation_js__WEBPACK_IMPORTED_MODULE_1__/* .CancellationToken */.T.None);if(didOpen)return!0}}return this._defaultExternalOpener.openExternal(href,{sourceUri:uri},_base_common_cancellation_js__WEBPACK_IMPORTED_MODULE_1__/* .CancellationToken */.T.None)}))}dispose(){this._validators.clear()}};OpenerService=__decorate([__param(0,_codeEditorService_js__WEBPACK_IMPORTED_MODULE_8__/* .ICodeEditorService */.$),__param(1,_platform_commands_common_commands_js__WEBPACK_IMPORTED_MODULE_9__/* .ICommandService */.H)],OpenerService)},
/***/8702:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
// EXPORTS
__webpack_require__.d(__webpack_exports__,{Gm:function(){/* binding */return CodeEditorWidget}});
// UNUSED EXPORTS: BooleanEventEmitter, EditorModeContext
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/services/markersDecorationService.js
var markersDecorationService=__webpack_require__(826479),editorExtensions=__webpack_require__(616830),__decorate=function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/editorExtensions.js
let MarkerDecorationsContribution=class{constructor(_editor,_markerDecorationsService){
// Doesn't do anything, just requires `IMarkerDecorationsService` to make sure it gets instantiated
}dispose(){}};MarkerDecorationsContribution.ID="editor.contrib.markerDecorations",MarkerDecorationsContribution=__decorate([__param(1,markersDecorationService/* IMarkerDecorationsService */.i)],MarkerDecorationsContribution),(0,editorExtensions/* registerEditorContribution */._K)(MarkerDecorationsContribution.ID,MarkerDecorationsContribution);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/nls.js
var nls=__webpack_require__(663580),dom=__webpack_require__(965321),errors=__webpack_require__(817301),common_event=__webpack_require__(104669),lifecycle=__webpack_require__(905976),network=__webpack_require__(566663),configuration=__webpack_require__(887917),codeEditorService=__webpack_require__(611640),browser=__webpack_require__(730747),core_selection=__webpack_require__(203860),fastDomNode=__webpack_require__(838626),platform=__webpack_require__(901432),touch=__webpack_require__(10553),mouseEvent=__webpack_require__(23938),common_async=__webpack_require__(715393),globalMouseMoveMonitor=__webpack_require__(457974);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/base/browser/dom.js
// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/editorDom.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
/**
 * Coordinates relative to the whole document (e.g. mouse event's pageX and pageY)
 */
class PageCoordinates{constructor(x,y){this.x=x,this.y=y,this._pageCoordinatesBrand=void 0}toClientCoordinates(){return new ClientCoordinates(this.x-dom/* StandardWindow */.DI.scrollX,this.y-dom/* StandardWindow */.DI.scrollY)}}
/**
 * Coordinates within the application's client area (i.e. origin is document's scroll position).
 *
 * For example, clicking in the top-left corner of the client area will
 * always result in a mouse event with a client.x value of 0, regardless
 * of whether the page is scrolled horizontally.
 */class ClientCoordinates{constructor(clientX,clientY){this.clientX=clientX,this.clientY=clientY,this._clientCoordinatesBrand=void 0}toPageCoordinates(){return new PageCoordinates(this.clientX+dom/* StandardWindow */.DI.scrollX,this.clientY+dom/* StandardWindow */.DI.scrollY)}}
/**
 * The position of the editor in the page.
 */class EditorPagePosition{constructor(x,y,width,height){this.x=x,this.y=y,this.width=width,this.height=height,this._editorPagePositionBrand=void 0}}function createEditorPagePosition(editorViewDomNode){const editorPos=dom/* getDomNodePagePosition */.i(editorViewDomNode);return new EditorPagePosition(editorPos.left,editorPos.top,editorPos.width,editorPos.height)}class EditorMouseEvent extends mouseEvent/* StandardMouseEvent */.n{constructor(e,editorViewDomNode){super(e),this._editorMouseEventBrand=void 0,this.pos=new PageCoordinates(this.posx,this.posy),this.editorPos=createEditorPagePosition(editorViewDomNode)}}class EditorMouseEventFactory{constructor(editorViewDomNode){this._editorViewDomNode=editorViewDomNode}_create(e){return new EditorMouseEvent(e,this._editorViewDomNode)}onContextMenu(target,callback){return dom/* addDisposableListener */.nm(target,"contextmenu",(e=>{callback(this._create(e))}))}onMouseUp(target,callback){return dom/* addDisposableListener */.nm(target,"mouseup",(e=>{callback(this._create(e))}))}onMouseDown(target,callback){return dom/* addDisposableListener */.nm(target,"mousedown",(e=>{callback(this._create(e))}))}onMouseLeave(target,callback){return dom/* addDisposableNonBubblingMouseOutListener */.j_(target,(e=>{callback(this._create(e))}))}onMouseMoveThrottled(target,callback,merger,minimumTimeMs){const myMerger=(lastEvent,currentEvent)=>merger(lastEvent,this._create(currentEvent));return dom/* addDisposableThrottledListener */.Y_(target,"mousemove",callback,myMerger,minimumTimeMs)}}class EditorPointerEventFactory{constructor(editorViewDomNode){this._editorViewDomNode=editorViewDomNode}_create(e){return new EditorMouseEvent(e,this._editorViewDomNode)}onPointerUp(target,callback){return dom/* addDisposableListener */.nm(target,"pointerup",(e=>{callback(this._create(e))}))}onPointerDown(target,callback){return dom/* addDisposableListener */.nm(target,"pointerdown",(e=>{callback(this._create(e))}))}onPointerLeave(target,callback){return dom/* addDisposableNonBubblingPointerOutListener */.RE(target,(e=>{callback(this._create(e))}))}onPointerMoveThrottled(target,callback,merger,minimumTimeMs){const myMerger=(lastEvent,currentEvent)=>merger(lastEvent,this._create(currentEvent));return dom/* addDisposableThrottledListener */.Y_(target,"pointermove",callback,myMerger,minimumTimeMs)}}class GlobalEditorMouseMoveMonitor extends lifecycle/* Disposable */.JT{constructor(editorViewDomNode){super(),this._editorViewDomNode=editorViewDomNode,this._globalMouseMoveMonitor=this._register(new globalMouseMoveMonitor/* GlobalMouseMoveMonitor */.Z),this._keydownListener=null}startMonitoring(initialElement,initialButtons,merger,mouseMoveCallback,onStopCallback){
// Add a <<capture>> keydown event listener that will cancel the monitoring
// if something other than a modifier key is pressed
this._keydownListener=dom/* addStandardDisposableListener */.mu(document,"keydown",(e=>{const kb=e.toKeybinding();kb.isModifierKey()||this._globalMouseMoveMonitor.stopMonitoring(!0,e.browserEvent)}),!0);const myMerger=(lastEvent,currentEvent)=>merger(lastEvent,new EditorMouseEvent(currentEvent,this._editorViewDomNode));this._globalMouseMoveMonitor.startMonitoring(initialElement,initialButtons,myMerger,mouseMoveCallback,(e=>{this._keydownListener.dispose(),onStopCallback(e)}))}stopMonitoring(){this._globalMouseMoveMonitor.stopMonitoring(!0)}}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/viewModel/viewEventHandler.js
var viewEventHandler=__webpack_require__(638272);// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/view/viewPart.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class ViewPart extends viewEventHandler/* ViewEventHandler */.O{constructor(context){super(),this._context=context,this._context.addEventHandler(this)}dispose(){this._context.removeEventHandler(this),super.dispose()}}class PartFingerprints{static write(target,partId){fastDomNode/* FastDomNode */.Z,target.setAttribute("data-mprt",String(partId))}static read(target){const r=target.getAttribute("data-mprt");return null===r?0/* None */:parseInt(r,10)}static collect(child,stopAt){let result=[],resultLen=0;while(child&&child!==document.body){if(child===stopAt)break;child.nodeType===child.ELEMENT_NODE&&(result[resultLen++]=this.read(child)),child=child.parentElement}const r=new Uint8Array(resultLen);for(let i=0;i<resultLen;i++)r[i]=result[resultLen-i-1];return r}}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/view/renderingContext.js
var view_renderingContext=__webpack_require__(953890);// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/rangeUtil.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class RangeUtil{static _createRange(){return this._handyReadyRange||(this._handyReadyRange=document.createRange()),this._handyReadyRange}static _detachRange(range,endNode){
// Move range out of the span node, IE doesn't like having many ranges in
// the same spot and will act badly for lines containing dashes ('-')
range.selectNodeContents(endNode)}static _readClientRects(startElement,startOffset,endElement,endOffset,endNode){const range=this._createRange();try{return range.setStart(startElement,startOffset),range.setEnd(endElement,endOffset),range.getClientRects()}catch(e){
// This is life ...
return null}finally{this._detachRange(range,endNode)}}static _mergeAdjacentRanges(ranges){if(1===ranges.length)
// There is nothing to merge
return ranges;ranges.sort(view_renderingContext/* FloatHorizontalRange */.CR.compare);let result=[],resultLen=0,prev=ranges[0];for(let i=1,len=ranges.length;i<len;i++){const range=ranges[i];prev.left+prev.width+.9/* account for browser's rounding errors*/>=range.left?prev.width=Math.max(prev.width,range.left+range.width-prev.left):(result[resultLen++]=prev,prev=range)}return result[resultLen++]=prev,result}static _createHorizontalRangesFromClientRects(clientRects,clientRectDeltaLeft){if(!clientRects||0===clientRects.length)return null;
// We go through FloatHorizontalRange because it has been observed in bi-di text
// that the clientRects are not coming in sorted from the browser
const result=[];for(let i=0,len=clientRects.length;i<len;i++){const clientRect=clientRects[i];result[i]=new view_renderingContext/* FloatHorizontalRange */.CR(Math.max(0,clientRect.left-clientRectDeltaLeft),clientRect.width)}return this._mergeAdjacentRanges(result)}static readHorizontalRanges(domNode,startChildIndex,startOffset,endChildIndex,endOffset,clientRectDeltaLeft,endNode){
// Panic check
const min=0,max=domNode.children.length-1;if(min>max)return null;if(startChildIndex=Math.min(max,Math.max(min,startChildIndex)),endChildIndex=Math.min(max,Math.max(min,endChildIndex)),startChildIndex===endChildIndex&&startOffset===endOffset&&0===startOffset&&!domNode.children[startChildIndex].firstChild){
// We must find the position at the beginning of a <span>
// To cover cases of empty <span>s, avoid using a range and use the <span>'s bounding box
const clientRects=domNode.children[startChildIndex].getClientRects();return this._createHorizontalRangesFromClientRects(clientRects,clientRectDeltaLeft)}
// If crossing over to a span only to select offset 0, then use the previous span's maximum offset
// Chrome is buggy and doesn't handle 0 offsets well sometimes.
startChildIndex!==endChildIndex&&endChildIndex>0&&0===endOffset&&(endChildIndex--,endOffset=1073741824/* MAX_SAFE_SMALL_INTEGER */);let startElement=domNode.children[startChildIndex].firstChild,endElement=domNode.children[endChildIndex].firstChild;if(startElement&&endElement||(
// When having an empty <span> (without any text content), try to move to the previous <span>
!startElement&&0===startOffset&&startChildIndex>0&&(startElement=domNode.children[startChildIndex-1].firstChild,startOffset=1073741824/* MAX_SAFE_SMALL_INTEGER */),!endElement&&0===endOffset&&endChildIndex>0&&(endElement=domNode.children[endChildIndex-1].firstChild,endOffset=1073741824/* MAX_SAFE_SMALL_INTEGER */)),!startElement||!endElement)return null;startOffset=Math.min(startElement.textContent.length,Math.max(0,startOffset)),endOffset=Math.min(endElement.textContent.length,Math.max(0,endOffset));const clientRects=this._readClientRects(startElement,startOffset,endElement,endOffset,endNode);return this._createHorizontalRangesFromClientRects(clientRects,clientRectDeltaLeft)}}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/viewLayout/lineDecorations.js
var lineDecorations=__webpack_require__(92550),viewLineRenderer=__webpack_require__(777736),theme=__webpack_require__(792321),editorOptions=__webpack_require__(364141);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/viewLayout/viewLineRenderer.js
// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLine.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
const canUseFastRenderedViewLine=function(){return!!platform/* isNative */.tY||!(platform/* isLinux */.IJ||browser/* isFirefox */.vU||browser/* isSafari */.G6)}();let monospaceAssumptionsAreValid=!0;class DomReadingContext{constructor(domNode,endNode){this._domNode=domNode,this._clientRectDeltaLeft=0,this._clientRectDeltaLeftRead=!1,this.endNode=endNode}get clientRectDeltaLeft(){return this._clientRectDeltaLeftRead||(this._clientRectDeltaLeftRead=!0,this._clientRectDeltaLeft=this._domNode.getBoundingClientRect().left),this._clientRectDeltaLeft}}class ViewLineOptions{constructor(config,themeType){this.themeType=themeType;const options=config.options,fontInfo=options.get(43/* fontInfo */);this.renderWhitespace=options.get(87/* renderWhitespace */),this.renderControlCharacters=options.get(82/* renderControlCharacters */),this.spaceWidth=fontInfo.spaceWidth,this.middotWidth=fontInfo.middotWidth,this.wsmiddotWidth=fontInfo.wsmiddotWidth,this.useMonospaceOptimizations=fontInfo.isMonospace&&!options.get(29/* disableMonospaceOptimizations */),this.canUseHalfwidthRightwardsArrow=fontInfo.canUseHalfwidthRightwardsArrow,this.lineHeight=options.get(58/* lineHeight */),this.stopRenderingLineAfter=options.get(104/* stopRenderingLineAfter */),this.fontLigatures=options.get(44/* fontLigatures */)}equals(other){return this.themeType===other.themeType&&this.renderWhitespace===other.renderWhitespace&&this.renderControlCharacters===other.renderControlCharacters&&this.spaceWidth===other.spaceWidth&&this.middotWidth===other.middotWidth&&this.wsmiddotWidth===other.wsmiddotWidth&&this.useMonospaceOptimizations===other.useMonospaceOptimizations&&this.canUseHalfwidthRightwardsArrow===other.canUseHalfwidthRightwardsArrow&&this.lineHeight===other.lineHeight&&this.stopRenderingLineAfter===other.stopRenderingLineAfter&&this.fontLigatures===other.fontLigatures}}class ViewLine{constructor(options){this._options=options,this._isMaybeInvalid=!0,this._renderedViewLine=null}
// --- begin IVisibleLineData
getDomNode(){return this._renderedViewLine&&this._renderedViewLine.domNode?this._renderedViewLine.domNode.domNode:null}setDomNode(domNode){if(!this._renderedViewLine)throw new Error("I have no rendered view line to set the dom node to...");this._renderedViewLine.domNode=(0,fastDomNode/* createFastDomNode */.X)(domNode)}onContentChanged(){this._isMaybeInvalid=!0}onTokensChanged(){this._isMaybeInvalid=!0}onDecorationsChanged(){this._isMaybeInvalid=!0}onOptionsChanged(newOptions){this._isMaybeInvalid=!0,this._options=newOptions}onSelectionChanged(){return(this._options.themeType===theme/* ColorScheme */.e.HIGH_CONTRAST||"selection"===this._options.renderWhitespace)&&(this._isMaybeInvalid=!0,!0)}renderLine(lineNumber,deltaTop,viewportData,sb){if(!1===this._isMaybeInvalid)
// it appears that nothing relevant has changed
return!1;this._isMaybeInvalid=!1;const lineData=viewportData.getViewLineRenderingData(lineNumber),options=this._options,actualInlineDecorations=lineDecorations/* LineDecoration */.Kp.filter(lineData.inlineDecorations,lineNumber,lineData.minColumn,lineData.maxColumn);
// Only send selection information when needed for rendering whitespace
let selectionsOnLine=null;if(options.themeType===theme/* ColorScheme */.e.HIGH_CONTRAST||"selection"===this._options.renderWhitespace){const selections=viewportData.selections;for(const selection of selections){if(selection.endLineNumber<lineNumber||selection.startLineNumber>lineNumber)
// Selection does not intersect line
continue;const startColumn=selection.startLineNumber===lineNumber?selection.startColumn:lineData.minColumn,endColumn=selection.endLineNumber===lineNumber?selection.endColumn:lineData.maxColumn;startColumn<endColumn&&(options.themeType===theme/* ColorScheme */.e.HIGH_CONTRAST||"selection"!==this._options.renderWhitespace?actualInlineDecorations.push(new lineDecorations/* LineDecoration */.Kp(startColumn,endColumn,"inline-selected-text",0/* Regular */)):(selectionsOnLine||(selectionsOnLine=[]),selectionsOnLine.push(new viewLineRenderer/* LineRange */.zG(startColumn-1,endColumn-1))))}}const renderLineInput=new viewLineRenderer/* RenderLineInput */.IJ(options.useMonospaceOptimizations,options.canUseHalfwidthRightwardsArrow,lineData.content,lineData.continuesWithWrappedLine,lineData.isBasicASCII,lineData.containsRTL,lineData.minColumn-1,lineData.tokens,actualInlineDecorations,lineData.tabSize,lineData.startVisibleColumn,options.spaceWidth,options.middotWidth,options.wsmiddotWidth,options.stopRenderingLineAfter,options.renderWhitespace,options.renderControlCharacters,options.fontLigatures!==editorOptions/* EditorFontLigatures */.n0.OFF,selectionsOnLine);if(this._renderedViewLine&&this._renderedViewLine.input.equals(renderLineInput))
// no need to do anything, we have the same render input
return!1;sb.appendASCIIString('<div style="top:'),sb.appendASCIIString(String(deltaTop)),sb.appendASCIIString("px;height:"),sb.appendASCIIString(String(this._options.lineHeight)),sb.appendASCIIString('px;" class="'),sb.appendASCIIString(ViewLine.CLASS_NAME),sb.appendASCIIString('">');const output=(0,viewLineRenderer/* renderViewLine */.d1)(renderLineInput,sb);sb.appendASCIIString("</div>");let renderedViewLine=null;return monospaceAssumptionsAreValid&&canUseFastRenderedViewLine&&lineData.isBasicASCII&&options.useMonospaceOptimizations&&0/* None */===output.containsForeignElements&&lineData.content.length<300&&renderLineInput.lineTokens.getCount()<100&&(
// Browser rounding errors have been observed in Chrome and IE, so using the fast
// view line only for short lines. Please test before removing the length check...
// ---
// Another rounding error has been observed on Linux in VSCode, where <span> width
// rounding errors add up to an observable large number...
// ---
// Also see another example of rounding errors on Windows in
// https://github.com/microsoft/vscode/issues/33178
renderedViewLine=new FastRenderedViewLine(this._renderedViewLine?this._renderedViewLine.domNode:null,renderLineInput,output.characterMapping)),renderedViewLine||(renderedViewLine=createRenderedLine(this._renderedViewLine?this._renderedViewLine.domNode:null,renderLineInput,output.characterMapping,output.containsRTL,output.containsForeignElements)),this._renderedViewLine=renderedViewLine,!0}layoutLine(lineNumber,deltaTop){this._renderedViewLine&&this._renderedViewLine.domNode&&(this._renderedViewLine.domNode.setTop(deltaTop),this._renderedViewLine.domNode.setHeight(this._options.lineHeight))}
// --- end IVisibleLineData
getWidth(){return this._renderedViewLine?this._renderedViewLine.getWidth():0}getWidthIsFast(){return!this._renderedViewLine||this._renderedViewLine.getWidthIsFast()}needsMonospaceFontCheck(){return!!this._renderedViewLine&&this._renderedViewLine instanceof FastRenderedViewLine}monospaceAssumptionsAreValid(){return this._renderedViewLine&&this._renderedViewLine instanceof FastRenderedViewLine?this._renderedViewLine.monospaceAssumptionsAreValid():monospaceAssumptionsAreValid}onMonospaceAssumptionsInvalidated(){this._renderedViewLine&&this._renderedViewLine instanceof FastRenderedViewLine&&(this._renderedViewLine=this._renderedViewLine.toSlowRenderedLine())}getVisibleRangesForRange(lineNumber,startColumn,endColumn,context){if(!this._renderedViewLine)return null;startColumn|=0,// @perf
endColumn|=0,// @perf
startColumn=Math.min(this._renderedViewLine.input.lineContent.length+1,Math.max(1,startColumn)),endColumn=Math.min(this._renderedViewLine.input.lineContent.length+1,Math.max(1,endColumn));const stopRenderingLineAfter=0|this._renderedViewLine.input.stopRenderingLineAfter;// @perf
let outsideRenderedLine=!1;-1!==stopRenderingLineAfter&&startColumn>stopRenderingLineAfter+1&&endColumn>stopRenderingLineAfter+1&&(
// This range is obviously not visible
outsideRenderedLine=!0),-1!==stopRenderingLineAfter&&startColumn>stopRenderingLineAfter+1&&(startColumn=stopRenderingLineAfter+1),-1!==stopRenderingLineAfter&&endColumn>stopRenderingLineAfter+1&&(endColumn=stopRenderingLineAfter+1);const horizontalRanges=this._renderedViewLine.getVisibleRangesForRange(lineNumber,startColumn,endColumn,context);return horizontalRanges&&horizontalRanges.length>0?new view_renderingContext/* VisibleRanges */.CH(outsideRenderedLine,horizontalRanges):null}getColumnOfNodeOffset(lineNumber,spanNode,offset){return this._renderedViewLine?this._renderedViewLine.getColumnOfNodeOffset(lineNumber,spanNode,offset):1}}ViewLine.CLASS_NAME="view-line";
/**
 * A rendered line which is guaranteed to contain only regular ASCII and is rendered with a monospace font.
 */
class FastRenderedViewLine{constructor(domNode,renderLineInput,characterMapping){this.domNode=domNode,this.input=renderLineInput,this._characterMapping=characterMapping,this._charWidth=renderLineInput.spaceWidth}getWidth(){return Math.round(this._getCharPosition(this._characterMapping.length))}getWidthIsFast(){return!0}monospaceAssumptionsAreValid(){if(!this.domNode)return monospaceAssumptionsAreValid;const expectedWidth=this.getWidth(),actualWidth=this.domNode.domNode.firstChild.offsetWidth;return Math.abs(expectedWidth-actualWidth)>=2&&(monospaceAssumptionsAreValid=!1),monospaceAssumptionsAreValid}toSlowRenderedLine(){return createRenderedLine(this.domNode,this.input,this._characterMapping,!1,0/* None */)}getVisibleRangesForRange(lineNumber,startColumn,endColumn,context){const startPosition=this._getCharPosition(startColumn),endPosition=this._getCharPosition(endColumn);return[new view_renderingContext/* FloatHorizontalRange */.CR(startPosition,endPosition-startPosition)]}_getCharPosition(column){const charOffset=this._characterMapping.getAbsoluteOffset(column);return this._charWidth*charOffset}getColumnOfNodeOffset(lineNumber,spanNode,offset){const spanNodeTextContentLength=spanNode.textContent.length;let spanIndex=-1;while(spanNode)spanNode=spanNode.previousSibling,spanIndex++;return this._characterMapping.getColumn(new viewLineRenderer/* DomPosition */.Nd(spanIndex,offset),spanNodeTextContentLength)}}
/**
 * Every time we render a line, we save what we have rendered in an instance of this class.
 */class RenderedViewLine{constructor(domNode,renderLineInput,characterMapping,containsRTL,containsForeignElements){if(this.domNode=domNode,this.input=renderLineInput,this._characterMapping=characterMapping,this._isWhitespaceOnly=/^\s*$/.test(renderLineInput.lineContent),this._containsForeignElements=containsForeignElements,this._cachedWidth=-1,this._pixelOffsetCache=null,!containsRTL||0/* the line is empty */===this._characterMapping.length){this._pixelOffsetCache=new Float32Array(Math.max(2,this._characterMapping.length+1));for(let column=0,len=this._characterMapping.length;column<=len;column++)this._pixelOffsetCache[column]=-1}}
// --- Reading from the DOM methods
_getReadingTarget(myDomNode){return myDomNode.domNode.firstChild}
/**
     * Width of the line in pixels
     */getWidth(){return this.domNode?(-1===this._cachedWidth&&(this._cachedWidth=this._getReadingTarget(this.domNode).offsetWidth),this._cachedWidth):0}getWidthIsFast(){return-1!==this._cachedWidth}
/**
     * Visible ranges for a model range
     */getVisibleRangesForRange(lineNumber,startColumn,endColumn,context){if(!this.domNode)return null;if(null!==this._pixelOffsetCache){
// the text is LTR
const startOffset=this._readPixelOffset(this.domNode,lineNumber,startColumn,context);if(-1===startOffset)return null;const endOffset=this._readPixelOffset(this.domNode,lineNumber,endColumn,context);return-1===endOffset?null:[new view_renderingContext/* FloatHorizontalRange */.CR(startOffset,endOffset-startOffset)]}return this._readVisibleRangesForRange(this.domNode,lineNumber,startColumn,endColumn,context)}_readVisibleRangesForRange(domNode,lineNumber,startColumn,endColumn,context){if(startColumn===endColumn){const pixelOffset=this._readPixelOffset(domNode,lineNumber,startColumn,context);return-1===pixelOffset?null:[new view_renderingContext/* FloatHorizontalRange */.CR(pixelOffset,0)]}return this._readRawVisibleRangesForRange(domNode,startColumn,endColumn,context)}_readPixelOffset(domNode,lineNumber,column,context){if(0===this._characterMapping.length){
// This line has no content
if(0/* None */===this._containsForeignElements)
// We can assume the line is really empty
return 0;if(2/* After */===this._containsForeignElements)
// We have foreign elements after the (empty) line
return 0;if(1/* Before */===this._containsForeignElements)
// We have foreign elements before the (empty) line
return this.getWidth();
// We have foreign elements before & after the (empty) line
const readingTarget=this._getReadingTarget(domNode);return readingTarget.firstChild?readingTarget.firstChild.offsetWidth:0}if(null!==this._pixelOffsetCache){
// the text is LTR
const cachedPixelOffset=this._pixelOffsetCache[column];if(-1!==cachedPixelOffset)return cachedPixelOffset;const result=this._actualReadPixelOffset(domNode,lineNumber,column,context);return this._pixelOffsetCache[column]=result,result}return this._actualReadPixelOffset(domNode,lineNumber,column,context)}_actualReadPixelOffset(domNode,lineNumber,column,context){if(0===this._characterMapping.length){
// This line has no content
const r=RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode),0,0,0,0,context.clientRectDeltaLeft,context.endNode);return r&&0!==r.length?r[0].left:-1}if(column===this._characterMapping.length&&this._isWhitespaceOnly&&0/* None */===this._containsForeignElements)
// This branch helps in the case of whitespace only lines which have a width set
return this.getWidth();const domPosition=this._characterMapping.getDomPosition(column),r=RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode),domPosition.partIndex,domPosition.charIndex,domPosition.partIndex,domPosition.charIndex,context.clientRectDeltaLeft,context.endNode);if(!r||0===r.length)return-1;const result=r[0].left;if(this.input.isBasicASCII){const charOffset=this._characterMapping.getAbsoluteOffset(column),expectedResult=Math.round(this.input.spaceWidth*charOffset);if(Math.abs(expectedResult-result)<=1)return expectedResult}return result}_readRawVisibleRangesForRange(domNode,startColumn,endColumn,context){if(1===startColumn&&endColumn===this._characterMapping.length)
// This branch helps IE with bidi text & gives a performance boost to other browsers when reading visible ranges for an entire line
return[new view_renderingContext/* FloatHorizontalRange */.CR(0,this.getWidth())];const startDomPosition=this._characterMapping.getDomPosition(startColumn),endDomPosition=this._characterMapping.getDomPosition(endColumn);return RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode),startDomPosition.partIndex,startDomPosition.charIndex,endDomPosition.partIndex,endDomPosition.charIndex,context.clientRectDeltaLeft,context.endNode)}
/**
     * Returns the column for the text found at a specific offset inside a rendered dom node
     */getColumnOfNodeOffset(lineNumber,spanNode,offset){const spanNodeTextContentLength=spanNode.textContent.length;let spanIndex=-1;while(spanNode)spanNode=spanNode.previousSibling,spanIndex++;return this._characterMapping.getColumn(new viewLineRenderer/* DomPosition */.Nd(spanIndex,offset),spanNodeTextContentLength)}}class WebKitRenderedViewLine extends RenderedViewLine{_readVisibleRangesForRange(domNode,lineNumber,startColumn,endColumn,context){const output=super._readVisibleRangesForRange(domNode,lineNumber,startColumn,endColumn,context);if(!output||0===output.length||startColumn===endColumn||1===startColumn&&endColumn===this._characterMapping.length)return output;
// WebKit is buggy and returns an expanded range (to contain words in some cases)
// The last client rect is enlarged (I think)
if(!this.input.containsRTL){
// This is an attempt to patch things up
// Find position of last column
const endPixelOffset=this._readPixelOffset(domNode,lineNumber,endColumn,context);if(-1!==endPixelOffset){const lastRange=output[output.length-1];lastRange.left<endPixelOffset&&(
// Trim down the width of the last visible range to not go after the last column's position
lastRange.width=endPixelOffset-lastRange.left)}}return output}}const createRenderedLine=function(){return browser/* isWebKit */.Pf?createWebKitRenderedLine:createNormalRenderedLine}();function createWebKitRenderedLine(domNode,renderLineInput,characterMapping,containsRTL,containsForeignElements){return new WebKitRenderedViewLine(domNode,renderLineInput,characterMapping,containsRTL,containsForeignElements)}function createNormalRenderedLine(domNode,renderLineInput,characterMapping,containsRTL,containsForeignElements){return new RenderedViewLine(domNode,renderLineInput,characterMapping,containsRTL,containsForeignElements)}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/core/position.js
var HitTestResult,core_position=__webpack_require__(50187),core_range=__webpack_require__(624314),cursorCommon=__webpack_require__(533181),cursorAtomicMoveOperations=__webpack_require__(203675);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/core/range.js
// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseTarget.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class UnknownHitTestResult{constructor(hitTarget=null){this.hitTarget=hitTarget,this.type=0/* Unknown */}}class ContentHitTestResult{constructor(position,spanNode,injectedText){this.position=position,this.spanNode=spanNode,this.injectedText=injectedText,this.type=1/* Content */}}(function(HitTestResult){function createFromDOMInfo(ctx,spanNode,offset){const position=ctx.getPositionFromDOMInfo(spanNode,offset);return position?new ContentHitTestResult(position,spanNode,null):new UnknownHitTestResult(spanNode)}HitTestResult.createFromDOMInfo=createFromDOMInfo})(HitTestResult||(HitTestResult={}));class PointerHandlerLastRenderData{constructor(lastViewCursorsRenderData,lastTextareaPosition){this.lastViewCursorsRenderData=lastViewCursorsRenderData,this.lastTextareaPosition=lastTextareaPosition}}class MouseTarget{constructor(element,type,mouseColumn=0,position=null,range=null,detail=null){this.element=element,this.type=type,this.mouseColumn=mouseColumn,this.position=position,!range&&position&&(range=new core_range/* Range */.e(position.lineNumber,position.column,position.lineNumber,position.column)),this.range=range,this.detail=detail}static _typeToString(type){return 1/* TEXTAREA */===type?"TEXTAREA":2/* GUTTER_GLYPH_MARGIN */===type?"GUTTER_GLYPH_MARGIN":3/* GUTTER_LINE_NUMBERS */===type?"GUTTER_LINE_NUMBERS":4/* GUTTER_LINE_DECORATIONS */===type?"GUTTER_LINE_DECORATIONS":5/* GUTTER_VIEW_ZONE */===type?"GUTTER_VIEW_ZONE":6/* CONTENT_TEXT */===type?"CONTENT_TEXT":7/* CONTENT_EMPTY */===type?"CONTENT_EMPTY":8/* CONTENT_VIEW_ZONE */===type?"CONTENT_VIEW_ZONE":9/* CONTENT_WIDGET */===type?"CONTENT_WIDGET":10/* OVERVIEW_RULER */===type?"OVERVIEW_RULER":11/* SCROLLBAR */===type?"SCROLLBAR":12/* OVERLAY_WIDGET */===type?"OVERLAY_WIDGET":"UNKNOWN"}static toString(target){return this._typeToString(target.type)+": "+target.position+" - "+target.range+" - "+target.detail}toString(){return MouseTarget.toString(this)}}class ElementPath{static isTextArea(path){return 2===path.length&&3/* OverflowGuard */===path[0]&&6/* TextArea */===path[1]}static isChildOfViewLines(path){return path.length>=4&&3/* OverflowGuard */===path[0]&&7/* ViewLines */===path[3]}static isStrictChildOfViewLines(path){return path.length>4&&3/* OverflowGuard */===path[0]&&7/* ViewLines */===path[3]}static isChildOfScrollableElement(path){return path.length>=2&&3/* OverflowGuard */===path[0]&&5/* ScrollableElement */===path[1]}static isChildOfMinimap(path){return path.length>=2&&3/* OverflowGuard */===path[0]&&8/* Minimap */===path[1]}static isChildOfContentWidgets(path){return path.length>=4&&3/* OverflowGuard */===path[0]&&1/* ContentWidgets */===path[3]}static isChildOfOverflowingContentWidgets(path){return path.length>=1&&2/* OverflowingContentWidgets */===path[0]}static isChildOfOverlayWidgets(path){return path.length>=2&&3/* OverflowGuard */===path[0]&&4/* OverlayWidgets */===path[1]}}class HitTestContext{constructor(context,viewHelper,lastRenderData){this.model=context.model;const options=context.configuration.options;this.layoutInfo=options.get(129/* layoutInfo */),this.viewDomNode=viewHelper.viewDomNode,this.lineHeight=options.get(58/* lineHeight */),this.stickyTabStops=options.get(103/* stickyTabStops */),this.typicalHalfwidthCharacterWidth=options.get(43/* fontInfo */).typicalHalfwidthCharacterWidth,this.lastRenderData=lastRenderData,this._context=context,this._viewHelper=viewHelper}getZoneAtCoord(mouseVerticalOffset){return HitTestContext.getZoneAtCoord(this._context,mouseVerticalOffset)}static getZoneAtCoord(context,mouseVerticalOffset){
// The target is either a view zone or the empty space after the last view-line
const viewZoneWhitespace=context.viewLayout.getWhitespaceAtVerticalOffset(mouseVerticalOffset);if(viewZoneWhitespace){const viewZoneMiddle=viewZoneWhitespace.verticalOffset+viewZoneWhitespace.height/2,lineCount=context.model.getLineCount();let position,positionBefore=null,positionAfter=null;return viewZoneWhitespace.afterLineNumber!==lineCount&&(
// There are more lines after this view zone
positionAfter=new core_position/* Position */.L(viewZoneWhitespace.afterLineNumber+1,1)),viewZoneWhitespace.afterLineNumber>0&&(
// There are more lines above this view zone
positionBefore=new core_position/* Position */.L(viewZoneWhitespace.afterLineNumber,context.model.getLineMaxColumn(viewZoneWhitespace.afterLineNumber))),position=null===positionAfter?positionBefore:null===positionBefore?positionAfter:mouseVerticalOffset<viewZoneMiddle?positionBefore:positionAfter,{viewZoneId:viewZoneWhitespace.id,afterLineNumber:viewZoneWhitespace.afterLineNumber,positionBefore:positionBefore,positionAfter:positionAfter,position:position}}return null}getFullLineRangeAtCoord(mouseVerticalOffset){if(this._context.viewLayout.isAfterLines(mouseVerticalOffset)){
// Below the last line
const lineNumber=this._context.model.getLineCount(),maxLineColumn=this._context.model.getLineMaxColumn(lineNumber);return{range:new core_range/* Range */.e(lineNumber,maxLineColumn,lineNumber,maxLineColumn),isAfterLines:!0}}const lineNumber=this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset),maxLineColumn=this._context.model.getLineMaxColumn(lineNumber);return{range:new core_range/* Range */.e(lineNumber,1,lineNumber,maxLineColumn),isAfterLines:!1}}getLineNumberAtVerticalOffset(mouseVerticalOffset){return this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset)}isAfterLines(mouseVerticalOffset){return this._context.viewLayout.isAfterLines(mouseVerticalOffset)}isInTopPadding(mouseVerticalOffset){return this._context.viewLayout.isInTopPadding(mouseVerticalOffset)}isInBottomPadding(mouseVerticalOffset){return this._context.viewLayout.isInBottomPadding(mouseVerticalOffset)}getVerticalOffsetForLineNumber(lineNumber){return this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber)}findAttribute(element,attr){return HitTestContext._findAttribute(element,attr,this._viewHelper.viewDomNode)}static _findAttribute(element,attr,stopAt){while(element&&element!==document.body){if(element.hasAttribute&&element.hasAttribute(attr))return element.getAttribute(attr);if(element===stopAt)return null;element=element.parentNode}return null}getLineWidth(lineNumber){return this._viewHelper.getLineWidth(lineNumber)}visibleRangeForPosition(lineNumber,column){return this._viewHelper.visibleRangeForPosition(lineNumber,column)}getPositionFromDOMInfo(spanNode,offset){return this._viewHelper.getPositionFromDOMInfo(spanNode,offset)}getCurrentScrollTop(){return this._context.viewLayout.getCurrentScrollTop()}getCurrentScrollLeft(){return this._context.viewLayout.getCurrentScrollLeft()}}class BareHitTestRequest{constructor(ctx,editorPos,pos){this.editorPos=editorPos,this.pos=pos,this.mouseVerticalOffset=Math.max(0,ctx.getCurrentScrollTop()+pos.y-editorPos.y),this.mouseContentHorizontalOffset=ctx.getCurrentScrollLeft()+pos.x-editorPos.x-ctx.layoutInfo.contentLeft,this.isInMarginArea=pos.x-editorPos.x<ctx.layoutInfo.contentLeft&&pos.x-editorPos.x>=ctx.layoutInfo.glyphMarginLeft,this.isInContentArea=!this.isInMarginArea,this.mouseColumn=Math.max(0,MouseTargetFactory._getMouseColumn(this.mouseContentHorizontalOffset,ctx.typicalHalfwidthCharacterWidth))}}class HitTestRequest extends BareHitTestRequest{constructor(ctx,editorPos,pos,target){super(ctx,editorPos,pos),this._ctx=ctx,target?(this.target=target,this.targetPath=PartFingerprints.collect(target,ctx.viewDomNode)):(this.target=null,this.targetPath=new Uint8Array(0))}toString(){return`pos(${this.pos.x},${this.pos.y}), editorPos(${this.editorPos.x},${this.editorPos.y}), mouseVerticalOffset: ${this.mouseVerticalOffset}, mouseContentHorizontalOffset: ${this.mouseContentHorizontalOffset}\n\ttarget: ${this.target?this.target.outerHTML:null}`}
// public fulfill(type: MouseTargetType.OVERVIEW_RULER, position?: Position | null, range?: EditorRange | null, detail?: any): MouseTarget;
// public fulfill(type: MouseTargetType.OUTSIDE_EDITOR, position?: Position | null, range?: EditorRange | null, detail?: any): MouseTarget;
fulfill(type,position=null,range=null,detail=null){let mouseColumn=this.mouseColumn;return position&&position.column<this._ctx.model.getLineMaxColumn(position.lineNumber)&&(
// Most likely, the line contains foreign decorations...
mouseColumn=cursorCommon/* CursorColumns */.io.visibleColumnFromColumn(this._ctx.model.getLineContent(position.lineNumber),position.column,this._ctx.model.getTextModelOptions().tabSize)+1),new MouseTarget(this.target,type,mouseColumn,position,range,detail)}withTarget(target){return new HitTestRequest(this._ctx,this.editorPos,this.pos,target)}}const EMPTY_CONTENT_AFTER_LINES={isAfterLines:!0};function createEmptyContentDataInLines(horizontalDistanceToText){return{isAfterLines:!1,horizontalDistanceToText:horizontalDistanceToText}}class MouseTargetFactory{constructor(context,viewHelper){this._context=context,this._viewHelper=viewHelper}mouseTargetIsWidget(e){const t=e.target,path=PartFingerprints.collect(t,this._viewHelper.viewDomNode);
// Is it a content widget?
return!(!ElementPath.isChildOfContentWidgets(path)&&!ElementPath.isChildOfOverflowingContentWidgets(path))||!!ElementPath.isChildOfOverlayWidgets(path);
// Is it an overlay widget?
}createMouseTarget(lastRenderData,editorPos,pos,target){const ctx=new HitTestContext(this._context,this._viewHelper,lastRenderData),request=new HitTestRequest(ctx,editorPos,pos,target);try{const r=MouseTargetFactory._createMouseTarget(ctx,request,!1);
// console.log(r.toString());
return r}catch(err){
// console.log(err);
return request.fulfill(0/* UNKNOWN */)}}static _createMouseTarget(ctx,request,domHitTestExecuted){
// console.log(`${domHitTestExecuted ? '=>' : ''}CAME IN REQUEST: ${request}`);
// First ensure the request has a target
if(null===request.target){if(domHitTestExecuted)
// Still no target... and we have already executed hit test...
return request.fulfill(0/* UNKNOWN */);const hitTestResult=MouseTargetFactory._doHitTest(ctx,request);return 1/* Content */===hitTestResult.type?MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx,request,hitTestResult.spanNode,hitTestResult.position,hitTestResult.injectedText):this._createMouseTarget(ctx,request.withTarget(hitTestResult.hitTarget),!0)}
// we know for a fact that request.target is not null
const resolvedRequest=request;let result=null;return result=result||MouseTargetFactory._hitTestContentWidget(ctx,resolvedRequest),result=result||MouseTargetFactory._hitTestOverlayWidget(ctx,resolvedRequest),result=result||MouseTargetFactory._hitTestMinimap(ctx,resolvedRequest),result=result||MouseTargetFactory._hitTestScrollbarSlider(ctx,resolvedRequest),result=result||MouseTargetFactory._hitTestViewZone(ctx,resolvedRequest),result=result||MouseTargetFactory._hitTestMargin(ctx,resolvedRequest),result=result||MouseTargetFactory._hitTestViewCursor(ctx,resolvedRequest),result=result||MouseTargetFactory._hitTestTextArea(ctx,resolvedRequest),result=result||MouseTargetFactory._hitTestViewLines(ctx,resolvedRequest,domHitTestExecuted),result=result||MouseTargetFactory._hitTestScrollbar(ctx,resolvedRequest),result||request.fulfill(0/* UNKNOWN */)}static _hitTestContentWidget(ctx,request){
// Is it a content widget?
if(ElementPath.isChildOfContentWidgets(request.targetPath)||ElementPath.isChildOfOverflowingContentWidgets(request.targetPath)){const widgetId=ctx.findAttribute(request.target,"widgetId");return widgetId?request.fulfill(9/* CONTENT_WIDGET */,null,null,widgetId):request.fulfill(0/* UNKNOWN */)}return null}static _hitTestOverlayWidget(ctx,request){
// Is it an overlay widget?
if(ElementPath.isChildOfOverlayWidgets(request.targetPath)){const widgetId=ctx.findAttribute(request.target,"widgetId");return widgetId?request.fulfill(12/* OVERLAY_WIDGET */,null,null,widgetId):request.fulfill(0/* UNKNOWN */)}return null}static _hitTestViewCursor(ctx,request){if(request.target){
// Check if we've hit a painted cursor
const lastViewCursorsRenderData=ctx.lastRenderData.lastViewCursorsRenderData;for(const d of lastViewCursorsRenderData)if(request.target===d.domNode)return request.fulfill(6/* CONTENT_TEXT */,d.position,null,{mightBeForeignElement:!1})}if(request.isInContentArea){
// Edge has a bug when hit-testing the exact position of a cursor,
// instead of returning the correct dom node, it returns the
// first or last rendered view line dom node, therefore help it out
// and first check if we are on top of a cursor
const lastViewCursorsRenderData=ctx.lastRenderData.lastViewCursorsRenderData,mouseContentHorizontalOffset=request.mouseContentHorizontalOffset,mouseVerticalOffset=request.mouseVerticalOffset;for(const d of lastViewCursorsRenderData){if(mouseContentHorizontalOffset<d.contentLeft)
// mouse position is to the left of the cursor
continue;if(mouseContentHorizontalOffset>d.contentLeft+d.width)
// mouse position is to the right of the cursor
continue;const cursorVerticalOffset=ctx.getVerticalOffsetForLineNumber(d.position.lineNumber);if(cursorVerticalOffset<=mouseVerticalOffset&&mouseVerticalOffset<=cursorVerticalOffset+d.height)return request.fulfill(6/* CONTENT_TEXT */,d.position,null,{mightBeForeignElement:!1})}}return null}static _hitTestViewZone(ctx,request){const viewZoneData=ctx.getZoneAtCoord(request.mouseVerticalOffset);if(viewZoneData){const mouseTargetType=request.isInContentArea?8/* CONTENT_VIEW_ZONE */:5/* GUTTER_VIEW_ZONE */;return request.fulfill(mouseTargetType,viewZoneData.position,null,viewZoneData)}return null}static _hitTestTextArea(ctx,request){
// Is it the textarea?
return ElementPath.isTextArea(request.targetPath)?ctx.lastRenderData.lastTextareaPosition?request.fulfill(6/* CONTENT_TEXT */,ctx.lastRenderData.lastTextareaPosition,null,{mightBeForeignElement:!1}):request.fulfill(1/* TEXTAREA */,ctx.lastRenderData.lastTextareaPosition):null}static _hitTestMargin(ctx,request){if(request.isInMarginArea){const res=ctx.getFullLineRangeAtCoord(request.mouseVerticalOffset),pos=res.range.getStartPosition();let offset=Math.abs(request.pos.x-request.editorPos.x);const detail={isAfterLines:res.isAfterLines,glyphMarginLeft:ctx.layoutInfo.glyphMarginLeft,glyphMarginWidth:ctx.layoutInfo.glyphMarginWidth,lineNumbersWidth:ctx.layoutInfo.lineNumbersWidth,offsetX:offset};return offset-=ctx.layoutInfo.glyphMarginLeft,offset<=ctx.layoutInfo.glyphMarginWidth?request.fulfill(2/* GUTTER_GLYPH_MARGIN */,pos,res.range,detail):(offset-=ctx.layoutInfo.glyphMarginWidth,offset<=ctx.layoutInfo.lineNumbersWidth?request.fulfill(3/* GUTTER_LINE_NUMBERS */,pos,res.range,detail):(offset-=ctx.layoutInfo.lineNumbersWidth,request.fulfill(4/* GUTTER_LINE_DECORATIONS */,pos,res.range,detail)))}return null}static _hitTestViewLines(ctx,request,domHitTestExecuted){if(!ElementPath.isChildOfViewLines(request.targetPath))return null;if(ctx.isInTopPadding(request.mouseVerticalOffset))return request.fulfill(7/* CONTENT_EMPTY */,new core_position/* Position */.L(1,1),null,EMPTY_CONTENT_AFTER_LINES);
// Check if it is below any lines and any view zones
if(ctx.isAfterLines(request.mouseVerticalOffset)||ctx.isInBottomPadding(request.mouseVerticalOffset)){
// This most likely indicates it happened after the last view-line
const lineCount=ctx.model.getLineCount(),maxLineColumn=ctx.model.getLineMaxColumn(lineCount);return request.fulfill(7/* CONTENT_EMPTY */,new core_position/* Position */.L(lineCount,maxLineColumn),null,EMPTY_CONTENT_AFTER_LINES)}if(domHitTestExecuted){
// Check if we are hitting a view-line (can happen in the case of inline decorations on empty lines)
// See https://github.com/microsoft/vscode/issues/46942
if(ElementPath.isStrictChildOfViewLines(request.targetPath)){const lineNumber=ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);if(0===ctx.model.getLineLength(lineNumber)){const lineWidth=ctx.getLineWidth(lineNumber),detail=createEmptyContentDataInLines(request.mouseContentHorizontalOffset-lineWidth);return request.fulfill(7/* CONTENT_EMPTY */,new core_position/* Position */.L(lineNumber,1),null,detail)}const lineWidth=ctx.getLineWidth(lineNumber);if(request.mouseContentHorizontalOffset>=lineWidth){const detail=createEmptyContentDataInLines(request.mouseContentHorizontalOffset-lineWidth),pos=new core_position/* Position */.L(lineNumber,ctx.model.getLineMaxColumn(lineNumber));return request.fulfill(7/* CONTENT_EMPTY */,pos,null,detail)}}
// We have already executed hit test...
return request.fulfill(0/* UNKNOWN */)}const hitTestResult=MouseTargetFactory._doHitTest(ctx,request);return 1/* Content */===hitTestResult.type?MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx,request,hitTestResult.spanNode,hitTestResult.position,hitTestResult.injectedText):this._createMouseTarget(ctx,request.withTarget(hitTestResult.hitTarget),!0)}static _hitTestMinimap(ctx,request){if(ElementPath.isChildOfMinimap(request.targetPath)){const possibleLineNumber=ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset),maxColumn=ctx.model.getLineMaxColumn(possibleLineNumber);return request.fulfill(11/* SCROLLBAR */,new core_position/* Position */.L(possibleLineNumber,maxColumn))}return null}static _hitTestScrollbarSlider(ctx,request){if(ElementPath.isChildOfScrollableElement(request.targetPath)&&request.target&&1===request.target.nodeType){const className=request.target.className;if(className&&/\b(slider|scrollbar)\b/.test(className)){const possibleLineNumber=ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset),maxColumn=ctx.model.getLineMaxColumn(possibleLineNumber);return request.fulfill(11/* SCROLLBAR */,new core_position/* Position */.L(possibleLineNumber,maxColumn))}}return null}static _hitTestScrollbar(ctx,request){
// Is it the overview ruler?
// Is it a child of the scrollable element?
if(ElementPath.isChildOfScrollableElement(request.targetPath)){const possibleLineNumber=ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset),maxColumn=ctx.model.getLineMaxColumn(possibleLineNumber);return request.fulfill(11/* SCROLLBAR */,new core_position/* Position */.L(possibleLineNumber,maxColumn))}return null}getMouseColumn(editorPos,pos){const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */),mouseContentHorizontalOffset=this._context.viewLayout.getCurrentScrollLeft()+pos.x-editorPos.x-layoutInfo.contentLeft;return MouseTargetFactory._getMouseColumn(mouseContentHorizontalOffset,options.get(43/* fontInfo */).typicalHalfwidthCharacterWidth)}static _getMouseColumn(mouseContentHorizontalOffset,typicalHalfwidthCharacterWidth){if(mouseContentHorizontalOffset<0)return 1;const chars=Math.round(mouseContentHorizontalOffset/typicalHalfwidthCharacterWidth);return chars+1}static createMouseTargetFromHitTestPosition(ctx,request,spanNode,pos,injectedText){const lineNumber=pos.lineNumber,column=pos.column,lineWidth=ctx.getLineWidth(lineNumber);if(request.mouseContentHorizontalOffset>lineWidth){const detail=createEmptyContentDataInLines(request.mouseContentHorizontalOffset-lineWidth);return request.fulfill(7/* CONTENT_EMPTY */,pos,null,detail)}const visibleRange=ctx.visibleRangeForPosition(lineNumber,column);if(!visibleRange)return request.fulfill(0/* UNKNOWN */,pos);const columnHorizontalOffset=visibleRange.left;if(request.mouseContentHorizontalOffset===columnHorizontalOffset)return request.fulfill(6/* CONTENT_TEXT */,pos,null,{mightBeForeignElement:!!injectedText});const points=[];if(points.push({offset:visibleRange.left,column:column}),column>1){const visibleRange=ctx.visibleRangeForPosition(lineNumber,column-1);visibleRange&&points.push({offset:visibleRange.left,column:column-1})}const lineMaxColumn=ctx.model.getLineMaxColumn(lineNumber);if(column<lineMaxColumn){const visibleRange=ctx.visibleRangeForPosition(lineNumber,column+1);visibleRange&&points.push({offset:visibleRange.left,column:column+1})}points.sort(((a,b)=>a.offset-b.offset));const mouseCoordinates=request.pos.toClientCoordinates(),spanNodeClientRect=spanNode.getBoundingClientRect(),mouseIsOverSpanNode=spanNodeClientRect.left<=mouseCoordinates.clientX&&mouseCoordinates.clientX<=spanNodeClientRect.right;for(let i=1;i<points.length;i++){const prev=points[i-1],curr=points[i];if(prev.offset<=request.mouseContentHorizontalOffset&&request.mouseContentHorizontalOffset<=curr.offset){const rng=new core_range/* Range */.e(lineNumber,prev.column,lineNumber,curr.column);return request.fulfill(6/* CONTENT_TEXT */,pos,rng,{mightBeForeignElement:!mouseIsOverSpanNode||!!injectedText})}}return request.fulfill(6/* CONTENT_TEXT */,pos,null,{mightBeForeignElement:!mouseIsOverSpanNode||!!injectedText})}
/**
     * Most probably WebKit browsers and Edge
     */static _doHitTestWithCaretRangeFromPoint(ctx,request){
// In Chrome, especially on Linux it is possible to click between lines,
// so try to adjust the `hity` below so that it lands in the center of a line
const lineNumber=ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset),lineVerticalOffset=ctx.getVerticalOffsetForLineNumber(lineNumber),lineCenteredVerticalOffset=lineVerticalOffset+Math.floor(ctx.lineHeight/2);let adjustedPageY=request.pos.y+(lineCenteredVerticalOffset-request.mouseVerticalOffset);adjustedPageY<=request.editorPos.y&&(adjustedPageY=request.editorPos.y+1),adjustedPageY>=request.editorPos.y+ctx.layoutInfo.height&&(adjustedPageY=request.editorPos.y+ctx.layoutInfo.height-1);const adjustedPage=new PageCoordinates(request.pos.x,adjustedPageY),r=this._actualDoHitTestWithCaretRangeFromPoint(ctx,adjustedPage.toClientCoordinates());return 1/* Content */===r.type?r:this._actualDoHitTestWithCaretRangeFromPoint(ctx,request.pos.toClientCoordinates());
// Also try to hit test without the adjustment (for the edge cases that we are near the top or bottom)
}static _actualDoHitTestWithCaretRangeFromPoint(ctx,coords){const shadowRoot=dom/* getShadowRoot */.Ay(ctx.viewDomNode);let range;if(range=shadowRoot?"undefined"===typeof shadowRoot.caretRangeFromPoint?shadowCaretRangeFromPoint(shadowRoot,coords.clientX,coords.clientY):shadowRoot.caretRangeFromPoint(coords.clientX,coords.clientY):document.caretRangeFromPoint(coords.clientX,coords.clientY),!range||!range.startContainer)return new UnknownHitTestResult;
// Chrome always hits a TEXT_NODE, while Edge sometimes hits a token span
const startContainer=range.startContainer;if(startContainer.nodeType===startContainer.TEXT_NODE){
// startContainer is expected to be the token text
const parent1=startContainer.parentNode,parent2=parent1?parent1.parentNode:null,parent3=parent2?parent2.parentNode:null,parent3ClassName=parent3&&parent3.nodeType===parent3.ELEMENT_NODE?parent3.className:null;// expected to be the token span
return parent3ClassName===ViewLine.CLASS_NAME?HitTestResult.createFromDOMInfo(ctx,parent1,range.startOffset):new UnknownHitTestResult(startContainer.parentNode)}if(startContainer.nodeType===startContainer.ELEMENT_NODE){
// startContainer is expected to be the token span
const parent1=startContainer.parentNode,parent2=parent1?parent1.parentNode:null,parent2ClassName=parent2&&parent2.nodeType===parent2.ELEMENT_NODE?parent2.className:null;// expected to be the view line container span
return parent2ClassName===ViewLine.CLASS_NAME?HitTestResult.createFromDOMInfo(ctx,startContainer,startContainer.textContent.length):new UnknownHitTestResult(startContainer)}return new UnknownHitTestResult}
/**
     * Most probably Gecko
     */static _doHitTestWithCaretPositionFromPoint(ctx,coords){const hitResult=document.caretPositionFromPoint(coords.clientX,coords.clientY);if(hitResult.offsetNode.nodeType===hitResult.offsetNode.TEXT_NODE){
// offsetNode is expected to be the token text
const parent1=hitResult.offsetNode.parentNode,parent2=parent1?parent1.parentNode:null,parent3=parent2?parent2.parentNode:null,parent3ClassName=parent3&&parent3.nodeType===parent3.ELEMENT_NODE?parent3.className:null;// expected to be the token span
return parent3ClassName===ViewLine.CLASS_NAME?HitTestResult.createFromDOMInfo(ctx,hitResult.offsetNode.parentNode,hitResult.offset):new UnknownHitTestResult(hitResult.offsetNode.parentNode)}
// For inline decorations, Gecko sometimes returns the `<span>` of the line and the offset is the `<span>` with the inline decoration
// Some other times, it returns the `<span>` with the inline decoration
if(hitResult.offsetNode.nodeType===hitResult.offsetNode.ELEMENT_NODE){const parent1=hitResult.offsetNode.parentNode,parent1ClassName=parent1&&parent1.nodeType===parent1.ELEMENT_NODE?parent1.className:null,parent2=parent1?parent1.parentNode:null,parent2ClassName=parent2&&parent2.nodeType===parent2.ELEMENT_NODE?parent2.className:null;if(parent1ClassName===ViewLine.CLASS_NAME){
// it returned the `<span>` of the line and the offset is the `<span>` with the inline decoration
const tokenSpan=hitResult.offsetNode.childNodes[Math.min(hitResult.offset,hitResult.offsetNode.childNodes.length-1)];if(tokenSpan)return HitTestResult.createFromDOMInfo(ctx,tokenSpan,0)}else if(parent2ClassName===ViewLine.CLASS_NAME)
// it returned the `<span>` with the inline decoration
return HitTestResult.createFromDOMInfo(ctx,hitResult.offsetNode,0)}return new UnknownHitTestResult(hitResult.offsetNode)}static _snapToSoftTabBoundary(position,viewModel){const lineContent=viewModel.getLineContent(position.lineNumber),{tabSize:tabSize}=viewModel.getTextModelOptions(),newPosition=cursorAtomicMoveOperations/* AtomicTabMoveOperations */.l.atomicPosition(lineContent,position.column-1,tabSize,2/* Nearest */);return-1!==newPosition?new core_position/* Position */.L(position.lineNumber,newPosition+1):position}static _doHitTest(ctx,request){let result=new UnknownHitTestResult;if("function"===typeof document.caretRangeFromPoint?result=this._doHitTestWithCaretRangeFromPoint(ctx,request):document.caretPositionFromPoint&&(result=this._doHitTestWithCaretPositionFromPoint(ctx,request.pos.toClientCoordinates())),1/* Content */===result.type){const injectedText=ctx.model.getInjectedTextAt(result.position),normalizedPosition=ctx.model.normalizePosition(result.position,2/* None */);!injectedText&&normalizedPosition.equals(result.position)||(result=new ContentHitTestResult(normalizedPosition,result.spanNode,injectedText))}
// Snap to the nearest soft tab boundary if atomic soft tabs are enabled.
return 1/* Content */===result.type&&ctx.stickyTabStops&&(result=new ContentHitTestResult(this._snapToSoftTabBoundary(result.position,ctx.model),result.spanNode,result.injectedText)),result}}function shadowCaretRangeFromPoint(shadowRoot,x,y){const range=document.createRange();
// Get the element under the point
let el=shadowRoot.elementFromPoint(x,y);if(null!==el){
// Get the last child of the element until its firstChild is a text node
// This assumes that the pointer is on the right of the line, out of the tokens
// and that we want to get the offset of the last token of the line
while(el&&el.firstChild&&el.firstChild.nodeType!==el.firstChild.TEXT_NODE&&el.lastChild&&el.lastChild.firstChild)el=el.lastChild;
// Grab its rect
const rect=el.getBoundingClientRect(),font=window.getComputedStyle(el,null).getPropertyValue("font"),text=el.innerText;
// And its font
// Position the pixel cursor at the left of the element
let step,pixelCursor=rect.left,offset=0;
// If the point is on the right of the box put the cursor after the last character
if(x>rect.left+rect.width)offset=text.length;else{const charWidthReader=CharWidthReader.getInstance();
// Goes through all the characters of the innerText, and checks if the x of the point
// belongs to the character.
for(let i=0;i<text.length+1;i++){
// If the x of the point is smaller that the position of the cursor, the point is over that character
if(
// The step is half the width of the character
step=charWidthReader.getCharWidth(text.charAt(i),font)/2,
// Move to the center of the character
pixelCursor+=step,x<pixelCursor){offset=i;break}
// Move between the current character and the next
pixelCursor+=step}}
// Creates a range with the text node of the element and set the offset found
range.setStart(el.firstChild,offset),range.setEnd(el.firstChild,offset)}return range}class CharWidthReader{constructor(){this._cache={},this._canvas=document.createElement("canvas")}static getInstance(){return CharWidthReader._INSTANCE||(CharWidthReader._INSTANCE=new CharWidthReader),CharWidthReader._INSTANCE}getCharWidth(char,font){const cacheKey=char+font;if(this._cache[cacheKey])return this._cache[cacheKey];const context=this._canvas.getContext("2d");context.font=font;const metrics=context.measureText(char),width=metrics.width;return this._cache[cacheKey]=width,width}}CharWidthReader._INSTANCE=null;
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/config/editorZoom.js
var editorZoom=__webpack_require__(182334);// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseHandler.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
/**
 * Merges mouse events when mouse move events are throttled
 */
function createMouseMoveEventMerger(mouseTargetFactory){return function(lastEvent,currentEvent){let targetIsWidget=!1;return mouseTargetFactory&&(targetIsWidget=mouseTargetFactory.mouseTargetIsWidget(currentEvent)),targetIsWidget||currentEvent.preventDefault(),currentEvent}}class MouseHandler extends viewEventHandler/* ViewEventHandler */.O{constructor(context,viewController,viewHelper){super(),this._context=context,this.viewController=viewController,this.viewHelper=viewHelper,this.mouseTargetFactory=new MouseTargetFactory(this._context,viewHelper),this._mouseDownOperation=this._register(new MouseDownOperation(this._context,this.viewController,this.viewHelper,((e,testEventTarget)=>this._createMouseTarget(e,testEventTarget)),(e=>this._getMouseColumn(e)))),this.lastMouseLeaveTime=-1,this._height=this._context.configuration.options.get(129/* layoutInfo */).height;const mouseEvents=new EditorMouseEventFactory(this.viewHelper.viewDomNode);this._register(mouseEvents.onContextMenu(this.viewHelper.viewDomNode,(e=>this._onContextMenu(e,!0)))),this._register(mouseEvents.onMouseMoveThrottled(this.viewHelper.viewDomNode,(e=>this._onMouseMove(e)),createMouseMoveEventMerger(this.mouseTargetFactory),MouseHandler.MOUSE_MOVE_MINIMUM_TIME)),this._register(mouseEvents.onMouseUp(this.viewHelper.viewDomNode,(e=>this._onMouseUp(e)))),this._register(mouseEvents.onMouseLeave(this.viewHelper.viewDomNode,(e=>this._onMouseLeave(e)))),this._register(mouseEvents.onMouseDown(this.viewHelper.viewDomNode,(e=>this._onMouseDown(e))));const onMouseWheel=browserEvent=>{if(this.viewController.emitMouseWheel(browserEvent),!this._context.configuration.options.get(67/* mouseWheelZoom */))return;const e=new mouseEvent/* StandardWheelEvent */.q(browserEvent),doMouseWheelZoom=platform/* isMacintosh */.dz?(browserEvent.metaKey||browserEvent.ctrlKey)&&!browserEvent.shiftKey&&!browserEvent.altKey:browserEvent.ctrlKey&&!browserEvent.metaKey&&!browserEvent.shiftKey&&!browserEvent.altKey;if(doMouseWheelZoom){const zoomLevel=editorZoom/* EditorZoom */.C.getZoomLevel(),delta=e.deltaY>0?1:-1;editorZoom/* EditorZoom */.C.setZoomLevel(zoomLevel+delta),e.preventDefault(),e.stopPropagation()}};this._register(dom/* addDisposableListener */.nm(this.viewHelper.viewDomNode,dom/* EventType */.tw.MOUSE_WHEEL,onMouseWheel,{capture:!0,passive:!1})),this._context.addEventHandler(this)}dispose(){this._context.removeEventHandler(this),super.dispose()}
// --- begin event handlers
onConfigurationChanged(e){if(e.hasChanged(129/* layoutInfo */)){
// layout change
const height=this._context.configuration.options.get(129/* layoutInfo */).height;this._height!==height&&(this._height=height,this._mouseDownOperation.onHeightChanged())}return!1}onCursorStateChanged(e){return this._mouseDownOperation.onCursorStateChanged(e),!1}onFocusChanged(e){return!1}onScrollChanged(e){return this._mouseDownOperation.onScrollChanged(),!1}
// --- end event handlers
getTargetAtClientPoint(clientX,clientY){const clientPos=new ClientCoordinates(clientX,clientY),pos=clientPos.toPageCoordinates(),editorPos=createEditorPagePosition(this.viewHelper.viewDomNode);return pos.y<editorPos.y||pos.y>editorPos.y+editorPos.height||pos.x<editorPos.x||pos.x>editorPos.x+editorPos.width?null:this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(),editorPos,pos,null)}_createMouseTarget(e,testEventTarget){let target=e.target;if(!this.viewHelper.viewDomNode.contains(target)){const shadowRoot=dom/* getShadowRoot */.Ay(this.viewHelper.viewDomNode);shadowRoot&&(target=shadowRoot.elementsFromPoint(e.posx,e.posy).find((el=>this.viewHelper.viewDomNode.contains(el))))}return this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(),e.editorPos,e.pos,testEventTarget?target:null)}_getMouseColumn(e){return this.mouseTargetFactory.getMouseColumn(e.editorPos,e.pos)}_onContextMenu(e,testEventTarget){this.viewController.emitContextMenu({event:e,target:this._createMouseTarget(e,testEventTarget)})}_onMouseMove(e){if(this._mouseDownOperation.isActive())
// In selection/drag operation
return;const actualMouseMoveTime=e.timestamp;actualMouseMoveTime<this.lastMouseLeaveTime||this.viewController.emitMouseMove({event:e,target:this._createMouseTarget(e,!0)})}_onMouseLeave(e){this.lastMouseLeaveTime=(new Date).getTime(),this.viewController.emitMouseLeave({event:e,target:null})}_onMouseUp(e){this.viewController.emitMouseUp({event:e,target:this._createMouseTarget(e,!0)})}_onMouseDown(e){const t=this._createMouseTarget(e,!0),targetIsContent=6/* CONTENT_TEXT */===t.type||7/* CONTENT_EMPTY */===t.type,targetIsGutter=2/* GUTTER_GLYPH_MARGIN */===t.type||3/* GUTTER_LINE_NUMBERS */===t.type||4/* GUTTER_LINE_DECORATIONS */===t.type,targetIsLineNumbers=3/* GUTTER_LINE_NUMBERS */===t.type,selectOnLineNumbers=this._context.configuration.options.get(97/* selectOnLineNumbers */),targetIsViewZone=8/* CONTENT_VIEW_ZONE */===t.type||5/* GUTTER_VIEW_ZONE */===t.type,targetIsWidget=9/* CONTENT_WIDGET */===t.type;let shouldHandle=e.leftButton||e.middleButton;platform/* isMacintosh */.dz&&e.leftButton&&e.ctrlKey&&(shouldHandle=!1);const focus=()=>{e.preventDefault(),this.viewHelper.focusTextArea()};if(shouldHandle&&(targetIsContent||targetIsLineNumbers&&selectOnLineNumbers))focus(),this._mouseDownOperation.start(t.type,e);else if(targetIsGutter)
// Do not steal focus
e.preventDefault();else if(targetIsViewZone){const viewZoneData=t.detail;this.viewHelper.shouldSuppressMouseDownOnViewZone(viewZoneData.viewZoneId)&&(focus(),this._mouseDownOperation.start(t.type,e),e.preventDefault())}else targetIsWidget&&this.viewHelper.shouldSuppressMouseDownOnWidget(t.detail)&&(focus(),e.preventDefault());this.viewController.emitMouseDown({event:e,target:t})}}MouseHandler.MOUSE_MOVE_MINIMUM_TIME=100;// ms
class MouseDownOperation extends lifecycle/* Disposable */.JT{constructor(context,viewController,viewHelper,createMouseTarget,getMouseColumn){super(),this._context=context,this._viewController=viewController,this._viewHelper=viewHelper,this._createMouseTarget=createMouseTarget,this._getMouseColumn=getMouseColumn,this._mouseMoveMonitor=this._register(new GlobalEditorMouseMoveMonitor(this._viewHelper.viewDomNode)),this._onScrollTimeout=this._register(new common_async/* TimeoutTimer */._F),this._mouseState=new MouseDownState,this._currentSelection=new core_selection/* Selection */.Y(1,1,1,1),this._isActive=!1,this._lastMouseEvent=null}dispose(){super.dispose()}isActive(){return this._isActive}_onMouseDownThenMove(e){this._lastMouseEvent=e,this._mouseState.setModifiers(e);const position=this._findMousePosition(e,!0);position&&(this._mouseState.isDragAndDrop?this._viewController.emitMouseDrag({event:e,target:position}):this._dispatchMouse(position,!0))}start(targetType,e){this._lastMouseEvent=e,this._mouseState.setStartedOnLineNumbers(3/* GUTTER_LINE_NUMBERS */===targetType),this._mouseState.setStartButtons(e),this._mouseState.setModifiers(e);const position=this._findMousePosition(e,!0);if(!position||!position.position)
// Ignoring because position is unknown
return;this._mouseState.trySetCount(e.detail,position.position),
// Overwrite the detail of the MouseEvent, as it will be sent out in an event and contributions might rely on it.
e.detail=this._mouseState.count;const options=this._context.configuration.options;if(!options.get(80/* readOnly */)&&options.get(31/* dragAndDrop */)&&!options.get(18/* columnSelection */)&&!this._mouseState.altKey&&e.detail<2&&!this._isActive&&!this._currentSelection.isEmpty()&&6===position.type&&position.position&&this._currentSelection.containsPosition(position.position))return this._mouseState.isDragAndDrop=!0,this._isActive=!0,void this._mouseMoveMonitor.startMonitoring(e.target,e.buttons,createMouseMoveEventMerger(null),(e=>this._onMouseDownThenMove(e)),(browserEvent=>{const position=this._findMousePosition(this._lastMouseEvent,!0);browserEvent&&browserEvent instanceof KeyboardEvent?
// cancel
this._viewController.emitMouseDropCanceled():this._viewController.emitMouseDrop({event:this._lastMouseEvent,target:position?this._createMouseTarget(this._lastMouseEvent,!0):null}),this._stop()}));this._mouseState.isDragAndDrop=!1,this._dispatchMouse(position,e.shiftKey),this._isActive||(this._isActive=!0,this._mouseMoveMonitor.startMonitoring(e.target,e.buttons,createMouseMoveEventMerger(null),(e=>this._onMouseDownThenMove(e)),(()=>this._stop())))}_stop(){this._isActive=!1,this._onScrollTimeout.cancel()}onHeightChanged(){this._mouseMoveMonitor.stopMonitoring()}onScrollChanged(){this._isActive&&this._onScrollTimeout.setIfNotSet((()=>{if(!this._lastMouseEvent)return;const position=this._findMousePosition(this._lastMouseEvent,!1);position&&(this._mouseState.isDragAndDrop||this._dispatchMouse(position,!0))}),10)}onCursorStateChanged(e){this._currentSelection=e.selections[0]}_getPositionOutsideEditor(e){const editorContent=e.editorPos,model=this._context.model,viewLayout=this._context.viewLayout,mouseColumn=this._getMouseColumn(e);if(e.posy<editorContent.y){const verticalOffset=Math.max(viewLayout.getCurrentScrollTop()-(editorContent.y-e.posy),0),viewZoneData=HitTestContext.getZoneAtCoord(this._context,verticalOffset);if(viewZoneData){const newPosition=this._helpPositionJumpOverViewZone(viewZoneData);if(newPosition)return new MouseTarget(null,13/* OUTSIDE_EDITOR */,mouseColumn,newPosition)}const aboveLineNumber=viewLayout.getLineNumberAtVerticalOffset(verticalOffset);return new MouseTarget(null,13/* OUTSIDE_EDITOR */,mouseColumn,new core_position/* Position */.L(aboveLineNumber,1))}if(e.posy>editorContent.y+editorContent.height){const verticalOffset=viewLayout.getCurrentScrollTop()+(e.posy-editorContent.y),viewZoneData=HitTestContext.getZoneAtCoord(this._context,verticalOffset);if(viewZoneData){const newPosition=this._helpPositionJumpOverViewZone(viewZoneData);if(newPosition)return new MouseTarget(null,13/* OUTSIDE_EDITOR */,mouseColumn,newPosition)}const belowLineNumber=viewLayout.getLineNumberAtVerticalOffset(verticalOffset);return new MouseTarget(null,13/* OUTSIDE_EDITOR */,mouseColumn,new core_position/* Position */.L(belowLineNumber,model.getLineMaxColumn(belowLineNumber)))}const possibleLineNumber=viewLayout.getLineNumberAtVerticalOffset(viewLayout.getCurrentScrollTop()+(e.posy-editorContent.y));return e.posx<editorContent.x?new MouseTarget(null,13/* OUTSIDE_EDITOR */,mouseColumn,new core_position/* Position */.L(possibleLineNumber,1)):e.posx>editorContent.x+editorContent.width?new MouseTarget(null,13/* OUTSIDE_EDITOR */,mouseColumn,new core_position/* Position */.L(possibleLineNumber,model.getLineMaxColumn(possibleLineNumber))):null}_findMousePosition(e,testEventTarget){const positionOutsideEditor=this._getPositionOutsideEditor(e);if(positionOutsideEditor)return positionOutsideEditor;const t=this._createMouseTarget(e,testEventTarget),hintedPosition=t.position;if(!hintedPosition)return null;if(8/* CONTENT_VIEW_ZONE */===t.type||5/* GUTTER_VIEW_ZONE */===t.type){const newPosition=this._helpPositionJumpOverViewZone(t.detail);if(newPosition)return new MouseTarget(t.element,t.type,t.mouseColumn,newPosition,null,t.detail)}return t}_helpPositionJumpOverViewZone(viewZoneData){
// Force position on view zones to go above or below depending on where selection started from
const selectionStart=new core_position/* Position */.L(this._currentSelection.selectionStartLineNumber,this._currentSelection.selectionStartColumn),positionBefore=viewZoneData.positionBefore,positionAfter=viewZoneData.positionAfter;return positionBefore&&positionAfter?positionBefore.isBefore(selectionStart)?positionBefore:positionAfter:null}_dispatchMouse(position,inSelectionMode){position.position&&this._viewController.dispatchMouse({position:position.position,mouseColumn:position.mouseColumn,startedOnLineNumbers:this._mouseState.startedOnLineNumbers,inSelectionMode:inSelectionMode,mouseDownCount:this._mouseState.count,altKey:this._mouseState.altKey,ctrlKey:this._mouseState.ctrlKey,metaKey:this._mouseState.metaKey,shiftKey:this._mouseState.shiftKey,leftButton:this._mouseState.leftButton,middleButton:this._mouseState.middleButton})}}class MouseDownState{constructor(){this._altKey=!1,this._ctrlKey=!1,this._metaKey=!1,this._shiftKey=!1,this._leftButton=!1,this._middleButton=!1,this._startedOnLineNumbers=!1,this._lastMouseDownPosition=null,this._lastMouseDownPositionEqualCount=0,this._lastMouseDownCount=0,this._lastSetMouseDownCountTime=0,this.isDragAndDrop=!1}get altKey(){return this._altKey}get ctrlKey(){return this._ctrlKey}get metaKey(){return this._metaKey}get shiftKey(){return this._shiftKey}get leftButton(){return this._leftButton}get middleButton(){return this._middleButton}get startedOnLineNumbers(){return this._startedOnLineNumbers}get count(){return this._lastMouseDownCount}setModifiers(source){this._altKey=source.altKey,this._ctrlKey=source.ctrlKey,this._metaKey=source.metaKey,this._shiftKey=source.shiftKey}setStartButtons(source){this._leftButton=source.leftButton,this._middleButton=source.middleButton}setStartedOnLineNumbers(startedOnLineNumbers){this._startedOnLineNumbers=startedOnLineNumbers}trySetCount(setMouseDownCount,newMouseDownPosition){
// a. Invalidate multiple clicking if too much time has passed (will be hit by IE because the detail field of mouse events contains garbage in IE10)
const currentTime=(new Date).getTime();currentTime-this._lastSetMouseDownCountTime>MouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME&&(setMouseDownCount=1),this._lastSetMouseDownCountTime=currentTime,
// b. Ensure that we don't jump from single click to triple click in one go (will be hit by IE because the detail field of mouse events contains garbage in IE10)
setMouseDownCount>this._lastMouseDownCount+1&&(setMouseDownCount=this._lastMouseDownCount+1),
// c. Invalidate multiple clicking if the logical position is different
this._lastMouseDownPosition&&this._lastMouseDownPosition.equals(newMouseDownPosition)?this._lastMouseDownPositionEqualCount++:this._lastMouseDownPositionEqualCount=1,this._lastMouseDownPosition=newMouseDownPosition,
// Finally set the lastMouseDownCount
this._lastMouseDownCount=Math.min(setMouseDownCount,this._lastMouseDownPositionEqualCount)}}MouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME=400;// ms
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/base/browser/canIUse.js
var canIUse=__webpack_require__(910161),textAreaInput=__webpack_require__(35715);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaInput.js
// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/controller/pointerHandler.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
/**
 * Currently only tested on iOS 13/ iPadOS.
 */
class PointerEventHandler extends MouseHandler{constructor(context,viewController,viewHelper){super(context,viewController,viewHelper),this._register(touch/* Gesture */.o.addTarget(this.viewHelper.linesContentDomNode)),this._register(dom/* addDisposableListener */.nm(this.viewHelper.linesContentDomNode,touch/* EventType */.t.Tap,(e=>this.onTap(e)))),this._register(dom/* addDisposableListener */.nm(this.viewHelper.linesContentDomNode,touch/* EventType */.t.Change,(e=>this.onChange(e)))),this._register(dom/* addDisposableListener */.nm(this.viewHelper.linesContentDomNode,touch/* EventType */.t.Contextmenu,(e=>this._onContextMenu(new EditorMouseEvent(e,this.viewHelper.viewDomNode),!1)))),this._lastPointerType="mouse",this._register(dom/* addDisposableListener */.nm(this.viewHelper.linesContentDomNode,"pointerdown",(e=>{const pointerType=e.pointerType;this._lastPointerType="mouse"!==pointerType?"touch"===pointerType?"touch":"pen":"mouse"})));
// PonterEvents
const pointerEvents=new EditorPointerEventFactory(this.viewHelper.viewDomNode);this._register(pointerEvents.onPointerMoveThrottled(this.viewHelper.viewDomNode,(e=>this._onMouseMove(e)),createMouseMoveEventMerger(this.mouseTargetFactory),MouseHandler.MOUSE_MOVE_MINIMUM_TIME)),this._register(pointerEvents.onPointerUp(this.viewHelper.viewDomNode,(e=>this._onMouseUp(e)))),this._register(pointerEvents.onPointerLeave(this.viewHelper.viewDomNode,(e=>this._onMouseLeave(e)))),this._register(pointerEvents.onPointerDown(this.viewHelper.viewDomNode,(e=>this._onMouseDown(e))))}onTap(event){if(!event.initialTarget||!this.viewHelper.linesContentDomNode.contains(event.initialTarget))return;event.preventDefault(),this.viewHelper.focusTextArea();const target=this._createMouseTarget(new EditorMouseEvent(event,this.viewHelper.viewDomNode),!1);target.position&&
// this.viewController.moveTo(target.position);
this.viewController.dispatchMouse({position:target.position,mouseColumn:target.position.column,startedOnLineNumbers:!1,mouseDownCount:event.tapCount,inSelectionMode:!1,altKey:!1,ctrlKey:!1,metaKey:!1,shiftKey:!1,leftButton:!1,middleButton:!1})}onChange(e){"touch"===this._lastPointerType&&this._context.model.deltaScrollNow(-e.translationX,-e.translationY)}_onMouseDown(e){"touch"!==e.browserEvent.pointerType&&super._onMouseDown(e)}}class TouchHandler extends MouseHandler{constructor(context,viewController,viewHelper){super(context,viewController,viewHelper),this._register(touch/* Gesture */.o.addTarget(this.viewHelper.linesContentDomNode)),this._register(dom/* addDisposableListener */.nm(this.viewHelper.linesContentDomNode,touch/* EventType */.t.Tap,(e=>this.onTap(e)))),this._register(dom/* addDisposableListener */.nm(this.viewHelper.linesContentDomNode,touch/* EventType */.t.Change,(e=>this.onChange(e)))),this._register(dom/* addDisposableListener */.nm(this.viewHelper.linesContentDomNode,touch/* EventType */.t.Contextmenu,(e=>this._onContextMenu(new EditorMouseEvent(e,this.viewHelper.viewDomNode),!1))))}onTap(event){event.preventDefault(),this.viewHelper.focusTextArea();const target=this._createMouseTarget(new EditorMouseEvent(event,this.viewHelper.viewDomNode),!1);if(target.position){
// Send the tap event also to the <textarea> (for input purposes)
const event=document.createEvent("CustomEvent");event.initEvent(textAreaInput/* TextAreaSyntethicEvents */.pd.Tap,!1,!0),this.viewHelper.dispatchTextAreaEvent(event),this.viewController.moveTo(target.position)}}onChange(e){this._context.model.deltaScrollNow(-e.translationX,-e.translationY)}}class PointerHandler extends lifecycle/* Disposable */.JT{constructor(context,viewController,viewHelper){super(),platform/* isIOS */.gn&&canIUse/* BrowserFeatures */.D.pointerEvents?this.handler=this._register(new PointerEventHandler(context,viewController,viewHelper)):window.TouchEvent?this.handler=this._register(new TouchHandler(context,viewController,viewHelper)):this.handler=this._register(new MouseHandler(context,viewController,viewHelper))}getTargetAtClientPoint(clientX,clientY){return this.handler.getTargetAtClientPoint(clientX,clientY)}}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/base/common/strings.js
var strings=__webpack_require__(697295),textAreaState=__webpack_require__(715887);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaState.js
// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/view/dynamicViewOverlay.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class DynamicViewOverlay extends viewEventHandler/* ViewEventHandler */.O{}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/view/editorColorRegistry.js
var editorColorRegistry=__webpack_require__(627869),themeService=__webpack_require__(897781);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js
// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lineNumbers/lineNumbers.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class LineNumbersOverlay extends DynamicViewOverlay{constructor(context){super(),this._context=context,this._readConfig(),this._lastCursorModelPosition=new core_position/* Position */.L(1,1),this._renderResult=null,this._activeLineNumber=1,this._context.addEventHandler(this)}_readConfig(){const options=this._context.configuration.options;this._lineHeight=options.get(58/* lineHeight */);const lineNumbers=options.get(59/* lineNumbers */);this._renderLineNumbers=lineNumbers.renderType,this._renderCustomLineNumbers=lineNumbers.renderFn,this._renderFinalNewline=options.get(83/* renderFinalNewline */);const layoutInfo=options.get(129/* layoutInfo */);this._lineNumbersLeft=layoutInfo.lineNumbersLeft,this._lineNumbersWidth=layoutInfo.lineNumbersWidth}dispose(){this._context.removeEventHandler(this),this._renderResult=null,super.dispose()}
// --- begin event handlers
onConfigurationChanged(e){return this._readConfig(),!0}onCursorStateChanged(e){const primaryViewPosition=e.selections[0].getPosition();this._lastCursorModelPosition=this._context.model.coordinatesConverter.convertViewPositionToModelPosition(primaryViewPosition);let shouldRender=!1;return this._activeLineNumber!==primaryViewPosition.lineNumber&&(this._activeLineNumber=primaryViewPosition.lineNumber,shouldRender=!0),2/* Relative */!==this._renderLineNumbers&&3/* Interval */!==this._renderLineNumbers||(shouldRender=!0),shouldRender}onFlushed(e){return!0}onLinesChanged(e){return!0}onLinesDeleted(e){return!0}onLinesInserted(e){return!0}onScrollChanged(e){return e.scrollTopChanged}onZonesChanged(e){return!0}
// --- end event handlers
_getLineRenderLineNumber(viewLineNumber){const modelPosition=this._context.model.coordinatesConverter.convertViewPositionToModelPosition(new core_position/* Position */.L(viewLineNumber,1));if(1!==modelPosition.column)return"";const modelLineNumber=modelPosition.lineNumber;if(this._renderCustomLineNumbers)return this._renderCustomLineNumbers(modelLineNumber);if(2/* Relative */===this._renderLineNumbers){const diff=Math.abs(this._lastCursorModelPosition.lineNumber-modelLineNumber);return 0===diff?'<span class="relative-current-line-number">'+modelLineNumber+"</span>":String(diff)}return 3/* Interval */===this._renderLineNumbers?this._lastCursorModelPosition.lineNumber===modelLineNumber||modelLineNumber%10===0?String(modelLineNumber):"":String(modelLineNumber)}prepareRender(ctx){if(0/* Off */===this._renderLineNumbers)return void(this._renderResult=null);const lineHeightClassName=platform/* isLinux */.IJ?this._lineHeight%2===0?" lh-even":" lh-odd":"",visibleStartLineNumber=ctx.visibleRange.startLineNumber,visibleEndLineNumber=ctx.visibleRange.endLineNumber,common='<div class="'+LineNumbersOverlay.CLASS_NAME+lineHeightClassName+'" style="left:'+this._lineNumbersLeft+"px;width:"+this._lineNumbersWidth+'px;">',lineCount=this._context.model.getLineCount(),output=[];for(let lineNumber=visibleStartLineNumber;lineNumber<=visibleEndLineNumber;lineNumber++){const lineIndex=lineNumber-visibleStartLineNumber;if(!this._renderFinalNewline&&lineNumber===lineCount&&0===this._context.model.getLineLength(lineNumber)){
// Do not render last (empty) line
output[lineIndex]="";continue}const renderLineNumber=this._getLineRenderLineNumber(lineNumber);renderLineNumber?lineNumber===this._activeLineNumber?output[lineIndex]='<div class="active-line-number '+LineNumbersOverlay.CLASS_NAME+lineHeightClassName+'" style="left:'+this._lineNumbersLeft+"px;width:"+this._lineNumbersWidth+'px;">'+renderLineNumber+"</div>":output[lineIndex]=common+renderLineNumber+"</div>":output[lineIndex]=""}this._renderResult=output}render(startLineNumber,lineNumber){if(!this._renderResult)return"";const lineIndex=lineNumber-startLineNumber;return lineIndex<0||lineIndex>=this._renderResult.length?"":this._renderResult[lineIndex]}}LineNumbersOverlay.CLASS_NAME="line-numbers",
// theming
(0,themeService/* registerThemingParticipant */.Ic)(((theme,collector)=>{const lineNumbers=theme.getColor(editorColorRegistry/* editorLineNumbers */.hw);lineNumbers&&collector.addRule(`.monaco-editor .line-numbers { color: ${lineNumbers}; }`);const activeLineNumber=theme.getColor(editorColorRegistry/* editorActiveLineNumber */.DD);activeLineNumber&&collector.addRule(`.monaco-editor .line-numbers.active-line-number { color: ${activeLineNumber}; }`)}));// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/margin/margin.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class Margin extends ViewPart{constructor(context){super(context);const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);this._canUseLayerHinting=!options.get(28/* disableLayerHinting */),this._contentLeft=layoutInfo.contentLeft,this._glyphMarginLeft=layoutInfo.glyphMarginLeft,this._glyphMarginWidth=layoutInfo.glyphMarginWidth,this._domNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this._domNode.setClassName(Margin.OUTER_CLASS_NAME),this._domNode.setPosition("absolute"),this._domNode.setAttribute("role","presentation"),this._domNode.setAttribute("aria-hidden","true"),this._glyphMarginBackgroundDomNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this._glyphMarginBackgroundDomNode.setClassName(Margin.CLASS_NAME),this._domNode.appendChild(this._glyphMarginBackgroundDomNode)}dispose(){super.dispose()}getDomNode(){return this._domNode}
// --- begin event handlers
onConfigurationChanged(e){const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);return this._canUseLayerHinting=!options.get(28/* disableLayerHinting */),this._contentLeft=layoutInfo.contentLeft,this._glyphMarginLeft=layoutInfo.glyphMarginLeft,this._glyphMarginWidth=layoutInfo.glyphMarginWidth,!0}onScrollChanged(e){return super.onScrollChanged(e)||e.scrollTopChanged}
// --- end event handlers
prepareRender(ctx){
// Nothing to read
}render(ctx){this._domNode.setLayerHinting(this._canUseLayerHinting),this._domNode.setContain("strict");const adjustedScrollTop=ctx.scrollTop-ctx.bigNumbersDelta;this._domNode.setTop(-adjustedScrollTop);const height=Math.min(ctx.scrollHeight,1e6);this._domNode.setHeight(height),this._domNode.setWidth(this._contentLeft),this._glyphMarginBackgroundDomNode.setLeft(this._glyphMarginLeft),this._glyphMarginBackgroundDomNode.setWidth(this._glyphMarginWidth),this._glyphMarginBackgroundDomNode.setHeight(height)}}Margin.CLASS_NAME="glyph-margin",Margin.OUTER_CLASS_NAME="margin";
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/controller/wordCharacterClassifier.js
var wordCharacterClassifier=__webpack_require__(759410),mouseCursor=__webpack_require__(596542);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/base/browser/ui/mouseCursor/mouseCursor.js
// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaHandler.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class VisibleTextAreaData{constructor(top,left,width){this._visibleTextAreaBrand=void 0,this.top=top,this.left=left,this.width=width}setWidth(width){return new VisibleTextAreaData(this.top,this.left,width)}}const canUseZeroSizeTextarea=browser/* isFirefox */.vU;class TextAreaHandler extends ViewPart{constructor(context,viewController,viewHelper){super(context),
// --- end view API
this._primaryCursorPosition=new core_position/* Position */.L(1,1),this._primaryCursorVisibleRange=null,this._viewController=viewController,this._viewHelper=viewHelper,this._scrollLeft=0,this._scrollTop=0;const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);this._setAccessibilityOptions(options),this._contentLeft=layoutInfo.contentLeft,this._contentWidth=layoutInfo.contentWidth,this._contentHeight=layoutInfo.height,this._fontInfo=options.get(43/* fontInfo */),this._lineHeight=options.get(58/* lineHeight */),this._emptySelectionClipboard=options.get(32/* emptySelectionClipboard */),this._copyWithSyntaxHighlighting=options.get(21/* copyWithSyntaxHighlighting */),this._visibleTextArea=null,this._selections=[new core_selection/* Selection */.Y(1,1,1,1)],this._modelSelections=[new core_selection/* Selection */.Y(1,1,1,1)],this._lastRenderPosition=null,
// Text Area (The focus will always be in the textarea when the cursor is blinking)
this.textArea=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("textarea")),PartFingerprints.write(this.textArea,6/* TextArea */),this.textArea.setClassName(`inputarea ${mouseCursor/* MOUSE_CURSOR_TEXT_CSS_CLASS_NAME */.S}`),this.textArea.setAttribute("wrap","off"),this.textArea.setAttribute("autocorrect","off"),this.textArea.setAttribute("autocapitalize","off"),this.textArea.setAttribute("autocomplete","off"),this.textArea.setAttribute("spellcheck","false"),this.textArea.setAttribute("aria-label",this._getAriaLabel(options)),this.textArea.setAttribute("tabindex",String(options.get(111/* tabIndex */))),this.textArea.setAttribute("role","textbox"),this.textArea.setAttribute("aria-roledescription",nls/* localize */.N("editor","editor")),this.textArea.setAttribute("aria-multiline","true"),this.textArea.setAttribute("aria-haspopup","false"),this.textArea.setAttribute("aria-autocomplete","both"),options.get(30/* domReadOnly */)&&options.get(80/* readOnly */)&&this.textArea.setAttribute("readonly","true"),this.textAreaCover=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this.textAreaCover.setPosition("absolute");const simpleModel={getLineCount:()=>this._context.model.getLineCount(),getLineMaxColumn:lineNumber=>this._context.model.getLineMaxColumn(lineNumber),getValueInRange:(range,eol)=>this._context.model.getValueInRange(range,eol)},textAreaInputHost={getDataToCopy:generateHTML=>{const rawTextToCopy=this._context.model.getPlainTextToCopy(this._modelSelections,this._emptySelectionClipboard,platform/* isWindows */.ED),newLineCharacter=this._context.model.getEOL(),isFromEmptySelection=this._emptySelectionClipboard&&1===this._modelSelections.length&&this._modelSelections[0].isEmpty(),multicursorText=Array.isArray(rawTextToCopy)?rawTextToCopy:null,text=Array.isArray(rawTextToCopy)?rawTextToCopy.join(newLineCharacter):rawTextToCopy;let html,mode=null;if(generateHTML&&(textAreaInput/* CopyOptions */.RA.forceCopyWithSyntaxHighlighting||this._copyWithSyntaxHighlighting&&text.length<65536)){const richText=this._context.model.getRichTextToCopy(this._modelSelections,this._emptySelectionClipboard);richText&&(html=richText.html,mode=richText.mode)}return{isFromEmptySelection:isFromEmptySelection,multicursorText:multicursorText,text:text,html:html,mode:mode}},getScreenReaderContent:currentState=>{if(1/* Disabled */===this._accessibilitySupport){
// We know for a fact that a screen reader is not attached
// On OSX, we write the character before the cursor to allow for "long-press" composition
// Also on OSX, we write the word before the cursor to allow for the Accessibility Keyboard to give good hints
if(platform/* isMacintosh */.dz){const selection=this._selections[0];if(selection.isEmpty()){const position=selection.getStartPosition();let textBefore=this._getWordBeforePosition(position);if(0===textBefore.length&&(textBefore=this._getCharacterBeforePosition(position)),textBefore.length>0)return new textAreaState/* TextAreaState */.un(textBefore,textBefore.length,textBefore.length,position,position)}}return textAreaState/* TextAreaState */.un.EMPTY}if(browser/* isAndroid */.Dt){
// when tapping in the editor on a word, Android enters composition mode.
// in the `compositionstart` event we cannot clear the textarea, because
// it then forgets to ever send a `compositionend`.
// we therefore only write the current word in the textarea
const selection=this._selections[0];if(selection.isEmpty()){const position=selection.getStartPosition(),[wordAtPosition,positionOffsetInWord]=this._getAndroidWordAtPosition(position);if(wordAtPosition.length>0)return new textAreaState/* TextAreaState */.un(wordAtPosition,positionOffsetInWord,positionOffsetInWord,position,position)}return textAreaState/* TextAreaState */.un.EMPTY}return textAreaState/* PagedScreenReaderStrategy */.ee.fromEditorSelection(currentState,simpleModel,this._selections[0],this._accessibilityPageSize,0/* Unknown */===this._accessibilitySupport)},deduceModelPosition:(viewAnchorPosition,deltaOffset,lineFeedCnt)=>this._context.model.deduceModelPositionRelativeToViewPosition(viewAnchorPosition,deltaOffset,lineFeedCnt)};this._textAreaInput=this._register(new textAreaInput/* TextAreaInput */.Fz(textAreaInputHost,this.textArea)),this._register(this._textAreaInput.onKeyDown((e=>{this._viewController.emitKeyDown(e)}))),this._register(this._textAreaInput.onKeyUp((e=>{this._viewController.emitKeyUp(e)}))),this._register(this._textAreaInput.onPaste((e=>{let pasteOnNewLine=!1,multicursorText=null,mode=null;e.metadata&&(pasteOnNewLine=this._emptySelectionClipboard&&!!e.metadata.isFromEmptySelection,multicursorText="undefined"!==typeof e.metadata.multicursorText?e.metadata.multicursorText:null,mode=e.metadata.mode),this._viewController.paste(e.text,pasteOnNewLine,multicursorText,mode)}))),this._register(this._textAreaInput.onCut((()=>{this._viewController.cut()}))),this._register(this._textAreaInput.onType((e=>{e.replacePrevCharCnt||e.replaceNextCharCnt||e.positionDelta?(textAreaState/* _debugComposition */.al,this._viewController.compositionType(e.text,e.replacePrevCharCnt,e.replaceNextCharCnt,e.positionDelta)):(textAreaState/* _debugComposition */.al,this._viewController.type(e.text))}))),this._register(this._textAreaInput.onSelectionChangeRequest((modelSelection=>{this._viewController.setSelection(modelSelection)}))),this._register(this._textAreaInput.onCompositionStart((e=>{const lineNumber=this._selections[0].startLineNumber,column=this._selections[0].startColumn+e.revealDeltaColumns;this._context.model.revealRange("keyboard",!0,new core_range/* Range */.e(lineNumber,column,lineNumber,column),0/* Simple */,1/* Immediate */);
// Find range pixel position
const visibleRange=this._viewHelper.visibleRangeForPositionRelativeToEditor(lineNumber,column);visibleRange&&(this._visibleTextArea=new VisibleTextAreaData(this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber),visibleRange.left,canUseZeroSizeTextarea?0:1),this._render()),
// Show the textarea
this.textArea.setClassName(`inputarea ${mouseCursor/* MOUSE_CURSOR_TEXT_CSS_CLASS_NAME */.S} ime-input`),this._viewController.compositionStart(),this._context.model.onCompositionStart()}))),this._register(this._textAreaInput.onCompositionUpdate((e=>{this._visibleTextArea&&(
// adjust width by its size
this._visibleTextArea=this._visibleTextArea.setWidth(measureText(e.data,this._fontInfo)),this._render())}))),this._register(this._textAreaInput.onCompositionEnd((()=>{this._visibleTextArea=null,this._render(),this.textArea.setClassName(`inputarea ${mouseCursor/* MOUSE_CURSOR_TEXT_CSS_CLASS_NAME */.S}`),this._viewController.compositionEnd(),this._context.model.onCompositionEnd()}))),this._register(this._textAreaInput.onFocus((()=>{this._context.model.setHasFocus(!0)}))),this._register(this._textAreaInput.onBlur((()=>{this._context.model.setHasFocus(!1)})))}dispose(){super.dispose()}_getAndroidWordAtPosition(position){const ANDROID_WORD_SEPARATORS='`~!@#$%^&*()-=+[{]}\\|;:",.<>/?',lineContent=this._context.model.getLineContent(position.lineNumber),wordSeparators=(0,wordCharacterClassifier/* getMapForWordSeparators */.u)(ANDROID_WORD_SEPARATORS);let goingLeft=!0,startColumn=position.column,goingRight=!0,endColumn=position.column,distance=0;while(distance<50&&(goingLeft||goingRight)){if(goingLeft&&startColumn<=1&&(goingLeft=!1),goingLeft){const charCode=lineContent.charCodeAt(startColumn-2),charClass=wordSeparators.get(charCode);0/* Regular */!==charClass?goingLeft=!1:startColumn--}if(goingRight&&endColumn>lineContent.length&&(goingRight=!1),goingRight){const charCode=lineContent.charCodeAt(endColumn-1),charClass=wordSeparators.get(charCode);0/* Regular */!==charClass?goingRight=!1:endColumn++}distance++}return[lineContent.substring(startColumn-1,endColumn-1),position.column-startColumn]}_getWordBeforePosition(position){const lineContent=this._context.model.getLineContent(position.lineNumber),wordSeparators=(0,wordCharacterClassifier/* getMapForWordSeparators */.u)(this._context.configuration.options.get(115/* wordSeparators */));let column=position.column,distance=0;while(column>1){const charCode=lineContent.charCodeAt(column-2),charClass=wordSeparators.get(charCode);if(0/* Regular */!==charClass||distance>50)return lineContent.substring(column-1,position.column-1);distance++,column--}return lineContent.substring(0,position.column-1)}_getCharacterBeforePosition(position){if(position.column>1){const lineContent=this._context.model.getLineContent(position.lineNumber),charBefore=lineContent.charAt(position.column-2);if(!strings/* isHighSurrogate */.ZG(charBefore.charCodeAt(0)))return charBefore}return""}_getAriaLabel(options){const accessibilitySupport=options.get(2/* accessibilitySupport */);return 1/* Disabled */===accessibilitySupport?nls/* localize */.N("accessibilityOffAriaLabel","The editor is not accessible at this time. Press {0} for options.",platform/* isLinux */.IJ?"Shift+Alt+F1":"Alt+F1"):options.get(4/* ariaLabel */)}_setAccessibilityOptions(options){this._accessibilitySupport=options.get(2/* accessibilitySupport */);const accessibilityPageSize=options.get(3/* accessibilityPageSize */);2/* Enabled */===this._accessibilitySupport&&accessibilityPageSize===editorOptions/* EditorOptions */.BH.accessibilityPageSize.defaultValue?
// If a screen reader is attached and the default value is not set we shuold automatically increase the page size to 500 for a better experience
this._accessibilityPageSize=500:this._accessibilityPageSize=accessibilityPageSize}
// --- begin event handlers
onConfigurationChanged(e){const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);return this._setAccessibilityOptions(options),this._contentLeft=layoutInfo.contentLeft,this._contentWidth=layoutInfo.contentWidth,this._contentHeight=layoutInfo.height,this._fontInfo=options.get(43/* fontInfo */),this._lineHeight=options.get(58/* lineHeight */),this._emptySelectionClipboard=options.get(32/* emptySelectionClipboard */),this._copyWithSyntaxHighlighting=options.get(21/* copyWithSyntaxHighlighting */),this.textArea.setAttribute("aria-label",this._getAriaLabel(options)),this.textArea.setAttribute("tabindex",String(options.get(111/* tabIndex */))),(e.hasChanged(30/* domReadOnly */)||e.hasChanged(80/* readOnly */))&&(options.get(30/* domReadOnly */)&&options.get(80/* readOnly */)?this.textArea.setAttribute("readonly","true"):this.textArea.removeAttribute("readonly")),e.hasChanged(2/* accessibilitySupport */)&&this._textAreaInput.writeScreenReaderContent("strategy changed"),!0}onCursorStateChanged(e){return this._selections=e.selections.slice(0),this._modelSelections=e.modelSelections.slice(0),this._textAreaInput.writeScreenReaderContent("selection changed"),!0}onDecorationsChanged(e){
// true for inline decorations that can end up relayouting text
return!0}onFlushed(e){return!0}onLinesChanged(e){return!0}onLinesDeleted(e){return!0}onLinesInserted(e){return!0}onScrollChanged(e){return this._scrollLeft=e.scrollLeft,this._scrollTop=e.scrollTop,!0}onZonesChanged(e){return!0}
// --- end event handlers
// --- begin view API
isFocused(){return this._textAreaInput.isFocused()}focusTextArea(){this._textAreaInput.focusTextArea()}getLastRenderData(){return this._lastRenderPosition}setAriaOptions(options){options.activeDescendant?(this.textArea.setAttribute("aria-haspopup","true"),this.textArea.setAttribute("aria-autocomplete","list"),this.textArea.setAttribute("aria-activedescendant",options.activeDescendant)):(this.textArea.setAttribute("aria-haspopup","false"),this.textArea.setAttribute("aria-autocomplete","both"),this.textArea.removeAttribute("aria-activedescendant")),options.role&&this.textArea.setAttribute("role",options.role)}prepareRender(ctx){this._primaryCursorPosition=new core_position/* Position */.L(this._selections[0].positionLineNumber,this._selections[0].positionColumn),this._primaryCursorVisibleRange=ctx.visibleRangeForPosition(this._primaryCursorPosition)}render(ctx){this._textAreaInput.writeScreenReaderContent("render"),this._render()}_render(){if(this._visibleTextArea)
// The text area is visible for composition reasons
return void this._renderInsideEditor(null,this._visibleTextArea.top-this._scrollTop,this._contentLeft+this._visibleTextArea.left-this._scrollLeft,this._visibleTextArea.width,this._lineHeight);if(!this._primaryCursorVisibleRange)
// The primary cursor is outside the viewport => place textarea to the top left
return void this._renderAtTopLeft();const left=this._contentLeft+this._primaryCursorVisibleRange.left-this._scrollLeft;if(left<this._contentLeft||left>this._contentLeft+this._contentWidth)
// cursor is outside the viewport
return void this._renderAtTopLeft();const top=this._context.viewLayout.getVerticalOffsetForLineNumber(this._selections[0].positionLineNumber)-this._scrollTop;top<0||top>this._contentHeight?
// cursor is outside the viewport
this._renderAtTopLeft():
// The primary cursor is in the viewport (at least vertically) => place textarea on the cursor
platform/* isMacintosh */.dz?
// For the popup emoji input, we will make the text area as high as the line height
// We will also make the fontSize and lineHeight the correct dimensions to help with the placement of these pickers
this._renderInsideEditor(this._primaryCursorPosition,top,left,canUseZeroSizeTextarea?0:1,this._lineHeight):this._renderInsideEditor(this._primaryCursorPosition,top,left,canUseZeroSizeTextarea?0:1,canUseZeroSizeTextarea?0:1)}_renderInsideEditor(renderedPosition,top,left,width,height){this._lastRenderPosition=renderedPosition;const ta=this.textArea,tac=this.textAreaCover;configuration/* Configuration */.V.applyFontInfo(ta,this._fontInfo),ta.setTop(top),ta.setLeft(left),ta.setWidth(width),ta.setHeight(height),tac.setTop(0),tac.setLeft(0),tac.setWidth(0),tac.setHeight(0)}_renderAtTopLeft(){this._lastRenderPosition=null;const ta=this.textArea,tac=this.textAreaCover;if(configuration/* Configuration */.V.applyFontInfo(ta,this._fontInfo),ta.setTop(0),ta.setLeft(0),tac.setTop(0),tac.setLeft(0),canUseZeroSizeTextarea)return ta.setWidth(0),ta.setHeight(0),tac.setWidth(0),void tac.setHeight(0);
// (in WebKit the textarea is 1px by 1px because it cannot handle input to a 0x0 textarea)
// specifically, when doing Korean IME, setting the textarea to 0x0 breaks IME badly.
ta.setWidth(1),ta.setHeight(1),tac.setWidth(1),tac.setHeight(1);const options=this._context.configuration.options;options.get(49/* glyphMargin */)?tac.setClassName("monaco-editor-background textAreaCover "+Margin.OUTER_CLASS_NAME):0/* Off */!==options.get(59/* lineNumbers */).renderType?tac.setClassName("monaco-editor-background textAreaCover "+LineNumbersOverlay.CLASS_NAME):tac.setClassName("monaco-editor-background textAreaCover")}}function measureText(text,fontInfo){
// adjust width by its size
const canvasElem=document.createElement("canvas"),context=canvasElem.getContext("2d");context.font=createFontString(fontInfo);const metrics=context.measureText(text);return browser/* isFirefox */.vU?metrics.width+2:metrics.width}function createFontString(bareFontInfo){return doCreateFontString("normal",bareFontInfo.fontWeight,bareFontInfo.fontSize,bareFontInfo.lineHeight,bareFontInfo.fontFamily)}function doCreateFontString(fontStyle,fontWeight,fontSize,lineHeight,fontFamily){
// The full font syntax is:
// style | variant | weight | stretch | size/line-height | fontFamily
// (https://developer.mozilla.org/en-US/docs/Web/CSS/font)
// But it appears Edge and IE11 cannot properly parse `stretch`.
return`${fontStyle} normal ${fontWeight} ${fontSize}px / ${lineHeight}px ${fontFamily}`}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/controller/coreCommands.js
var coreCommands=__webpack_require__(971513);// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/view/viewController.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class ViewController{constructor(configuration,viewModel,userInputEvents,commandDelegate){this.configuration=configuration,this.viewModel=viewModel,this.userInputEvents=userInputEvents,this.commandDelegate=commandDelegate}paste(text,pasteOnNewLine,multicursorText,mode){this.commandDelegate.paste(text,pasteOnNewLine,multicursorText,mode)}type(text){this.commandDelegate.type(text)}compositionType(text,replacePrevCharCnt,replaceNextCharCnt,positionDelta){this.commandDelegate.compositionType(text,replacePrevCharCnt,replaceNextCharCnt,positionDelta)}compositionStart(){this.commandDelegate.startComposition()}compositionEnd(){this.commandDelegate.endComposition()}cut(){this.commandDelegate.cut()}setSelection(modelSelection){coreCommands/* CoreNavigationCommands */.Ox.SetSelection.runCoreEditorCommand(this.viewModel,{source:"keyboard",selection:modelSelection})}_validateViewColumn(viewPosition){const minColumn=this.viewModel.getLineMinColumn(viewPosition.lineNumber);return viewPosition.column<minColumn?new core_position/* Position */.L(viewPosition.lineNumber,minColumn):viewPosition}_hasMulticursorModifier(data){switch(this.configuration.options.get(69/* multiCursorModifier */)){case"altKey":return data.altKey;case"ctrlKey":return data.ctrlKey;case"metaKey":return data.metaKey;default:return!1}}_hasNonMulticursorModifier(data){switch(this.configuration.options.get(69/* multiCursorModifier */)){case"altKey":return data.ctrlKey||data.metaKey;case"ctrlKey":return data.altKey||data.metaKey;case"metaKey":return data.ctrlKey||data.altKey;default:return!1}}dispatchMouse(data){const options=this.configuration.options,selectionClipboardIsOn=platform/* isLinux */.IJ&&options.get(95/* selectionClipboard */),columnSelection=options.get(18/* columnSelection */);data.middleButton&&!selectionClipboardIsOn?this._columnSelect(data.position,data.mouseColumn,data.inSelectionMode):data.startedOnLineNumbers?
// If the dragging started on the gutter, then have operations work on the entire line
this._hasMulticursorModifier(data)?data.inSelectionMode?this._lastCursorLineSelect(data.position):this._createCursor(data.position,!0):data.inSelectionMode?this._lineSelectDrag(data.position):this._lineSelect(data.position):data.mouseDownCount>=4?this._selectAll():3===data.mouseDownCount?this._hasMulticursorModifier(data)?data.inSelectionMode?this._lastCursorLineSelectDrag(data.position):this._lastCursorLineSelect(data.position):data.inSelectionMode?this._lineSelectDrag(data.position):this._lineSelect(data.position):2===data.mouseDownCount?this._hasMulticursorModifier(data)?this._lastCursorWordSelect(data.position):data.inSelectionMode?this._wordSelectDrag(data.position):this._wordSelect(data.position):this._hasMulticursorModifier(data)?this._hasNonMulticursorModifier(data)||(data.shiftKey?this._columnSelect(data.position,data.mouseColumn,!0):
// Do multi-cursor operations only when purely alt is pressed
data.inSelectionMode?this._lastCursorMoveToSelect(data.position):this._createCursor(data.position,!1)):data.inSelectionMode?data.altKey||columnSelection?this._columnSelect(data.position,data.mouseColumn,!0):this._moveToSelect(data.position):this.moveTo(data.position)}_usualArgs(viewPosition){return viewPosition=this._validateViewColumn(viewPosition),{source:"mouse",position:this._convertViewToModelPosition(viewPosition),viewPosition:viewPosition}}moveTo(viewPosition){coreCommands/* CoreNavigationCommands */.Ox.MoveTo.runCoreEditorCommand(this.viewModel,this._usualArgs(viewPosition))}_moveToSelect(viewPosition){coreCommands/* CoreNavigationCommands */.Ox.MoveToSelect.runCoreEditorCommand(this.viewModel,this._usualArgs(viewPosition))}_columnSelect(viewPosition,mouseColumn,doColumnSelect){viewPosition=this._validateViewColumn(viewPosition),coreCommands/* CoreNavigationCommands */.Ox.ColumnSelect.runCoreEditorCommand(this.viewModel,{source:"mouse",position:this._convertViewToModelPosition(viewPosition),viewPosition:viewPosition,mouseColumn:mouseColumn,doColumnSelect:doColumnSelect})}_createCursor(viewPosition,wholeLine){viewPosition=this._validateViewColumn(viewPosition),coreCommands/* CoreNavigationCommands */.Ox.CreateCursor.runCoreEditorCommand(this.viewModel,{source:"mouse",position:this._convertViewToModelPosition(viewPosition),viewPosition:viewPosition,wholeLine:wholeLine})}_lastCursorMoveToSelect(viewPosition){coreCommands/* CoreNavigationCommands */.Ox.LastCursorMoveToSelect.runCoreEditorCommand(this.viewModel,this._usualArgs(viewPosition))}_wordSelect(viewPosition){coreCommands/* CoreNavigationCommands */.Ox.WordSelect.runCoreEditorCommand(this.viewModel,this._usualArgs(viewPosition))}_wordSelectDrag(viewPosition){coreCommands/* CoreNavigationCommands */.Ox.WordSelectDrag.runCoreEditorCommand(this.viewModel,this._usualArgs(viewPosition))}_lastCursorWordSelect(viewPosition){coreCommands/* CoreNavigationCommands */.Ox.LastCursorWordSelect.runCoreEditorCommand(this.viewModel,this._usualArgs(viewPosition))}_lineSelect(viewPosition){coreCommands/* CoreNavigationCommands */.Ox.LineSelect.runCoreEditorCommand(this.viewModel,this._usualArgs(viewPosition))}_lineSelectDrag(viewPosition){coreCommands/* CoreNavigationCommands */.Ox.LineSelectDrag.runCoreEditorCommand(this.viewModel,this._usualArgs(viewPosition))}_lastCursorLineSelect(viewPosition){coreCommands/* CoreNavigationCommands */.Ox.LastCursorLineSelect.runCoreEditorCommand(this.viewModel,this._usualArgs(viewPosition))}_lastCursorLineSelectDrag(viewPosition){coreCommands/* CoreNavigationCommands */.Ox.LastCursorLineSelectDrag.runCoreEditorCommand(this.viewModel,this._usualArgs(viewPosition))}_selectAll(){coreCommands/* CoreNavigationCommands */.Ox.SelectAll.runCoreEditorCommand(this.viewModel,{source:"mouse"})}
// ----------------------
_convertViewToModelPosition(viewPosition){return this.viewModel.coordinatesConverter.convertViewPositionToModelPosition(viewPosition)}emitKeyDown(e){this.userInputEvents.emitKeyDown(e)}emitKeyUp(e){this.userInputEvents.emitKeyUp(e)}emitContextMenu(e){this.userInputEvents.emitContextMenu(e)}emitMouseMove(e){this.userInputEvents.emitMouseMove(e)}emitMouseLeave(e){this.userInputEvents.emitMouseLeave(e)}emitMouseUp(e){this.userInputEvents.emitMouseUp(e)}emitMouseDown(e){this.userInputEvents.emitMouseDown(e)}emitMouseDrag(e){this.userInputEvents.emitMouseDrag(e)}emitMouseDrop(e){this.userInputEvents.emitMouseDrop(e)}emitMouseDropCanceled(){this.userInputEvents.emitMouseDropCanceled()}emitMouseWheel(e){this.userInputEvents.emitMouseWheel(e)}}// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/view/viewUserInputEvents.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class ViewUserInputEvents{constructor(coordinatesConverter){this.onKeyDown=null,this.onKeyUp=null,this.onContextMenu=null,this.onMouseMove=null,this.onMouseLeave=null,this.onMouseDown=null,this.onMouseUp=null,this.onMouseDrag=null,this.onMouseDrop=null,this.onMouseDropCanceled=null,this.onMouseWheel=null,this._coordinatesConverter=coordinatesConverter}emitKeyDown(e){this.onKeyDown&&this.onKeyDown(e)}emitKeyUp(e){this.onKeyUp&&this.onKeyUp(e)}emitContextMenu(e){this.onContextMenu&&this.onContextMenu(this._convertViewToModelMouseEvent(e))}emitMouseMove(e){this.onMouseMove&&this.onMouseMove(this._convertViewToModelMouseEvent(e))}emitMouseLeave(e){this.onMouseLeave&&this.onMouseLeave(this._convertViewToModelMouseEvent(e))}emitMouseDown(e){this.onMouseDown&&this.onMouseDown(this._convertViewToModelMouseEvent(e))}emitMouseUp(e){this.onMouseUp&&this.onMouseUp(this._convertViewToModelMouseEvent(e))}emitMouseDrag(e){this.onMouseDrag&&this.onMouseDrag(this._convertViewToModelMouseEvent(e))}emitMouseDrop(e){this.onMouseDrop&&this.onMouseDrop(this._convertViewToModelMouseEvent(e))}emitMouseDropCanceled(){this.onMouseDropCanceled&&this.onMouseDropCanceled()}emitMouseWheel(e){this.onMouseWheel&&this.onMouseWheel(e)}_convertViewToModelMouseEvent(e){return e.target?{event:e.event,target:this._convertViewToModelMouseTarget(e.target)}:e}_convertViewToModelMouseTarget(target){return ViewUserInputEvents.convertViewToModelMouseTarget(target,this._coordinatesConverter)}static convertViewToModelMouseTarget(target,coordinatesConverter){return new ExternalMouseTarget(target.element,target.type,target.mouseColumn,target.position?coordinatesConverter.convertViewPositionToModelPosition(target.position):null,target.range?coordinatesConverter.convertViewRangeToModelRange(target.range):null,target.detail)}}class ExternalMouseTarget{constructor(element,type,mouseColumn,position,range,detail){this.element=element,this.type=type,this.mouseColumn=mouseColumn,this.position=position,this.range=range,this.detail=detail}toString(){return MouseTarget.toString(this)}}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/core/stringBuilder.js
var _a,stringBuilder=__webpack_require__(150072);class RenderedLinesCollection{constructor(createLine){this._createLine=createLine,this._set(1,[])}flush(){this._set(1,[])}_set(rendLineNumberStart,lines){this._lines=lines,this._rendLineNumberStart=rendLineNumberStart}_get(){return{rendLineNumberStart:this._rendLineNumberStart,lines:this._lines}}
/**
     * @returns Inclusive line number that is inside this collection
     */getStartLineNumber(){return this._rendLineNumberStart}
/**
     * @returns Inclusive line number that is inside this collection
     */getEndLineNumber(){return this._rendLineNumberStart+this._lines.length-1}getCount(){return this._lines.length}getLine(lineNumber){const lineIndex=lineNumber-this._rendLineNumberStart;if(lineIndex<0||lineIndex>=this._lines.length)throw new Error("Illegal value for lineNumber");return this._lines[lineIndex]}
/**
     * @returns Lines that were removed from this collection
     */onLinesDeleted(deleteFromLineNumber,deleteToLineNumber){if(0===this.getCount())
// no lines
return null;const startLineNumber=this.getStartLineNumber(),endLineNumber=this.getEndLineNumber();if(deleteToLineNumber<startLineNumber){
// deleting above the viewport
const deleteCnt=deleteToLineNumber-deleteFromLineNumber+1;return this._rendLineNumberStart-=deleteCnt,null}if(deleteFromLineNumber>endLineNumber)
// deleted below the viewport
return null;
// Record what needs to be deleted
let deleteStartIndex=0,deleteCount=0;for(let lineNumber=startLineNumber;lineNumber<=endLineNumber;lineNumber++){const lineIndex=lineNumber-this._rendLineNumberStart;deleteFromLineNumber<=lineNumber&&lineNumber<=deleteToLineNumber&&(
// this is a line to be deleted
0===deleteCount?(
// this is the first line to be deleted
deleteStartIndex=lineIndex,deleteCount=1):deleteCount++)}
// Adjust this._rendLineNumberStart for lines deleted above
if(deleteFromLineNumber<startLineNumber){
// Something was deleted above
let deleteAboveCount=0;
// the entire deleted lines are above
deleteAboveCount=deleteToLineNumber<startLineNumber?deleteToLineNumber-deleteFromLineNumber+1:startLineNumber-deleteFromLineNumber,this._rendLineNumberStart-=deleteAboveCount}const deleted=this._lines.splice(deleteStartIndex,deleteCount);return deleted}onLinesChanged(changeFromLineNumber,changeToLineNumber){if(0===this.getCount())
// no lines
return!1;const startLineNumber=this.getStartLineNumber(),endLineNumber=this.getEndLineNumber();let someoneNotified=!1;for(let changedLineNumber=changeFromLineNumber;changedLineNumber<=changeToLineNumber;changedLineNumber++)changedLineNumber>=startLineNumber&&changedLineNumber<=endLineNumber&&(
// Notify the line
this._lines[changedLineNumber-this._rendLineNumberStart].onContentChanged(),someoneNotified=!0);return someoneNotified}onLinesInserted(insertFromLineNumber,insertToLineNumber){if(0===this.getCount())
// no lines
return null;const insertCnt=insertToLineNumber-insertFromLineNumber+1,startLineNumber=this.getStartLineNumber(),endLineNumber=this.getEndLineNumber();if(insertFromLineNumber<=startLineNumber)
// inserting above the viewport
return this._rendLineNumberStart+=insertCnt,null;if(insertFromLineNumber>endLineNumber)
// inserting below the viewport
return null;if(insertCnt+insertFromLineNumber>endLineNumber){
// insert inside the viewport in such a way that all remaining lines are pushed outside
const deleted=this._lines.splice(insertFromLineNumber-this._rendLineNumberStart,endLineNumber-insertFromLineNumber+1);return deleted}
// insert inside the viewport, push out some lines, but not all remaining lines
const newLines=[];for(let i=0;i<insertCnt;i++)newLines[i]=this._createLine();const insertIndex=insertFromLineNumber-this._rendLineNumberStart,beforeLines=this._lines.slice(0,insertIndex),afterLines=this._lines.slice(insertIndex,this._lines.length-insertCnt),deletedLines=this._lines.slice(this._lines.length-insertCnt,this._lines.length);return this._lines=beforeLines.concat(newLines).concat(afterLines),deletedLines}onTokensChanged(ranges){if(0===this.getCount())
// no lines
return!1;const startLineNumber=this.getStartLineNumber(),endLineNumber=this.getEndLineNumber();let notifiedSomeone=!1;for(let i=0,len=ranges.length;i<len;i++){const rng=ranges[i];if(rng.toLineNumber<startLineNumber||rng.fromLineNumber>endLineNumber)
// range outside viewport
continue;const from=Math.max(startLineNumber,rng.fromLineNumber),to=Math.min(endLineNumber,rng.toLineNumber);for(let lineNumber=from;lineNumber<=to;lineNumber++){const lineIndex=lineNumber-this._rendLineNumberStart;this._lines[lineIndex].onTokensChanged(),notifiedSomeone=!0}}return notifiedSomeone}}class VisibleLinesCollection{constructor(host){this._host=host,this.domNode=this._createDomNode(),this._linesCollection=new RenderedLinesCollection((()=>this._host.createVisibleLine()))}_createDomNode(){const domNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div"));return domNode.setClassName("view-layer"),domNode.setPosition("absolute"),domNode.domNode.setAttribute("role","presentation"),domNode.domNode.setAttribute("aria-hidden","true"),domNode}
// ---- begin view event handlers
onConfigurationChanged(e){return!!e.hasChanged(129/* layoutInfo */)}onFlushed(e){
// No need to clear the dom node because a full .innerHTML will occur in ViewLayerRenderer._render
return this._linesCollection.flush(),!0}onLinesChanged(e){return this._linesCollection.onLinesChanged(e.fromLineNumber,e.toLineNumber)}onLinesDeleted(e){const deleted=this._linesCollection.onLinesDeleted(e.fromLineNumber,e.toLineNumber);if(deleted)
// Remove from DOM
for(let i=0,len=deleted.length;i<len;i++){const lineDomNode=deleted[i].getDomNode();lineDomNode&&this.domNode.domNode.removeChild(lineDomNode)}return!0}onLinesInserted(e){const deleted=this._linesCollection.onLinesInserted(e.fromLineNumber,e.toLineNumber);if(deleted)
// Remove from DOM
for(let i=0,len=deleted.length;i<len;i++){const lineDomNode=deleted[i].getDomNode();lineDomNode&&this.domNode.domNode.removeChild(lineDomNode)}return!0}onScrollChanged(e){return e.scrollTopChanged}onTokensChanged(e){return this._linesCollection.onTokensChanged(e.ranges)}onZonesChanged(e){return!0}
// ---- end view event handlers
getStartLineNumber(){return this._linesCollection.getStartLineNumber()}getEndLineNumber(){return this._linesCollection.getEndLineNumber()}getVisibleLine(lineNumber){return this._linesCollection.getLine(lineNumber)}renderLines(viewportData){const inp=this._linesCollection._get(),renderer=new ViewLayerRenderer(this.domNode.domNode,this._host,viewportData),ctx={rendLineNumberStart:inp.rendLineNumberStart,lines:inp.lines,linesLength:inp.lines.length},resCtx=renderer.render(ctx,viewportData.startLineNumber,viewportData.endLineNumber,viewportData.relativeVerticalOffset);this._linesCollection._set(resCtx.rendLineNumberStart,resCtx.lines)}}class ViewLayerRenderer{constructor(domNode,host,viewportData){this.domNode=domNode,this.host=host,this.viewportData=viewportData}render(inContext,startLineNumber,stopLineNumber,deltaTop){const ctx={rendLineNumberStart:inContext.rendLineNumberStart,lines:inContext.lines.slice(0),linesLength:inContext.linesLength};if(ctx.rendLineNumberStart+ctx.linesLength-1<startLineNumber||stopLineNumber<ctx.rendLineNumberStart){
// There is no overlap whatsoever
ctx.rendLineNumberStart=startLineNumber,ctx.linesLength=stopLineNumber-startLineNumber+1,ctx.lines=[];for(let x=startLineNumber;x<=stopLineNumber;x++)ctx.lines[x-startLineNumber]=this.host.createVisibleLine();return this._finishRendering(ctx,!0,deltaTop),ctx}
// Update lines which will remain untouched
if(this._renderUntouchedLines(ctx,Math.max(startLineNumber-ctx.rendLineNumberStart,0),Math.min(stopLineNumber-ctx.rendLineNumberStart,ctx.linesLength-1),deltaTop,startLineNumber),ctx.rendLineNumberStart>startLineNumber){
// Insert lines before
const fromLineNumber=startLineNumber,toLineNumber=Math.min(stopLineNumber,ctx.rendLineNumberStart-1);fromLineNumber<=toLineNumber&&(this._insertLinesBefore(ctx,fromLineNumber,toLineNumber,deltaTop,startLineNumber),ctx.linesLength+=toLineNumber-fromLineNumber+1)}else if(ctx.rendLineNumberStart<startLineNumber){
// Remove lines before
const removeCnt=Math.min(ctx.linesLength,startLineNumber-ctx.rendLineNumberStart);removeCnt>0&&(this._removeLinesBefore(ctx,removeCnt),ctx.linesLength-=removeCnt)}if(ctx.rendLineNumberStart=startLineNumber,ctx.rendLineNumberStart+ctx.linesLength-1<stopLineNumber){
// Insert lines after
const fromLineNumber=ctx.rendLineNumberStart+ctx.linesLength,toLineNumber=stopLineNumber;fromLineNumber<=toLineNumber&&(this._insertLinesAfter(ctx,fromLineNumber,toLineNumber,deltaTop,startLineNumber),ctx.linesLength+=toLineNumber-fromLineNumber+1)}else if(ctx.rendLineNumberStart+ctx.linesLength-1>stopLineNumber){
// Remove lines after
const fromLineNumber=Math.max(0,stopLineNumber-ctx.rendLineNumberStart+1),toLineNumber=ctx.linesLength-1,removeCnt=toLineNumber-fromLineNumber+1;removeCnt>0&&(this._removeLinesAfter(ctx,removeCnt),ctx.linesLength-=removeCnt)}return this._finishRendering(ctx,!1,deltaTop),ctx}_renderUntouchedLines(ctx,startIndex,endIndex,deltaTop,deltaLN){const rendLineNumberStart=ctx.rendLineNumberStart,lines=ctx.lines;for(let i=startIndex;i<=endIndex;i++){const lineNumber=rendLineNumberStart+i;lines[i].layoutLine(lineNumber,deltaTop[lineNumber-deltaLN])}}_insertLinesBefore(ctx,fromLineNumber,toLineNumber,deltaTop,deltaLN){const newLines=[];let newLinesLen=0;for(let lineNumber=fromLineNumber;lineNumber<=toLineNumber;lineNumber++)newLines[newLinesLen++]=this.host.createVisibleLine();ctx.lines=newLines.concat(ctx.lines)}_removeLinesBefore(ctx,removeCount){for(let i=0;i<removeCount;i++){const lineDomNode=ctx.lines[i].getDomNode();lineDomNode&&this.domNode.removeChild(lineDomNode)}ctx.lines.splice(0,removeCount)}_insertLinesAfter(ctx,fromLineNumber,toLineNumber,deltaTop,deltaLN){const newLines=[];let newLinesLen=0;for(let lineNumber=fromLineNumber;lineNumber<=toLineNumber;lineNumber++)newLines[newLinesLen++]=this.host.createVisibleLine();ctx.lines=ctx.lines.concat(newLines)}_removeLinesAfter(ctx,removeCount){const removeIndex=ctx.linesLength-removeCount;for(let i=0;i<removeCount;i++){const lineDomNode=ctx.lines[removeIndex+i].getDomNode();lineDomNode&&this.domNode.removeChild(lineDomNode)}ctx.lines.splice(removeIndex,removeCount)}_finishRenderingNewLines(ctx,domNodeIsEmpty,newLinesHTML,wasNew){ViewLayerRenderer._ttPolicy&&(newLinesHTML=ViewLayerRenderer._ttPolicy.createHTML(newLinesHTML));const lastChild=this.domNode.lastChild;domNodeIsEmpty||!lastChild?this.domNode.innerHTML=newLinesHTML:lastChild.insertAdjacentHTML("afterend",newLinesHTML);let currChild=this.domNode.lastChild;for(let i=ctx.linesLength-1;i>=0;i--){const line=ctx.lines[i];wasNew[i]&&(line.setDomNode(currChild),currChild=currChild.previousSibling)}}_finishRenderingInvalidLines(ctx,invalidLinesHTML,wasInvalid){const hugeDomNode=document.createElement("div");ViewLayerRenderer._ttPolicy&&(invalidLinesHTML=ViewLayerRenderer._ttPolicy.createHTML(invalidLinesHTML)),hugeDomNode.innerHTML=invalidLinesHTML;for(let i=0;i<ctx.linesLength;i++){const line=ctx.lines[i];if(wasInvalid[i]){const source=hugeDomNode.firstChild,lineDomNode=line.getDomNode();lineDomNode.parentNode.replaceChild(source,lineDomNode),line.setDomNode(source)}}}_finishRendering(ctx,domNodeIsEmpty,deltaTop){const sb=ViewLayerRenderer._sb,linesLength=ctx.linesLength,lines=ctx.lines,rendLineNumberStart=ctx.rendLineNumberStart,wasNew=[];{sb.reset();let hadNewLine=!1;for(let i=0;i<linesLength;i++){const line=lines[i];wasNew[i]=!1;const lineDomNode=line.getDomNode();if(lineDomNode)
// line is not new
continue;const renderResult=line.renderLine(i+rendLineNumberStart,deltaTop[i],this.viewportData,sb);renderResult&&(wasNew[i]=!0,hadNewLine=!0)}hadNewLine&&this._finishRenderingNewLines(ctx,domNodeIsEmpty,sb.build(),wasNew)}{sb.reset();let hadInvalidLine=!1;const wasInvalid=[];for(let i=0;i<linesLength;i++){const line=lines[i];if(wasInvalid[i]=!1,wasNew[i])
// line was new
continue;const renderResult=line.renderLine(i+rendLineNumberStart,deltaTop[i],this.viewportData,sb);renderResult&&(wasInvalid[i]=!0,hadInvalidLine=!0)}hadInvalidLine&&this._finishRenderingInvalidLines(ctx,sb.build(),wasInvalid)}}}ViewLayerRenderer._ttPolicy=null===(_a=window.trustedTypes)||void 0===_a?void 0:_a.createPolicy("editorViewLayer",{createHTML:value=>value}),ViewLayerRenderer._sb=(0,stringBuilder/* createStringBuilder */.l$)(1e5);// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/view/viewOverlays.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class ViewOverlays extends ViewPart{constructor(context){super(context),this._visibleLines=new VisibleLinesCollection(this),this.domNode=this._visibleLines.domNode,this._dynamicOverlays=[],this._isFocused=!1,this.domNode.setClassName("view-overlays")}shouldRender(){if(super.shouldRender())return!0;for(let i=0,len=this._dynamicOverlays.length;i<len;i++){const dynamicOverlay=this._dynamicOverlays[i];if(dynamicOverlay.shouldRender())return!0}return!1}dispose(){super.dispose();for(let i=0,len=this._dynamicOverlays.length;i<len;i++){const dynamicOverlay=this._dynamicOverlays[i];dynamicOverlay.dispose()}this._dynamicOverlays=[]}getDomNode(){return this.domNode}
// ---- begin IVisibleLinesHost
createVisibleLine(){return new ViewOverlayLine(this._context.configuration,this._dynamicOverlays)}
// ---- end IVisibleLinesHost
addDynamicOverlay(overlay){this._dynamicOverlays.push(overlay)}
// ----- event handlers
onConfigurationChanged(e){this._visibleLines.onConfigurationChanged(e);const startLineNumber=this._visibleLines.getStartLineNumber(),endLineNumber=this._visibleLines.getEndLineNumber();for(let lineNumber=startLineNumber;lineNumber<=endLineNumber;lineNumber++){const line=this._visibleLines.getVisibleLine(lineNumber);line.onConfigurationChanged(e)}return!0}onFlushed(e){return this._visibleLines.onFlushed(e)}onFocusChanged(e){return this._isFocused=e.isFocused,!0}onLinesChanged(e){return this._visibleLines.onLinesChanged(e)}onLinesDeleted(e){return this._visibleLines.onLinesDeleted(e)}onLinesInserted(e){return this._visibleLines.onLinesInserted(e)}onScrollChanged(e){return this._visibleLines.onScrollChanged(e)||!0}onTokensChanged(e){return this._visibleLines.onTokensChanged(e)}onZonesChanged(e){return this._visibleLines.onZonesChanged(e)}
// ----- end event handlers
prepareRender(ctx){const toRender=this._dynamicOverlays.filter((overlay=>overlay.shouldRender()));for(let i=0,len=toRender.length;i<len;i++){const dynamicOverlay=toRender[i];dynamicOverlay.prepareRender(ctx),dynamicOverlay.onDidRender()}}render(ctx){
// Overwriting to bypass `shouldRender` flag
this._viewOverlaysRender(ctx),this.domNode.toggleClassName("focused",this._isFocused)}_viewOverlaysRender(ctx){this._visibleLines.renderLines(ctx.viewportData)}}class ViewOverlayLine{constructor(configuration,dynamicOverlays){this._configuration=configuration,this._lineHeight=this._configuration.options.get(58/* lineHeight */),this._dynamicOverlays=dynamicOverlays,this._domNode=null,this._renderedContent=null}getDomNode(){return this._domNode?this._domNode.domNode:null}setDomNode(domNode){this._domNode=(0,fastDomNode/* createFastDomNode */.X)(domNode)}onContentChanged(){
// Nothing
}onTokensChanged(){
// Nothing
}onConfigurationChanged(e){this._lineHeight=this._configuration.options.get(58/* lineHeight */)}renderLine(lineNumber,deltaTop,viewportData,sb){let result="";for(let i=0,len=this._dynamicOverlays.length;i<len;i++){const dynamicOverlay=this._dynamicOverlays[i];result+=dynamicOverlay.render(viewportData.startLineNumber,lineNumber)}return this._renderedContent!==result&&(this._renderedContent=result,sb.appendASCIIString('<div style="position:absolute;top:'),sb.appendASCIIString(String(deltaTop)),sb.appendASCIIString("px;width:100%;height:"),sb.appendASCIIString(String(this._lineHeight)),sb.appendASCIIString('px;">'),sb.appendASCIIString(result),sb.appendASCIIString("</div>"),!0)}layoutLine(lineNumber,deltaTop){this._domNode&&(this._domNode.setTop(deltaTop),this._domNode.setHeight(this._lineHeight))}}class ContentViewOverlays extends ViewOverlays{constructor(context){super(context);const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);this._contentWidth=layoutInfo.contentWidth,this.domNode.setHeight(0)}
// --- begin event handlers
onConfigurationChanged(e){const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);return this._contentWidth=layoutInfo.contentWidth,super.onConfigurationChanged(e)||!0}onScrollChanged(e){return super.onScrollChanged(e)||e.scrollWidthChanged}
// --- end event handlers
_viewOverlaysRender(ctx){super._viewOverlaysRender(ctx),this.domNode.setWidth(Math.max(ctx.scrollWidth,this._contentWidth))}}class MarginViewOverlays extends ViewOverlays{constructor(context){super(context);const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);this._contentLeft=layoutInfo.contentLeft,this.domNode.setClassName("margin-view-overlays"),this.domNode.setWidth(1),configuration/* Configuration */.V.applyFontInfo(this.domNode,options.get(43/* fontInfo */))}onConfigurationChanged(e){const options=this._context.configuration.options;configuration/* Configuration */.V.applyFontInfo(this.domNode,options.get(43/* fontInfo */));const layoutInfo=options.get(129/* layoutInfo */);return this._contentLeft=layoutInfo.contentLeft,super.onConfigurationChanged(e)||!0}onScrollChanged(e){return super.onScrollChanged(e)||e.scrollHeightChanged}_viewOverlaysRender(ctx){super._viewOverlaysRender(ctx);const height=Math.min(ctx.scrollHeight,1e6);this.domNode.setHeight(height),this.domNode.setWidth(this._contentLeft)}}// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/contentWidgets/contentWidgets.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class Coordinate{constructor(top,left){this._coordinateBrand=void 0,this.top=top,this.left=left}}class ViewContentWidgets extends ViewPart{constructor(context,viewDomNode){super(context),this._viewDomNode=viewDomNode,this._widgets={},this.domNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),PartFingerprints.write(this.domNode,1/* ContentWidgets */),this.domNode.setClassName("contentWidgets"),this.domNode.setPosition("absolute"),this.domNode.setTop(0),this.overflowingContentWidgetsDomNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),PartFingerprints.write(this.overflowingContentWidgetsDomNode,2/* OverflowingContentWidgets */),this.overflowingContentWidgetsDomNode.setClassName("overflowingContentWidgets")}dispose(){super.dispose(),this._widgets={}}
// --- begin event handlers
onConfigurationChanged(e){const keys=Object.keys(this._widgets);for(const widgetId of keys)this._widgets[widgetId].onConfigurationChanged(e);return!0}onDecorationsChanged(e){
// true for inline decorations that can end up relayouting text
return!0}onFlushed(e){return!0}onLineMappingChanged(e){const keys=Object.keys(this._widgets);for(const widgetId of keys)this._widgets[widgetId].onLineMappingChanged(e);return!0}onLinesChanged(e){return!0}onLinesDeleted(e){return!0}onLinesInserted(e){return!0}onScrollChanged(e){return!0}onZonesChanged(e){return!0}
// ---- end view event handlers
addWidget(_widget){const myWidget=new Widget(this._context,this._viewDomNode,_widget);this._widgets[myWidget.id]=myWidget,myWidget.allowEditorOverflow?this.overflowingContentWidgetsDomNode.appendChild(myWidget.domNode):this.domNode.appendChild(myWidget.domNode),this.setShouldRender()}setWidgetPosition(widget,range,preference){const myWidget=this._widgets[widget.getId()];myWidget.setPosition(range,preference),this.setShouldRender()}removeWidget(widget){const widgetId=widget.getId();if(this._widgets.hasOwnProperty(widgetId)){const myWidget=this._widgets[widgetId];delete this._widgets[widgetId];const domNode=myWidget.domNode.domNode;domNode.parentNode.removeChild(domNode),domNode.removeAttribute("monaco-visible-content-widget"),this.setShouldRender()}}shouldSuppressMouseDownOnWidget(widgetId){return!!this._widgets.hasOwnProperty(widgetId)&&this._widgets[widgetId].suppressMouseDown}onBeforeRender(viewportData){const keys=Object.keys(this._widgets);for(const widgetId of keys)this._widgets[widgetId].onBeforeRender(viewportData)}prepareRender(ctx){const keys=Object.keys(this._widgets);for(const widgetId of keys)this._widgets[widgetId].prepareRender(ctx)}render(ctx){const keys=Object.keys(this._widgets);for(const widgetId of keys)this._widgets[widgetId].render(ctx)}}class Widget{constructor(context,viewDomNode,actual){this._context=context,this._viewDomNode=viewDomNode,this._actual=actual,this.domNode=(0,fastDomNode/* createFastDomNode */.X)(this._actual.getDomNode()),this.id=this._actual.getId(),this.allowEditorOverflow=this._actual.allowEditorOverflow||!1,this.suppressMouseDown=this._actual.suppressMouseDown||!1;const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);this._fixedOverflowWidgets=options.get(36/* fixedOverflowWidgets */),this._contentWidth=layoutInfo.contentWidth,this._contentLeft=layoutInfo.contentLeft,this._lineHeight=options.get(58/* lineHeight */),this._range=null,this._viewRange=null,this._preference=[],this._cachedDomNodeClientWidth=-1,this._cachedDomNodeClientHeight=-1,this._maxWidth=this._getMaxWidth(),this._isVisible=!1,this._renderData=null,this.domNode.setPosition(this._fixedOverflowWidgets&&this.allowEditorOverflow?"fixed":"absolute"),this.domNode.setVisibility("hidden"),this.domNode.setAttribute("widgetId",this.id),this.domNode.setMaxWidth(this._maxWidth)}onConfigurationChanged(e){const options=this._context.configuration.options;if(this._lineHeight=options.get(58/* lineHeight */),e.hasChanged(129/* layoutInfo */)){const layoutInfo=options.get(129/* layoutInfo */);this._contentLeft=layoutInfo.contentLeft,this._contentWidth=layoutInfo.contentWidth,this._maxWidth=this._getMaxWidth()}}onLineMappingChanged(e){this._setPosition(this._range)}_setPosition(range){if(this._range=range,this._viewRange=null,this._range){
// Do not trust that widgets give a valid position
const validModelRange=this._context.model.validateModelRange(this._range);(this._context.model.coordinatesConverter.modelPositionIsVisible(validModelRange.getStartPosition())||this._context.model.coordinatesConverter.modelPositionIsVisible(validModelRange.getEndPosition()))&&(this._viewRange=this._context.model.coordinatesConverter.convertModelRangeToViewRange(validModelRange))}}_getMaxWidth(){return this.allowEditorOverflow?window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth:this._contentWidth}setPosition(range,preference){this._setPosition(range),this._preference=preference,this._cachedDomNodeClientWidth=-1,this._cachedDomNodeClientHeight=-1}_layoutBoxInViewport(topLeft,bottomLeft,width,height,ctx){
// Our visible box is split horizontally by the current line => 2 boxes
// a) the box above the line
const aboveLineTop=topLeft.top,heightAboveLine=aboveLineTop,underLineTop=bottomLeft.top+this._lineHeight,heightUnderLine=ctx.viewportHeight-underLineTop,aboveTop=aboveLineTop-height,fitsAbove=heightAboveLine>=height,belowTop=underLineTop,fitsBelow=heightUnderLine>=height;
// And its left
let actualAboveLeft=topLeft.left,actualBelowLeft=bottomLeft.left;return actualAboveLeft+width>ctx.scrollLeft+ctx.viewportWidth&&(actualAboveLeft=ctx.scrollLeft+ctx.viewportWidth-width),actualBelowLeft+width>ctx.scrollLeft+ctx.viewportWidth&&(actualBelowLeft=ctx.scrollLeft+ctx.viewportWidth-width),actualAboveLeft<ctx.scrollLeft&&(actualAboveLeft=ctx.scrollLeft),actualBelowLeft<ctx.scrollLeft&&(actualBelowLeft=ctx.scrollLeft),{fitsAbove:fitsAbove,aboveTop:aboveTop,aboveLeft:actualAboveLeft,fitsBelow:fitsBelow,belowTop:belowTop,belowLeft:actualBelowLeft}}_layoutHorizontalSegmentInPage(windowSize,domNodePosition,left,width){
// Initially, the limits are defined as the dom node limits
const MIN_LIMIT=Math.max(0,domNodePosition.left-width),MAX_LIMIT=Math.min(domNodePosition.left+domNodePosition.width+width,windowSize.width);let absoluteLeft=domNodePosition.left+left-dom/* StandardWindow */.DI.scrollX;if(absoluteLeft+width>MAX_LIMIT){const delta=absoluteLeft-(MAX_LIMIT-width);absoluteLeft-=delta,left-=delta}if(absoluteLeft<MIN_LIMIT){const delta=absoluteLeft-MIN_LIMIT;absoluteLeft-=delta,left-=delta}return[left,absoluteLeft]}_layoutBoxInPage(topLeft,bottomLeft,width,height,ctx){const aboveTop=topLeft.top-height,belowTop=bottomLeft.top+this._lineHeight,domNodePosition=dom/* getDomNodePagePosition */.i(this._viewDomNode.domNode),absoluteAboveTop=domNodePosition.top+aboveTop-dom/* StandardWindow */.DI.scrollY,absoluteBelowTop=domNodePosition.top+belowTop-dom/* StandardWindow */.DI.scrollY,windowSize=dom/* getClientArea */.D6(document.body),[aboveLeft,absoluteAboveLeft]=this._layoutHorizontalSegmentInPage(windowSize,domNodePosition,topLeft.left-ctx.scrollLeft+this._contentLeft,width),[belowLeft,absoluteBelowLeft]=this._layoutHorizontalSegmentInPage(windowSize,domNodePosition,bottomLeft.left-ctx.scrollLeft+this._contentLeft,width),TOP_PADDING=22,BOTTOM_PADDING=22,fitsAbove=absoluteAboveTop>=TOP_PADDING,fitsBelow=absoluteBelowTop+height<=windowSize.height-BOTTOM_PADDING;return this._fixedOverflowWidgets?{fitsAbove:fitsAbove,aboveTop:Math.max(absoluteAboveTop,TOP_PADDING),aboveLeft:absoluteAboveLeft,fitsBelow:fitsBelow,belowTop:absoluteBelowTop,belowLeft:absoluteBelowLeft}:{fitsAbove:fitsAbove,aboveTop:aboveTop,aboveLeft:aboveLeft,fitsBelow:fitsBelow,belowTop:belowTop,belowLeft:belowLeft}}_prepareRenderWidgetAtExactPositionOverflowing(topLeft){return new Coordinate(topLeft.top,topLeft.left+this._contentLeft)}
/**
     * Compute `this._topLeft`
     */_getTopAndBottomLeft(ctx){if(!this._viewRange)return[null,null];const visibleRangesForRange=ctx.linesVisibleRangesForRange(this._viewRange,!1);if(!visibleRangesForRange||0===visibleRangesForRange.length)return[null,null];let firstLine=visibleRangesForRange[0],lastLine=visibleRangesForRange[0];for(const visibleRangesForLine of visibleRangesForRange)visibleRangesForLine.lineNumber<firstLine.lineNumber&&(firstLine=visibleRangesForLine),visibleRangesForLine.lineNumber>lastLine.lineNumber&&(lastLine=visibleRangesForLine);let firstLineMinLeft=1073741824/* MAX_SAFE_SMALL_INTEGER */;//firstLine.Constants.MAX_SAFE_SMALL_INTEGER;
for(const visibleRange of firstLine.ranges)visibleRange.left<firstLineMinLeft&&(firstLineMinLeft=visibleRange.left);let lastLineMinLeft=1073741824/* MAX_SAFE_SMALL_INTEGER */;//lastLine.Constants.MAX_SAFE_SMALL_INTEGER;
for(const visibleRange of lastLine.ranges)visibleRange.left<lastLineMinLeft&&(lastLineMinLeft=visibleRange.left);const topForPosition=ctx.getVerticalOffsetForLineNumber(firstLine.lineNumber)-ctx.scrollTop,topLeft=new Coordinate(topForPosition,firstLineMinLeft),topForBottomLine=ctx.getVerticalOffsetForLineNumber(lastLine.lineNumber)-ctx.scrollTop,bottomLeft=new Coordinate(topForBottomLine,lastLineMinLeft);return[topLeft,bottomLeft]}_prepareRenderWidget(ctx){const[topLeft,bottomLeft]=this._getTopAndBottomLeft(ctx);if(!topLeft||!bottomLeft)return null;if(-1===this._cachedDomNodeClientWidth||-1===this._cachedDomNodeClientHeight){let preferredDimensions=null;if("function"===typeof this._actual.beforeRender&&(preferredDimensions=safeInvoke(this._actual.beforeRender,this._actual)),preferredDimensions)this._cachedDomNodeClientWidth=preferredDimensions.width,this._cachedDomNodeClientHeight=preferredDimensions.height;else{const domNode=this.domNode.domNode;this._cachedDomNodeClientWidth=domNode.clientWidth,this._cachedDomNodeClientHeight=domNode.clientHeight}}let placement;
// Do two passes, first for perfect fit, second picks first option
if(placement=this.allowEditorOverflow?this._layoutBoxInPage(topLeft,bottomLeft,this._cachedDomNodeClientWidth,this._cachedDomNodeClientHeight,ctx):this._layoutBoxInViewport(topLeft,bottomLeft,this._cachedDomNodeClientWidth,this._cachedDomNodeClientHeight,ctx),this._preference)for(let pass=1;pass<=2;pass++)for(const pref of this._preference)
// placement
if(1/* ABOVE */===pref){if(!placement)
// Widget outside of viewport
return null;if(2===pass||placement.fitsAbove)return{coordinate:new Coordinate(placement.aboveTop,placement.aboveLeft),position:1/* ABOVE */}}else{if(2/* BELOW */!==pref)return this.allowEditorOverflow?{coordinate:this._prepareRenderWidgetAtExactPositionOverflowing(topLeft),position:0/* EXACT */}:{coordinate:topLeft,position:0/* EXACT */};if(!placement)
// Widget outside of viewport
return null;if(2===pass||placement.fitsBelow)return{coordinate:new Coordinate(placement.belowTop,placement.belowLeft),position:2/* BELOW */}}return null}
/**
     * On this first pass, we ensure that the content widget (if it is in the viewport) has the max width set correctly.
     */onBeforeRender(viewportData){this._viewRange&&this._preference&&(this._viewRange.endLineNumber<viewportData.startLineNumber||this._viewRange.startLineNumber>viewportData.endLineNumber||this.domNode.setMaxWidth(this._maxWidth))}prepareRender(ctx){this._renderData=this._prepareRenderWidget(ctx)}render(ctx){if(!this._renderData)
// This widget should be invisible
return this._isVisible&&(this.domNode.removeAttribute("monaco-visible-content-widget"),this._isVisible=!1,this.domNode.setVisibility("hidden")),void("function"===typeof this._actual.afterRender&&safeInvoke(this._actual.afterRender,this._actual,null));
// This widget should be visible
this.allowEditorOverflow?(this.domNode.setTop(this._renderData.coordinate.top),this.domNode.setLeft(this._renderData.coordinate.left)):(this.domNode.setTop(this._renderData.coordinate.top+ctx.scrollTop-ctx.bigNumbersDelta),this.domNode.setLeft(this._renderData.coordinate.left)),this._isVisible||(this.domNode.setVisibility("inherit"),this.domNode.setAttribute("monaco-visible-content-widget","true"),this._isVisible=!0),"function"===typeof this._actual.afterRender&&safeInvoke(this._actual.afterRender,this._actual,this._renderData.position)}}function safeInvoke(fn,thisArg,...args){try{return fn.call(thisArg,...args)}catch(_a){
// ignore
return null}}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/base/common/arrays.js
var arrays=__webpack_require__(609488);// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
let isRenderedUsingBorder=!0;class AbstractLineHighlightOverlay extends DynamicViewOverlay{constructor(context){super(),this._context=context;const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);this._lineHeight=options.get(58/* lineHeight */),this._renderLineHighlight=options.get(84/* renderLineHighlight */),this._renderLineHighlightOnlyWhenFocus=options.get(85/* renderLineHighlightOnlyWhenFocus */),this._contentLeft=layoutInfo.contentLeft,this._contentWidth=layoutInfo.contentWidth,this._selectionIsEmpty=!0,this._focused=!1,this._cursorLineNumbers=[1],this._selections=[new core_selection/* Selection */.Y(1,1,1,1)],this._renderData=null,this._context.addEventHandler(this)}dispose(){this._context.removeEventHandler(this),super.dispose()}_readFromSelections(){let hasChanged=!1;
// Only render the first selection when using border
const renderSelections=isRenderedUsingBorder?this._selections.slice(0,1):this._selections,cursorsLineNumbers=renderSelections.map((s=>s.positionLineNumber));cursorsLineNumbers.sort(((a,b)=>a-b)),arrays/* equals */.fS(this._cursorLineNumbers,cursorsLineNumbers)||(this._cursorLineNumbers=cursorsLineNumbers,hasChanged=!0);const selectionIsEmpty=renderSelections.every((s=>s.isEmpty()));return this._selectionIsEmpty!==selectionIsEmpty&&(this._selectionIsEmpty=selectionIsEmpty,hasChanged=!0),hasChanged}
// --- begin event handlers
onThemeChanged(e){return this._readFromSelections()}onConfigurationChanged(e){const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);return this._lineHeight=options.get(58/* lineHeight */),this._renderLineHighlight=options.get(84/* renderLineHighlight */),this._renderLineHighlightOnlyWhenFocus=options.get(85/* renderLineHighlightOnlyWhenFocus */),this._contentLeft=layoutInfo.contentLeft,this._contentWidth=layoutInfo.contentWidth,!0}onCursorStateChanged(e){return this._selections=e.selections,this._readFromSelections()}onFlushed(e){return!0}onLinesDeleted(e){return!0}onLinesInserted(e){return!0}onScrollChanged(e){return e.scrollWidthChanged||e.scrollTopChanged}onZonesChanged(e){return!0}onFocusChanged(e){return!!this._renderLineHighlightOnlyWhenFocus&&(this._focused=e.isFocused,!0)}
// --- end event handlers
prepareRender(ctx){if(!this._shouldRenderThis())return void(this._renderData=null);const renderedLine=this._renderOne(ctx),visibleStartLineNumber=ctx.visibleRange.startLineNumber,visibleEndLineNumber=ctx.visibleRange.endLineNumber,len=this._cursorLineNumbers.length;let index=0;const renderData=[];for(let lineNumber=visibleStartLineNumber;lineNumber<=visibleEndLineNumber;lineNumber++){const lineIndex=lineNumber-visibleStartLineNumber;while(index<len&&this._cursorLineNumbers[index]<lineNumber)index++;index<len&&this._cursorLineNumbers[index]===lineNumber?renderData[lineIndex]=renderedLine:renderData[lineIndex]=""}this._renderData=renderData}render(startLineNumber,lineNumber){if(!this._renderData)return"";const lineIndex=lineNumber-startLineNumber;return lineIndex>=this._renderData.length?"":this._renderData[lineIndex]}}class CurrentLineHighlightOverlay extends AbstractLineHighlightOverlay{_renderOne(ctx){const className="current-line"+(this._shouldRenderOther()?" current-line-both":"");return`<div class="${className}" style="width:${Math.max(ctx.scrollWidth,this._contentWidth)}px; height:${this._lineHeight}px;"></div>`}_shouldRenderThis(){return("line"===this._renderLineHighlight||"all"===this._renderLineHighlight)&&this._selectionIsEmpty&&(!this._renderLineHighlightOnlyWhenFocus||this._focused)}_shouldRenderOther(){return("gutter"===this._renderLineHighlight||"all"===this._renderLineHighlight)&&(!this._renderLineHighlightOnlyWhenFocus||this._focused)}}class CurrentLineMarginHighlightOverlay extends AbstractLineHighlightOverlay{_renderOne(ctx){const className="current-line"+(this._shouldRenderMargin()?" current-line-margin":"")+(this._shouldRenderOther()?" current-line-margin-both":"");return`<div class="${className}" style="width:${this._contentLeft}px; height:${this._lineHeight}px;"></div>`}_shouldRenderMargin(){return("gutter"===this._renderLineHighlight||"all"===this._renderLineHighlight)&&(!this._renderLineHighlightOnlyWhenFocus||this._focused)}_shouldRenderThis(){return!0}_shouldRenderOther(){return("line"===this._renderLineHighlight||"all"===this._renderLineHighlight)&&this._selectionIsEmpty&&(!this._renderLineHighlightOnlyWhenFocus||this._focused)}}(0,themeService/* registerThemingParticipant */.Ic)(((theme,collector)=>{isRenderedUsingBorder=!1;const lineHighlight=theme.getColor(editorColorRegistry/* editorLineHighlight */.Kh);if(lineHighlight&&(collector.addRule(`.monaco-editor .view-overlays .current-line { background-color: ${lineHighlight}; }`),collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { background-color: ${lineHighlight}; border: none; }`)),!lineHighlight||lineHighlight.isTransparent()||theme.defines(editorColorRegistry/* editorLineHighlightBorder */.Mm)){const lineHighlightBorder=theme.getColor(editorColorRegistry/* editorLineHighlightBorder */.Mm);lineHighlightBorder&&(isRenderedUsingBorder=!0,collector.addRule(`.monaco-editor .view-overlays .current-line { border: 2px solid ${lineHighlightBorder}; }`),collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { border: 2px solid ${lineHighlightBorder}; }`),"hc"===theme.type&&(collector.addRule(".monaco-editor .view-overlays .current-line { border-width: 1px; }"),collector.addRule(".monaco-editor .margin-view-overlays .current-line-margin { border-width: 1px; }")))}}));// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/decorations/decorations.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class DecorationsOverlay extends DynamicViewOverlay{constructor(context){super(),this._context=context;const options=this._context.configuration.options;this._lineHeight=options.get(58/* lineHeight */),this._typicalHalfwidthCharacterWidth=options.get(43/* fontInfo */).typicalHalfwidthCharacterWidth,this._renderResult=null,this._context.addEventHandler(this)}dispose(){this._context.removeEventHandler(this),this._renderResult=null,super.dispose()}
// --- begin event handlers
onConfigurationChanged(e){const options=this._context.configuration.options;return this._lineHeight=options.get(58/* lineHeight */),this._typicalHalfwidthCharacterWidth=options.get(43/* fontInfo */).typicalHalfwidthCharacterWidth,!0}onDecorationsChanged(e){return!0}onFlushed(e){return!0}onLinesChanged(e){return!0}onLinesDeleted(e){return!0}onLinesInserted(e){return!0}onScrollChanged(e){return e.scrollTopChanged||e.scrollWidthChanged}onZonesChanged(e){return!0}
// --- end event handlers
prepareRender(ctx){const _decorations=ctx.getDecorationsInViewport();
// Keep only decorations with `className`
let decorations=[],decorationsLen=0;for(let i=0,len=_decorations.length;i<len;i++){const d=_decorations[i];d.options.className&&(decorations[decorationsLen++]=d)}
// Sort decorations for consistent render output
decorations=decorations.sort(((a,b)=>{if(a.options.zIndex<b.options.zIndex)return-1;if(a.options.zIndex>b.options.zIndex)return 1;const aClassName=a.options.className,bClassName=b.options.className;return aClassName<bClassName?-1:aClassName>bClassName?1:core_range/* Range */.e.compareRangesUsingStarts(a.range,b.range)}));const visibleStartLineNumber=ctx.visibleRange.startLineNumber,visibleEndLineNumber=ctx.visibleRange.endLineNumber,output=[];for(let lineNumber=visibleStartLineNumber;lineNumber<=visibleEndLineNumber;lineNumber++){const lineIndex=lineNumber-visibleStartLineNumber;output[lineIndex]=""}
// Render first whole line decorations and then regular decorations
this._renderWholeLineDecorations(ctx,decorations,output),this._renderNormalDecorations(ctx,decorations,output),this._renderResult=output}_renderWholeLineDecorations(ctx,decorations,output){const lineHeight=String(this._lineHeight),visibleStartLineNumber=ctx.visibleRange.startLineNumber,visibleEndLineNumber=ctx.visibleRange.endLineNumber;for(let i=0,lenI=decorations.length;i<lenI;i++){const d=decorations[i];if(!d.options.isWholeLine)continue;const decorationOutput='<div class="cdr '+d.options.className+'" style="left:0;width:100%;height:'+lineHeight+'px;"></div>',startLineNumber=Math.max(d.range.startLineNumber,visibleStartLineNumber),endLineNumber=Math.min(d.range.endLineNumber,visibleEndLineNumber);for(let j=startLineNumber;j<=endLineNumber;j++){const lineIndex=j-visibleStartLineNumber;output[lineIndex]+=decorationOutput}}}_renderNormalDecorations(ctx,decorations,output){const lineHeight=String(this._lineHeight),visibleStartLineNumber=ctx.visibleRange.startLineNumber;let prevClassName=null,prevShowIfCollapsed=!1,prevRange=null;for(let i=0,lenI=decorations.length;i<lenI;i++){const d=decorations[i];if(d.options.isWholeLine)continue;const className=d.options.className,showIfCollapsed=Boolean(d.options.showIfCollapsed);let range=d.range;showIfCollapsed&&1===range.endColumn&&range.endLineNumber!==range.startLineNumber&&(range=new core_range/* Range */.e(range.startLineNumber,range.startColumn,range.endLineNumber-1,this._context.model.getLineMaxColumn(range.endLineNumber-1))),prevClassName===className&&prevShowIfCollapsed===showIfCollapsed&&core_range/* Range */.e.areIntersectingOrTouching(prevRange,range)?
// merge into previous decoration
prevRange=core_range/* Range */.e.plusRange(prevRange,range):(
// flush previous decoration
null!==prevClassName&&this._renderNormalDecoration(ctx,prevRange,prevClassName,prevShowIfCollapsed,lineHeight,visibleStartLineNumber,output),prevClassName=className,prevShowIfCollapsed=showIfCollapsed,prevRange=range)}null!==prevClassName&&this._renderNormalDecoration(ctx,prevRange,prevClassName,prevShowIfCollapsed,lineHeight,visibleStartLineNumber,output)}_renderNormalDecoration(ctx,range,className,showIfCollapsed,lineHeight,visibleStartLineNumber,output){const linesVisibleRanges=ctx.linesVisibleRangesForRange(range,/*TODO@Alex*/"findMatch"===className);if(linesVisibleRanges)for(let j=0,lenJ=linesVisibleRanges.length;j<lenJ;j++){const lineVisibleRanges=linesVisibleRanges[j];if(lineVisibleRanges.outsideRenderedLine)continue;const lineIndex=lineVisibleRanges.lineNumber-visibleStartLineNumber;if(showIfCollapsed&&1===lineVisibleRanges.ranges.length){const singleVisibleRange=lineVisibleRanges.ranges[0];0===singleVisibleRange.width&&(
// collapsed range case => make the decoration visible by faking its width
lineVisibleRanges.ranges[0]=new view_renderingContext/* HorizontalRange */.yu(singleVisibleRange.left,this._typicalHalfwidthCharacterWidth))}for(let k=0,lenK=lineVisibleRanges.ranges.length;k<lenK;k++){const visibleRange=lineVisibleRanges.ranges[k],decorationOutput='<div class="cdr '+className+'" style="left:'+String(visibleRange.left)+"px;width:"+String(visibleRange.width)+"px;height:"+lineHeight+'px;"></div>';output[lineIndex]+=decorationOutput}}}render(startLineNumber,lineNumber){if(!this._renderResult)return"";const lineIndex=lineNumber-startLineNumber;return lineIndex<0||lineIndex>=this._renderResult.length?"":this._renderResult[lineIndex]}}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollableElement.js + 6 modules
var scrollableElement=__webpack_require__(263161),colorRegistry=__webpack_require__(173910);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/platform/theme/common/colorRegistry.js
// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class EditorScrollbar extends ViewPart{constructor(context,linesContent,viewDomNode,overflowGuardDomNode){super(context);const options=this._context.configuration.options,scrollbar=options.get(91/* scrollbar */),mouseWheelScrollSensitivity=options.get(66/* mouseWheelScrollSensitivity */),fastScrollSensitivity=options.get(34/* fastScrollSensitivity */),scrollPredominantAxis=options.get(94/* scrollPredominantAxis */),scrollbarOptions={listenOnDomNode:viewDomNode.domNode,className:"editor-scrollable "+(0,themeService/* getThemeTypeSelector */.m6)(context.theme.type),useShadows:!1,lazyRender:!0,vertical:scrollbar.vertical,horizontal:scrollbar.horizontal,verticalHasArrows:scrollbar.verticalHasArrows,horizontalHasArrows:scrollbar.horizontalHasArrows,verticalScrollbarSize:scrollbar.verticalScrollbarSize,verticalSliderSize:scrollbar.verticalSliderSize,horizontalScrollbarSize:scrollbar.horizontalScrollbarSize,horizontalSliderSize:scrollbar.horizontalSliderSize,handleMouseWheel:scrollbar.handleMouseWheel,alwaysConsumeMouseWheel:scrollbar.alwaysConsumeMouseWheel,arrowSize:scrollbar.arrowSize,mouseWheelScrollSensitivity:mouseWheelScrollSensitivity,fastScrollSensitivity:fastScrollSensitivity,scrollPredominantAxis:scrollPredominantAxis,scrollByPage:scrollbar.scrollByPage};this.scrollbar=this._register(new scrollableElement/* SmoothScrollableElement */.$Z(linesContent.domNode,scrollbarOptions,this._context.viewLayout.getScrollable())),PartFingerprints.write(this.scrollbar.getDomNode(),5/* ScrollableElement */),this.scrollbarDomNode=(0,fastDomNode/* createFastDomNode */.X)(this.scrollbar.getDomNode()),this.scrollbarDomNode.setPosition("absolute"),this._setLayout();
// When having a zone widget that calls .focus() on one of its dom elements,
// the browser will try desperately to reveal that dom node, unexpectedly
// changing the .scrollTop of this.linesContent
const onBrowserDesperateReveal=(domNode,lookAtScrollTop,lookAtScrollLeft)=>{const newScrollPosition={};if(lookAtScrollTop){const deltaTop=domNode.scrollTop;deltaTop&&(newScrollPosition.scrollTop=this._context.viewLayout.getCurrentScrollTop()+deltaTop,domNode.scrollTop=0)}if(lookAtScrollLeft){const deltaLeft=domNode.scrollLeft;deltaLeft&&(newScrollPosition.scrollLeft=this._context.viewLayout.getCurrentScrollLeft()+deltaLeft,domNode.scrollLeft=0)}this._context.model.setScrollPosition(newScrollPosition,1/* Immediate */)};
// I've seen this happen both on the view dom node & on the lines content dom node.
this._register(dom/* addDisposableListener */.nm(viewDomNode.domNode,"scroll",(e=>onBrowserDesperateReveal(viewDomNode.domNode,!0,!0)))),this._register(dom/* addDisposableListener */.nm(linesContent.domNode,"scroll",(e=>onBrowserDesperateReveal(linesContent.domNode,!0,!1)))),this._register(dom/* addDisposableListener */.nm(overflowGuardDomNode.domNode,"scroll",(e=>onBrowserDesperateReveal(overflowGuardDomNode.domNode,!0,!1)))),this._register(dom/* addDisposableListener */.nm(this.scrollbarDomNode.domNode,"scroll",(e=>onBrowserDesperateReveal(this.scrollbarDomNode.domNode,!0,!1))))}dispose(){super.dispose()}_setLayout(){const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);this.scrollbarDomNode.setLeft(layoutInfo.contentLeft);const minimap=options.get(64/* minimap */),side=minimap.side;"right"===side?this.scrollbarDomNode.setWidth(layoutInfo.contentWidth+layoutInfo.minimap.minimapWidth):this.scrollbarDomNode.setWidth(layoutInfo.contentWidth),this.scrollbarDomNode.setHeight(layoutInfo.height)}getOverviewRulerLayoutInfo(){return this.scrollbar.getOverviewRulerLayoutInfo()}getDomNode(){return this.scrollbarDomNode}delegateVerticalScrollbarMouseDown(browserEvent){this.scrollbar.delegateVerticalScrollbarMouseDown(browserEvent)}
// --- begin event handlers
onConfigurationChanged(e){if(e.hasChanged(91/* scrollbar */)||e.hasChanged(66/* mouseWheelScrollSensitivity */)||e.hasChanged(34/* fastScrollSensitivity */)){const options=this._context.configuration.options,scrollbar=options.get(91/* scrollbar */),mouseWheelScrollSensitivity=options.get(66/* mouseWheelScrollSensitivity */),fastScrollSensitivity=options.get(34/* fastScrollSensitivity */),scrollPredominantAxis=options.get(94/* scrollPredominantAxis */),newOpts={vertical:scrollbar.vertical,horizontal:scrollbar.horizontal,verticalScrollbarSize:scrollbar.verticalScrollbarSize,horizontalScrollbarSize:scrollbar.horizontalScrollbarSize,scrollByPage:scrollbar.scrollByPage,handleMouseWheel:scrollbar.handleMouseWheel,mouseWheelScrollSensitivity:mouseWheelScrollSensitivity,fastScrollSensitivity:fastScrollSensitivity,scrollPredominantAxis:scrollPredominantAxis};this.scrollbar.updateOptions(newOpts)}return e.hasChanged(129/* layoutInfo */)&&this._setLayout(),!0}onScrollChanged(e){return!0}onThemeChanged(e){return this.scrollbar.updateClassName("editor-scrollable "+(0,themeService/* getThemeTypeSelector */.m6)(this._context.theme.type)),!0}
// --- end event handlers
prepareRender(ctx){
// Nothing to do
}render(ctx){this.scrollbar.renderNow()}}(0,themeService/* registerThemingParticipant */.Ic)(((theme,collector)=>{
// Scrollbars
const scrollbarShadowColor=theme.getColor(colorRegistry/* scrollbarShadow */._w);scrollbarShadowColor&&collector.addRule(`\n\t\t\t.monaco-scrollable-element > .shadow.top {\n\t\t\t\tbox-shadow: ${scrollbarShadowColor} 0 6px 6px -6px inset;\n\t\t\t}\n\n\t\t\t.monaco-scrollable-element > .shadow.left {\n\t\t\t\tbox-shadow: ${scrollbarShadowColor} 6px 0 6px -6px inset;\n\t\t\t}\n\n\t\t\t.monaco-scrollable-element > .shadow.top.left {\n\t\t\t\tbox-shadow: ${scrollbarShadowColor} 6px 6px 6px -6px inset;\n\t\t\t}\n\t\t`);const scrollbarSliderBackgroundColor=theme.getColor(colorRegistry/* scrollbarSliderBackground */.et);scrollbarSliderBackgroundColor&&collector.addRule(`\n\t\t\t.monaco-scrollable-element > .scrollbar > .slider {\n\t\t\t\tbackground: ${scrollbarSliderBackgroundColor};\n\t\t\t}\n\t\t`);const scrollbarSliderHoverBackgroundColor=theme.getColor(colorRegistry/* scrollbarSliderHoverBackground */.AB);scrollbarSliderHoverBackgroundColor&&collector.addRule(`\n\t\t\t.monaco-scrollable-element > .scrollbar > .slider:hover {\n\t\t\t\tbackground: ${scrollbarSliderHoverBackgroundColor};\n\t\t\t}\n\t\t`);const scrollbarSliderActiveBackgroundColor=theme.getColor(colorRegistry/* scrollbarSliderActiveBackground */.yn);scrollbarSliderActiveBackgroundColor&&collector.addRule(`\n\t\t\t.monaco-scrollable-element > .scrollbar > .slider.active {\n\t\t\t\tbackground: ${scrollbarSliderActiveBackgroundColor};\n\t\t\t}\n\t\t`)}));// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/glyphMargin/glyphMargin.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class DecorationToRender{constructor(startLineNumber,endLineNumber,className){this._decorationToRenderBrand=void 0,this.startLineNumber=+startLineNumber,this.endLineNumber=+endLineNumber,this.className=String(className)}}class DedupOverlay extends DynamicViewOverlay{_render(visibleStartLineNumber,visibleEndLineNumber,decorations){const output=[];for(let lineNumber=visibleStartLineNumber;lineNumber<=visibleEndLineNumber;lineNumber++){const lineIndex=lineNumber-visibleStartLineNumber;output[lineIndex]=[]}if(0===decorations.length)return output;decorations.sort(((a,b)=>a.className===b.className?a.startLineNumber===b.startLineNumber?a.endLineNumber-b.endLineNumber:a.startLineNumber-b.startLineNumber:a.className<b.className?-1:1));let prevClassName=null,prevEndLineIndex=0;for(let i=0,len=decorations.length;i<len;i++){const d=decorations[i],className=d.className;let startLineIndex=Math.max(d.startLineNumber,visibleStartLineNumber)-visibleStartLineNumber;const endLineIndex=Math.min(d.endLineNumber,visibleEndLineNumber)-visibleStartLineNumber;prevClassName===className?(startLineIndex=Math.max(prevEndLineIndex+1,startLineIndex),prevEndLineIndex=Math.max(prevEndLineIndex,endLineIndex)):(prevClassName=className,prevEndLineIndex=endLineIndex);for(let i=startLineIndex;i<=prevEndLineIndex;i++)output[i].push(prevClassName)}return output}}class GlyphMarginOverlay extends DedupOverlay{constructor(context){super(),this._context=context;const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);this._lineHeight=options.get(58/* lineHeight */),this._glyphMargin=options.get(49/* glyphMargin */),this._glyphMarginLeft=layoutInfo.glyphMarginLeft,this._glyphMarginWidth=layoutInfo.glyphMarginWidth,this._renderResult=null,this._context.addEventHandler(this)}dispose(){this._context.removeEventHandler(this),this._renderResult=null,super.dispose()}
// --- begin event handlers
onConfigurationChanged(e){const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);return this._lineHeight=options.get(58/* lineHeight */),this._glyphMargin=options.get(49/* glyphMargin */),this._glyphMarginLeft=layoutInfo.glyphMarginLeft,this._glyphMarginWidth=layoutInfo.glyphMarginWidth,!0}onDecorationsChanged(e){return!0}onFlushed(e){return!0}onLinesChanged(e){return!0}onLinesDeleted(e){return!0}onLinesInserted(e){return!0}onScrollChanged(e){return e.scrollTopChanged}onZonesChanged(e){return!0}
// --- end event handlers
_getDecorations(ctx){const decorations=ctx.getDecorationsInViewport();let r=[],rLen=0;for(let i=0,len=decorations.length;i<len;i++){const d=decorations[i],glyphMarginClassName=d.options.glyphMarginClassName;glyphMarginClassName&&(r[rLen++]=new DecorationToRender(d.range.startLineNumber,d.range.endLineNumber,glyphMarginClassName))}return r}prepareRender(ctx){if(!this._glyphMargin)return void(this._renderResult=null);const visibleStartLineNumber=ctx.visibleRange.startLineNumber,visibleEndLineNumber=ctx.visibleRange.endLineNumber,toRender=this._render(visibleStartLineNumber,visibleEndLineNumber,this._getDecorations(ctx)),lineHeight=this._lineHeight.toString(),left=this._glyphMarginLeft.toString(),width=this._glyphMarginWidth.toString(),common='" style="left:'+left+"px;width:"+width+"px;height:"+lineHeight+'px;"></div>',output=[];for(let lineNumber=visibleStartLineNumber;lineNumber<=visibleEndLineNumber;lineNumber++){const lineIndex=lineNumber-visibleStartLineNumber,classNames=toRender[lineIndex];0===classNames.length?output[lineIndex]="":output[lineIndex]='<div class="cgmr codicon '+classNames.join(" ")+common}this._renderResult=output}render(startLineNumber,lineNumber){if(!this._renderResult)return"";const lineIndex=lineNumber-startLineNumber;return lineIndex<0||lineIndex>=this._renderResult.length?"":this._renderResult[lineIndex]}}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/model.js
var model=__webpack_require__(984973),textModel=__webpack_require__(724979),types=__webpack_require__(998401);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/model/textModel.js + 19 modules
// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/indentGuides/indentGuides.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class IndentGuidesOverlay extends DynamicViewOverlay{constructor(context){super(),this._context=context,this._primaryPosition=null;const options=this._context.configuration.options,wrappingInfo=options.get(130/* wrappingInfo */),fontInfo=options.get(43/* fontInfo */);this._lineHeight=options.get(58/* lineHeight */),this._spaceWidth=fontInfo.spaceWidth,this._maxIndentLeft=-1===wrappingInfo.wrappingColumn?-1:wrappingInfo.wrappingColumn*fontInfo.typicalHalfwidthCharacterWidth,this._bracketPairGuideOptions=options.get(13/* guides */),this._renderResult=null,this._context.addEventHandler(this)}dispose(){this._context.removeEventHandler(this),this._renderResult=null,super.dispose()}
// --- begin event handlers
onConfigurationChanged(e){const options=this._context.configuration.options,wrappingInfo=options.get(130/* wrappingInfo */),fontInfo=options.get(43/* fontInfo */);return this._lineHeight=options.get(58/* lineHeight */),this._spaceWidth=fontInfo.spaceWidth,this._maxIndentLeft=-1===wrappingInfo.wrappingColumn?-1:wrappingInfo.wrappingColumn*fontInfo.typicalHalfwidthCharacterWidth,this._bracketPairGuideOptions=options.get(13/* guides */),!0}onCursorStateChanged(e){var _a;const selection=e.selections[0],newPosition=selection.getPosition();return!(null===(_a=this._primaryPosition)||void 0===_a?void 0:_a.equals(newPosition))&&(this._primaryPosition=newPosition,!0)}onDecorationsChanged(e){
// true for inline decorations
return!0}onFlushed(e){return!0}onLinesChanged(e){return!0}onLinesDeleted(e){return!0}onLinesInserted(e){return!0}onScrollChanged(e){return e.scrollTopChanged;// || e.scrollWidthChanged;
}onZonesChanged(e){return!0}onLanguageConfigurationChanged(e){return!0}
// --- end event handlers
prepareRender(ctx){var _a,_b,_c,_d;if(!this._bracketPairGuideOptions.indentation&&!1===this._bracketPairGuideOptions.bracketPairs)return void(this._renderResult=null);const visibleStartLineNumber=ctx.visibleRange.startLineNumber,visibleEndLineNumber=ctx.visibleRange.endLineNumber,scrollWidth=ctx.scrollWidth,lineHeight=this._lineHeight,activeCursorPosition=this._primaryPosition,indents=this.getGuidesByLine(visibleStartLineNumber,visibleEndLineNumber,activeCursorPosition),output=[];for(let lineNumber=visibleStartLineNumber;lineNumber<=visibleEndLineNumber;lineNumber++){const lineIndex=lineNumber-visibleStartLineNumber,indent=indents[lineIndex];let result="";const leftOffset=null!==(_b=null===(_a=ctx.visibleRangeForPosition(new core_position/* Position */.L(lineNumber,1)))||void 0===_a?void 0:_a.left)&&void 0!==_b?_b:0;for(const guide of indent){const left=leftOffset+(guide.visibleColumn-1)*this._spaceWidth;if(left>scrollWidth||this._maxIndentLeft>0&&left>this._maxIndentLeft)break;const className=guide.horizontalLine?guide.horizontalLine.top?"horizontal-top":"horizontal-bottom":"vertical",width=guide.horizontalLine?(null!==(_d=null===(_c=ctx.visibleRangeForPosition(new core_position/* Position */.L(lineNumber,guide.horizontalLine.endColumn)))||void 0===_c?void 0:_c.left)&&void 0!==_d?_d:left+this._spaceWidth)-left:this._spaceWidth;result+=`<div class="core-guide ${guide.className} ${className}" style="left:${left}px;height:${lineHeight}px;width:${width}px"></div>`}output[lineIndex]=result}this._renderResult=output}getGuidesByLine(visibleStartLineNumber,visibleEndLineNumber,activeCursorPosition){const bracketGuides=!1!==this._bracketPairGuideOptions.bracketPairs?this._context.model.getBracketGuidesInRangeByLine(visibleStartLineNumber,visibleEndLineNumber,activeCursorPosition,{highlightActive:this._bracketPairGuideOptions.highlightActiveBracketPair,horizontalGuides:!0===this._bracketPairGuideOptions.bracketPairsHorizontal?model/* HorizontalGuidesState */.s6.Enabled:"active"===this._bracketPairGuideOptions.bracketPairsHorizontal?model/* HorizontalGuidesState */.s6.EnabledForActive:model/* HorizontalGuidesState */.s6.Disabled,includeInactive:!0===this._bracketPairGuideOptions.bracketPairs}):null,indentGuides=this._bracketPairGuideOptions.indentation?this._context.model.getLinesIndentGuides(visibleStartLineNumber,visibleEndLineNumber):null;let activeIndentStartLineNumber=0,activeIndentEndLineNumber=0,activeIndentLevel=0;if(this._bracketPairGuideOptions.highlightActiveIndentation&&activeCursorPosition){const activeIndentInfo=this._context.model.getActiveIndentGuide(activeCursorPosition.lineNumber,visibleStartLineNumber,visibleEndLineNumber);activeIndentStartLineNumber=activeIndentInfo.startLineNumber,activeIndentEndLineNumber=activeIndentInfo.endLineNumber,activeIndentLevel=activeIndentInfo.indent}const{indentSize:indentSize}=this._context.model.getTextModelOptions(),result=[];for(let lineNumber=visibleStartLineNumber;lineNumber<=visibleEndLineNumber;lineNumber++){const lineGuides=new Array;result.push(lineGuides);const bracketGuidesInLine=bracketGuides?bracketGuides[lineNumber-visibleStartLineNumber]:[],bracketGuidesInLineQueue=new arrays/* ArrayQueue */.H9(bracketGuidesInLine),indentGuidesInLine=indentGuides?indentGuides[lineNumber-visibleStartLineNumber]:[];for(let indentLvl=1;indentLvl<=indentGuidesInLine;indentLvl++){const indentGuide=(indentLvl-1)*indentSize+1,isActive=
// Disable active indent guide if there are bracket guides.
0===bracketGuidesInLine.length&&activeIndentStartLineNumber<=lineNumber&&lineNumber<=activeIndentEndLineNumber&&indentLvl===activeIndentLevel;lineGuides.push(...bracketGuidesInLineQueue.takeWhile((g=>g.visibleColumn<indentGuide))||[]);const peeked=bracketGuidesInLineQueue.peek();peeked&&peeked.visibleColumn===indentGuide&&!peeked.horizontalLine||lineGuides.push(new model/* IndentGuide */.UO(indentGuide,isActive?"core-guide-indent-active":"core-guide-indent",null))}lineGuides.push(...bracketGuidesInLineQueue.takeWhile((g=>!0))||[])}return result}render(startLineNumber,lineNumber){if(!this._renderResult)return"";const lineIndex=lineNumber-startLineNumber;return lineIndex<0||lineIndex>=this._renderResult.length?"":this._renderResult[lineIndex]}}function transparentToUndefined(color){if(!color||!color.isTransparent())return color}(0,themeService/* registerThemingParticipant */.Ic)(((theme,collector)=>{const editorIndentGuidesColor=theme.getColor(editorColorRegistry/* editorIndentGuides */.tR);editorIndentGuidesColor&&collector.addRule(`.monaco-editor .lines-content .core-guide-indent { box-shadow: 1px 0 0 0 ${editorIndentGuidesColor} inset; }`);const editorActiveIndentGuidesColor=theme.getColor(editorColorRegistry/* editorActiveIndentGuides */.Ym)||editorIndentGuidesColor;editorActiveIndentGuidesColor&&collector.addRule(`.monaco-editor .lines-content .core-guide-indent-active { box-shadow: 1px 0 0 0 ${editorActiveIndentGuidesColor} inset; }`);const colors=[{bracketColor:editorColorRegistry/* editorBracketHighlightingForeground1 */.zJ,guideColor:editorColorRegistry/* editorBracketPairGuideBackground1 */.oV,guideColorActive:editorColorRegistry/* editorBracketPairGuideActiveBackground1 */.Qb},{bracketColor:editorColorRegistry/* editorBracketHighlightingForeground2 */.Vs,guideColor:editorColorRegistry/* editorBracketPairGuideBackground2 */.m$,guideColorActive:editorColorRegistry/* editorBracketPairGuideActiveBackground2 */.m3},{bracketColor:editorColorRegistry/* editorBracketHighlightingForeground3 */.CE,guideColor:editorColorRegistry/* editorBracketPairGuideBackground3 */.DS,guideColorActive:editorColorRegistry/* editorBracketPairGuideActiveBackground3 */.To},{bracketColor:editorColorRegistry/* editorBracketHighlightingForeground4 */.UP,guideColor:editorColorRegistry/* editorBracketPairGuideBackground4 */.lS,guideColorActive:editorColorRegistry/* editorBracketPairGuideActiveBackground4 */.L7},{bracketColor:editorColorRegistry/* editorBracketHighlightingForeground5 */.r0,guideColor:editorColorRegistry/* editorBracketPairGuideBackground5 */.Jn,guideColorActive:editorColorRegistry/* editorBracketPairGuideActiveBackground5 */.HV},{bracketColor:editorColorRegistry/* editorBracketHighlightingForeground6 */.m1,guideColor:editorColorRegistry/* editorBracketPairGuideBackground6 */.YF,guideColorActive:editorColorRegistry/* editorBracketPairGuideActiveBackground6 */.f9}],colorProvider=new textModel/* BracketPairGuidesClassNames */.WE;let colorValues=colors.map((c=>{var _a,_b;const bracketColor=theme.getColor(c.bracketColor),guideColor=theme.getColor(c.guideColor),guideColorActive=theme.getColor(c.guideColorActive),effectiveGuideColor=transparentToUndefined(null!==(_a=transparentToUndefined(guideColor))&&void 0!==_a?_a:null===bracketColor||void 0===bracketColor?void 0:bracketColor.transparent(.3)),effectiveGuideColorActive=transparentToUndefined(null!==(_b=transparentToUndefined(guideColorActive))&&void 0!==_b?_b:bracketColor);if(effectiveGuideColor&&effectiveGuideColorActive)return{guideColor:effectiveGuideColor,guideColorActive:effectiveGuideColorActive}})).filter(types/* isDefined */.$K);if(colorValues.length>0){for(let level=0;level<30;level++){const colors=colorValues[level%colorValues.length];collector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level).replace(/ /g,".")} { --guide-color: ${colors.guideColor}; --guide-color-active: ${colors.guideColorActive}; }`)}collector.addRule(".monaco-editor .vertical { box-shadow: 1px 0 0 0 var(--guide-color) inset; }"),collector.addRule(".monaco-editor .horizontal-top { border-top: 1px solid var(--guide-color); }"),collector.addRule(".monaco-editor .horizontal-bottom { border-bottom: 1px solid var(--guide-color); }"),collector.addRule(`.monaco-editor .vertical.${colorProvider.activeClassName} { box-shadow: 1px 0 0 0 var(--guide-color-active) inset; }`),collector.addRule(`.monaco-editor .horizontal-top.${colorProvider.activeClassName} { border-top: 1px solid var(--guide-color-active); }`),collector.addRule(`.monaco-editor .horizontal-bottom.${colorProvider.activeClassName} { border-bottom: 1px solid var(--guide-color-active); }`)}}));// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLines.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class LastRenderedData{constructor(){this._currentVisibleRange=new core_range/* Range */.e(1,1,1,1)}getCurrentVisibleRange(){return this._currentVisibleRange}setCurrentVisibleRange(currentVisibleRange){this._currentVisibleRange=currentVisibleRange}}class HorizontalRevealRangeRequest{constructor(lineNumber,startColumn,endColumn,startScrollTop,stopScrollTop,scrollType){this.lineNumber=lineNumber,this.startColumn=startColumn,this.endColumn=endColumn,this.startScrollTop=startScrollTop,this.stopScrollTop=stopScrollTop,this.scrollType=scrollType,this.type="range",this.minLineNumber=lineNumber,this.maxLineNumber=lineNumber}}class HorizontalRevealSelectionsRequest{constructor(selections,startScrollTop,stopScrollTop,scrollType){this.selections=selections,this.startScrollTop=startScrollTop,this.stopScrollTop=stopScrollTop,this.scrollType=scrollType,this.type="selections";let minLineNumber=selections[0].startLineNumber,maxLineNumber=selections[0].endLineNumber;for(let i=1,len=selections.length;i<len;i++){const selection=selections[i];minLineNumber=Math.min(minLineNumber,selection.startLineNumber),maxLineNumber=Math.max(maxLineNumber,selection.endLineNumber)}this.minLineNumber=minLineNumber,this.maxLineNumber=maxLineNumber}}class ViewLines extends ViewPart{constructor(context,linesContent){super(context),this._linesContent=linesContent,this._textRangeRestingSpot=document.createElement("div"),this._visibleLines=new VisibleLinesCollection(this),this.domNode=this._visibleLines.domNode;const conf=this._context.configuration,options=this._context.configuration.options,fontInfo=options.get(43/* fontInfo */),wrappingInfo=options.get(130/* wrappingInfo */);this._lineHeight=options.get(58/* lineHeight */),this._typicalHalfwidthCharacterWidth=fontInfo.typicalHalfwidthCharacterWidth,this._isViewportWrapping=wrappingInfo.isViewportWrapping,this._revealHorizontalRightPadding=options.get(88/* revealHorizontalRightPadding */),this._cursorSurroundingLines=options.get(25/* cursorSurroundingLines */),this._cursorSurroundingLinesStyle=options.get(26/* cursorSurroundingLinesStyle */),this._canUseLayerHinting=!options.get(28/* disableLayerHinting */),this._viewLineOptions=new ViewLineOptions(conf,this._context.theme.type),PartFingerprints.write(this.domNode,7/* ViewLines */),this.domNode.setClassName(`view-lines ${mouseCursor/* MOUSE_CURSOR_TEXT_CSS_CLASS_NAME */.S}`),configuration/* Configuration */.V.applyFontInfo(this.domNode,fontInfo),
// --- width & height
this._maxLineWidth=0,this._asyncUpdateLineWidths=new common_async/* RunOnceScheduler */.pY((()=>{this._updateLineWidthsSlow()}),200),this._asyncCheckMonospaceFontAssumptions=new common_async/* RunOnceScheduler */.pY((()=>{this._checkMonospaceFontAssumptions()}),2e3),this._lastRenderedData=new LastRenderedData,this._horizontalRevealRequest=null}dispose(){this._asyncUpdateLineWidths.dispose(),this._asyncCheckMonospaceFontAssumptions.dispose(),super.dispose()}getDomNode(){return this.domNode}
// ---- begin IVisibleLinesHost
createVisibleLine(){return new ViewLine(this._viewLineOptions)}
// ---- end IVisibleLinesHost
// ---- begin view event handlers
onConfigurationChanged(e){this._visibleLines.onConfigurationChanged(e),e.hasChanged(130/* wrappingInfo */)&&(this._maxLineWidth=0);const options=this._context.configuration.options,fontInfo=options.get(43/* fontInfo */),wrappingInfo=options.get(130/* wrappingInfo */);return this._lineHeight=options.get(58/* lineHeight */),this._typicalHalfwidthCharacterWidth=fontInfo.typicalHalfwidthCharacterWidth,this._isViewportWrapping=wrappingInfo.isViewportWrapping,this._revealHorizontalRightPadding=options.get(88/* revealHorizontalRightPadding */),this._cursorSurroundingLines=options.get(25/* cursorSurroundingLines */),this._cursorSurroundingLinesStyle=options.get(26/* cursorSurroundingLinesStyle */),this._canUseLayerHinting=!options.get(28/* disableLayerHinting */),configuration/* Configuration */.V.applyFontInfo(this.domNode,fontInfo),this._onOptionsMaybeChanged(),e.hasChanged(129/* layoutInfo */)&&(this._maxLineWidth=0),!0}_onOptionsMaybeChanged(){const conf=this._context.configuration,newViewLineOptions=new ViewLineOptions(conf,this._context.theme.type);if(!this._viewLineOptions.equals(newViewLineOptions)){this._viewLineOptions=newViewLineOptions;const startLineNumber=this._visibleLines.getStartLineNumber(),endLineNumber=this._visibleLines.getEndLineNumber();for(let lineNumber=startLineNumber;lineNumber<=endLineNumber;lineNumber++){const line=this._visibleLines.getVisibleLine(lineNumber);line.onOptionsChanged(this._viewLineOptions)}return!0}return!1}onCursorStateChanged(e){const rendStartLineNumber=this._visibleLines.getStartLineNumber(),rendEndLineNumber=this._visibleLines.getEndLineNumber();let r=!1;for(let lineNumber=rendStartLineNumber;lineNumber<=rendEndLineNumber;lineNumber++)r=this._visibleLines.getVisibleLine(lineNumber).onSelectionChanged()||r;return r}onDecorationsChanged(e){{const rendStartLineNumber=this._visibleLines.getStartLineNumber(),rendEndLineNumber=this._visibleLines.getEndLineNumber();for(let lineNumber=rendStartLineNumber;lineNumber<=rendEndLineNumber;lineNumber++)this._visibleLines.getVisibleLine(lineNumber).onDecorationsChanged()}return!0}onFlushed(e){const shouldRender=this._visibleLines.onFlushed(e);return this._maxLineWidth=0,shouldRender}onLinesChanged(e){return this._visibleLines.onLinesChanged(e)}onLinesDeleted(e){return this._visibleLines.onLinesDeleted(e)}onLinesInserted(e){return this._visibleLines.onLinesInserted(e)}onRevealRangeRequest(e){
// Using the future viewport here in order to handle multiple
// incoming reveal range requests that might all desire to be animated
const desiredScrollTop=this._computeScrollTopToRevealRange(this._context.viewLayout.getFutureViewport(),e.source,e.range,e.selections,e.verticalType);if(-1===desiredScrollTop)
// marker to abort the reveal range request
return!1;
// validate the new desired scroll top
let newScrollPosition=this._context.viewLayout.validateScrollPosition({scrollTop:desiredScrollTop});e.revealHorizontal?e.range&&e.range.startLineNumber!==e.range.endLineNumber?
// Two or more lines? => scroll to base (That's how you see most of the two lines)
newScrollPosition={scrollTop:newScrollPosition.scrollTop,scrollLeft:0}:e.range?
// We don't necessarily know the horizontal offset of this range since the line might not be in the view...
this._horizontalRevealRequest=new HorizontalRevealRangeRequest(e.range.startLineNumber,e.range.startColumn,e.range.endColumn,this._context.viewLayout.getCurrentScrollTop(),newScrollPosition.scrollTop,e.scrollType):e.selections&&e.selections.length>0&&(this._horizontalRevealRequest=new HorizontalRevealSelectionsRequest(e.selections,this._context.viewLayout.getCurrentScrollTop(),newScrollPosition.scrollTop,e.scrollType)):this._horizontalRevealRequest=null;const scrollTopDelta=Math.abs(this._context.viewLayout.getCurrentScrollTop()-newScrollPosition.scrollTop),scrollType=scrollTopDelta<=this._lineHeight?1/* Immediate */:e.scrollType;return this._context.model.setScrollPosition(newScrollPosition,scrollType),!0}onScrollChanged(e){if(this._horizontalRevealRequest&&e.scrollLeftChanged&&(
// cancel any outstanding horizontal reveal request if someone else scrolls horizontally.
this._horizontalRevealRequest=null),this._horizontalRevealRequest&&e.scrollTopChanged){const min=Math.min(this._horizontalRevealRequest.startScrollTop,this._horizontalRevealRequest.stopScrollTop),max=Math.max(this._horizontalRevealRequest.startScrollTop,this._horizontalRevealRequest.stopScrollTop);(e.scrollTop<min||e.scrollTop>max)&&(
// cancel any outstanding horizontal reveal request if someone else scrolls vertically.
this._horizontalRevealRequest=null)}return this.domNode.setWidth(e.scrollWidth),this._visibleLines.onScrollChanged(e)||!0}onTokensChanged(e){return this._visibleLines.onTokensChanged(e)}onZonesChanged(e){return this._context.model.setMaxLineWidth(this._maxLineWidth),this._visibleLines.onZonesChanged(e)}onThemeChanged(e){return this._onOptionsMaybeChanged()}
// ---- end view event handlers
// ----------- HELPERS FOR OTHERS
getPositionFromDOMInfo(spanNode,offset){const viewLineDomNode=this._getViewLineDomNode(spanNode);if(null===viewLineDomNode)
// Couldn't find view line node
return null;const lineNumber=this._getLineNumberFor(viewLineDomNode);if(-1===lineNumber)
// Couldn't find view line node
return null;if(lineNumber<1||lineNumber>this._context.model.getLineCount())
// lineNumber is outside range
return null;if(1===this._context.model.getLineMaxColumn(lineNumber))
// Line is empty
return new core_position/* Position */.L(lineNumber,1);const rendStartLineNumber=this._visibleLines.getStartLineNumber(),rendEndLineNumber=this._visibleLines.getEndLineNumber();if(lineNumber<rendStartLineNumber||lineNumber>rendEndLineNumber)
// Couldn't find line
return null;let column=this._visibleLines.getVisibleLine(lineNumber).getColumnOfNodeOffset(lineNumber,spanNode,offset);const minColumn=this._context.model.getLineMinColumn(lineNumber);return column<minColumn&&(column=minColumn),new core_position/* Position */.L(lineNumber,column)}_getViewLineDomNode(node){while(node&&1===node.nodeType){if(node.className===ViewLine.CLASS_NAME)return node;node=node.parentElement}return null}
/**
     * @returns the line number of this view line dom node.
     */_getLineNumberFor(domNode){const startLineNumber=this._visibleLines.getStartLineNumber(),endLineNumber=this._visibleLines.getEndLineNumber();for(let lineNumber=startLineNumber;lineNumber<=endLineNumber;lineNumber++){const line=this._visibleLines.getVisibleLine(lineNumber);if(domNode===line.getDomNode())return lineNumber}return-1}getLineWidth(lineNumber){const rendStartLineNumber=this._visibleLines.getStartLineNumber(),rendEndLineNumber=this._visibleLines.getEndLineNumber();return lineNumber<rendStartLineNumber||lineNumber>rendEndLineNumber?-1:this._visibleLines.getVisibleLine(lineNumber).getWidth()}linesVisibleRangesForRange(_range,includeNewLines){if(this.shouldRender())
// Cannot read from the DOM because it is dirty
// i.e. the model & the dom are out of sync, so I'd be reading something stale
return null;const originalEndLineNumber=_range.endLineNumber,range=core_range/* Range */.e.intersectRanges(_range,this._lastRenderedData.getCurrentVisibleRange());if(!range)return null;let visibleRanges=[],visibleRangesLen=0;const domReadingContext=new DomReadingContext(this.domNode.domNode,this._textRangeRestingSpot);let nextLineModelLineNumber=0;includeNewLines&&(nextLineModelLineNumber=this._context.model.coordinatesConverter.convertViewPositionToModelPosition(new core_position/* Position */.L(range.startLineNumber,1)).lineNumber);const rendStartLineNumber=this._visibleLines.getStartLineNumber(),rendEndLineNumber=this._visibleLines.getEndLineNumber();for(let lineNumber=range.startLineNumber;lineNumber<=range.endLineNumber;lineNumber++){if(lineNumber<rendStartLineNumber||lineNumber>rendEndLineNumber)continue;const startColumn=lineNumber===range.startLineNumber?range.startColumn:1,endColumn=lineNumber===range.endLineNumber?range.endColumn:this._context.model.getLineMaxColumn(lineNumber),visibleRangesForLine=this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(lineNumber,startColumn,endColumn,domReadingContext);if(visibleRangesForLine){if(includeNewLines&&lineNumber<originalEndLineNumber){const currentLineModelLineNumber=nextLineModelLineNumber;nextLineModelLineNumber=this._context.model.coordinatesConverter.convertViewPositionToModelPosition(new core_position/* Position */.L(lineNumber+1,1)).lineNumber,currentLineModelLineNumber!==nextLineModelLineNumber&&(visibleRangesForLine.ranges[visibleRangesForLine.ranges.length-1].width+=this._typicalHalfwidthCharacterWidth)}visibleRanges[visibleRangesLen++]=new view_renderingContext/* LineVisibleRanges */.u7(visibleRangesForLine.outsideRenderedLine,lineNumber,view_renderingContext/* HorizontalRange */.yu.from(visibleRangesForLine.ranges))}}return 0===visibleRangesLen?null:visibleRanges}_visibleRangesForLineRange(lineNumber,startColumn,endColumn){return this.shouldRender()||lineNumber<this._visibleLines.getStartLineNumber()||lineNumber>this._visibleLines.getEndLineNumber()?null:this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(lineNumber,startColumn,endColumn,new DomReadingContext(this.domNode.domNode,this._textRangeRestingSpot))}visibleRangeForPosition(position){const visibleRanges=this._visibleRangesForLineRange(position.lineNumber,position.column,position.column);return visibleRanges?new view_renderingContext/* HorizontalPosition */.D4(visibleRanges.outsideRenderedLine,visibleRanges.ranges[0].left):null}
// --- implementation
updateLineWidths(){this._updateLineWidths(!1)}
/**
     * Updates the max line width if it is fast to compute.
     * Returns true if all lines were taken into account.
     * Returns false if some lines need to be reevaluated (in a slow fashion).
     */_updateLineWidthsFast(){return this._updateLineWidths(!0)}_updateLineWidthsSlow(){this._updateLineWidths(!1)}_updateLineWidths(fast){const rendStartLineNumber=this._visibleLines.getStartLineNumber(),rendEndLineNumber=this._visibleLines.getEndLineNumber();let localMaxLineWidth=1,allWidthsComputed=!0;for(let lineNumber=rendStartLineNumber;lineNumber<=rendEndLineNumber;lineNumber++){const visibleLine=this._visibleLines.getVisibleLine(lineNumber);!fast||visibleLine.getWidthIsFast()?localMaxLineWidth=Math.max(localMaxLineWidth,visibleLine.getWidth()):
// Cannot compute width in a fast way for this line
allWidthsComputed=!1}return allWidthsComputed&&1===rendStartLineNumber&&rendEndLineNumber===this._context.model.getLineCount()&&(
// we know the max line width for all the lines
this._maxLineWidth=0),this._ensureMaxLineWidth(localMaxLineWidth),allWidthsComputed}_checkMonospaceFontAssumptions(){
// Problems with monospace assumptions are more apparent for longer lines,
// as small rounding errors start to sum up, so we will select the longest
// line for a closer inspection
let longestLineNumber=-1,longestWidth=-1;const rendStartLineNumber=this._visibleLines.getStartLineNumber(),rendEndLineNumber=this._visibleLines.getEndLineNumber();for(let lineNumber=rendStartLineNumber;lineNumber<=rendEndLineNumber;lineNumber++){const visibleLine=this._visibleLines.getVisibleLine(lineNumber);if(visibleLine.needsMonospaceFontCheck()){const lineWidth=visibleLine.getWidth();lineWidth>longestWidth&&(longestWidth=lineWidth,longestLineNumber=lineNumber)}}if(-1!==longestLineNumber&&!this._visibleLines.getVisibleLine(longestLineNumber).monospaceAssumptionsAreValid())for(let lineNumber=rendStartLineNumber;lineNumber<=rendEndLineNumber;lineNumber++){const visibleLine=this._visibleLines.getVisibleLine(lineNumber);visibleLine.onMonospaceAssumptionsInvalidated()}}prepareRender(){throw new Error("Not supported")}render(){throw new Error("Not supported")}renderText(viewportData){
// (2) compute horizontal scroll position:
//  - this must happen after the lines are in the DOM since it might need a line that rendered just now
//  - it might change `scrollWidth` and `scrollLeft`
if(
// (1) render lines - ensures lines are in the DOM
this._visibleLines.renderLines(viewportData),this._lastRenderedData.setCurrentVisibleRange(viewportData.visibleRange),this.domNode.setWidth(this._context.viewLayout.getScrollWidth()),this.domNode.setHeight(Math.min(this._context.viewLayout.getScrollHeight(),1e6)),this._horizontalRevealRequest){const horizontalRevealRequest=this._horizontalRevealRequest;
// Check that we have the line that contains the horizontal range in the viewport
if(viewportData.startLineNumber<=horizontalRevealRequest.minLineNumber&&horizontalRevealRequest.maxLineNumber<=viewportData.endLineNumber){this._horizontalRevealRequest=null,
// allow `visibleRangesForRange2` to work
this.onDidRender();
// compute new scroll position
const newScrollLeft=this._computeScrollLeftToReveal(horizontalRevealRequest);newScrollLeft&&(this._isViewportWrapping||
// ensure `scrollWidth` is large enough
this._ensureMaxLineWidth(newScrollLeft.maxHorizontalOffset),
// set `scrollLeft`
this._context.model.setScrollPosition({scrollLeft:newScrollLeft.scrollLeft},horizontalRevealRequest.scrollType))}}
// Update max line width (not so important, it is just so the horizontal scrollbar doesn't get too small)
if(this._updateLineWidthsFast()||
// Computing the width of some lines would be slow => delay it
this._asyncUpdateLineWidths.schedule(),platform/* isLinux */.IJ&&!this._asyncCheckMonospaceFontAssumptions.isScheduled()){const rendStartLineNumber=this._visibleLines.getStartLineNumber(),rendEndLineNumber=this._visibleLines.getEndLineNumber();for(let lineNumber=rendStartLineNumber;lineNumber<=rendEndLineNumber;lineNumber++){const visibleLine=this._visibleLines.getVisibleLine(lineNumber);if(visibleLine.needsMonospaceFontCheck()){this._asyncCheckMonospaceFontAssumptions.schedule();break}}}
// (3) handle scrolling
this._linesContent.setLayerHinting(this._canUseLayerHinting),this._linesContent.setContain("strict");const adjustedScrollTop=this._context.viewLayout.getCurrentScrollTop()-viewportData.bigNumbersDelta;this._linesContent.setTop(-adjustedScrollTop),this._linesContent.setLeft(-this._context.viewLayout.getCurrentScrollLeft())}
// --- width
_ensureMaxLineWidth(lineWidth){const iLineWidth=Math.ceil(lineWidth);this._maxLineWidth<iLineWidth&&(this._maxLineWidth=iLineWidth,this._context.model.setMaxLineWidth(this._maxLineWidth))}_computeScrollTopToRevealRange(viewport,source,range,selections,verticalType){const viewportStartY=viewport.top,viewportHeight=viewport.height,viewportEndY=viewportStartY+viewportHeight;let boxIsSingleRange,boxStartY,boxEndY;
// Have a box that includes one extra line height (for the horizontal scrollbar)
if(selections&&selections.length>0){let minLineNumber=selections[0].startLineNumber,maxLineNumber=selections[0].endLineNumber;for(let i=1,len=selections.length;i<len;i++){const selection=selections[i];minLineNumber=Math.min(minLineNumber,selection.startLineNumber),maxLineNumber=Math.max(maxLineNumber,selection.endLineNumber)}boxIsSingleRange=!1,boxStartY=this._context.viewLayout.getVerticalOffsetForLineNumber(minLineNumber),boxEndY=this._context.viewLayout.getVerticalOffsetForLineNumber(maxLineNumber)+this._lineHeight}else{if(!range)return-1;boxIsSingleRange=!0,boxStartY=this._context.viewLayout.getVerticalOffsetForLineNumber(range.startLineNumber),boxEndY=this._context.viewLayout.getVerticalOffsetForLineNumber(range.endLineNumber)+this._lineHeight}const shouldIgnoreScrollOff="mouse"===source&&"default"===this._cursorSurroundingLinesStyle;if(!shouldIgnoreScrollOff){const context=Math.min(viewportHeight/this._lineHeight/2,this._cursorSurroundingLines);boxStartY-=context*this._lineHeight,boxEndY+=Math.max(0,context-1)*this._lineHeight}let newScrollTop;if(0/* Simple */!==verticalType&&4/* Bottom */!==verticalType||(
// Reveal one line more when the last line would be covered by the scrollbar - arrow down case or revealing a line explicitly at bottom
boxEndY+=this._lineHeight),boxEndY-boxStartY>viewportHeight){
// the box is larger than the viewport ... scroll to its top
if(!boxIsSingleRange)
// do not reveal multiple cursors if there are more than fit the viewport
return-1;newScrollTop=boxStartY}else if(5/* NearTop */===verticalType||6/* NearTopIfOutsideViewport */===verticalType)if(6/* NearTopIfOutsideViewport */===verticalType&&viewportStartY<=boxStartY&&boxEndY<=viewportEndY)
// Box is already in the viewport... do nothing
newScrollTop=viewportStartY;else{
// We want a gap that is 20% of the viewport, but with a minimum of 5 lines
const desiredGapAbove=Math.max(5*this._lineHeight,.2*viewportHeight),desiredScrollTop=boxStartY-desiredGapAbove,minScrollTop=boxEndY-viewportHeight;
// Try to scroll just above the box with the desired gap
newScrollTop=Math.max(minScrollTop,desiredScrollTop)}else if(1/* Center */===verticalType||2/* CenterIfOutsideViewport */===verticalType)if(2/* CenterIfOutsideViewport */===verticalType&&viewportStartY<=boxStartY&&boxEndY<=viewportEndY)
// Box is already in the viewport... do nothing
newScrollTop=viewportStartY;else{
// Box is outside the viewport... center it
const boxMiddleY=(boxStartY+boxEndY)/2;newScrollTop=Math.max(0,boxMiddleY-viewportHeight/2)}else newScrollTop=this._computeMinimumScrolling(viewportStartY,viewportEndY,boxStartY,boxEndY,3/* Top */===verticalType,4/* Bottom */===verticalType);return newScrollTop}_computeScrollLeftToReveal(horizontalRevealRequest){const viewport=this._context.viewLayout.getCurrentViewport(),viewportStartX=viewport.left,viewportEndX=viewportStartX+viewport.width;let boxStartX=1073741824/* MAX_SAFE_SMALL_INTEGER */,boxEndX=0;if("range"===horizontalRevealRequest.type){const visibleRanges=this._visibleRangesForLineRange(horizontalRevealRequest.lineNumber,horizontalRevealRequest.startColumn,horizontalRevealRequest.endColumn);if(!visibleRanges)return null;for(const visibleRange of visibleRanges.ranges)boxStartX=Math.min(boxStartX,Math.round(visibleRange.left)),boxEndX=Math.max(boxEndX,Math.round(visibleRange.left+visibleRange.width))}else for(const selection of horizontalRevealRequest.selections){if(selection.startLineNumber!==selection.endLineNumber)return null;const visibleRanges=this._visibleRangesForLineRange(selection.startLineNumber,selection.startColumn,selection.endColumn);if(!visibleRanges)return null;for(const visibleRange of visibleRanges.ranges)boxStartX=Math.min(boxStartX,Math.round(visibleRange.left)),boxEndX=Math.max(boxEndX,Math.round(visibleRange.left+visibleRange.width))}if(boxStartX=Math.max(0,boxStartX-ViewLines.HORIZONTAL_EXTRA_PX),boxEndX+=this._revealHorizontalRightPadding,"selections"===horizontalRevealRequest.type&&boxEndX-boxStartX>viewport.width)return null;const newScrollLeft=this._computeMinimumScrolling(viewportStartX,viewportEndX,boxStartX,boxEndX);return{scrollLeft:newScrollLeft,maxHorizontalOffset:boxEndX}}_computeMinimumScrolling(viewportStart,viewportEnd,boxStart,boxEnd,revealAtStart,revealAtEnd){viewportStart|=0,viewportEnd|=0,boxStart|=0,boxEnd|=0,revealAtStart=!!revealAtStart,revealAtEnd=!!revealAtEnd;const viewportLength=viewportEnd-viewportStart,boxLength=boxEnd-boxStart;return boxLength<viewportLength?
// The box would fit in the viewport
revealAtStart?boxStart:revealAtEnd?Math.max(0,boxEnd-viewportLength):boxStart<viewportStart?boxStart:boxEnd>viewportEnd?Math.max(0,boxEnd-viewportLength):viewportStart:boxStart}}
/**
 * Adds this amount of pixels to the right of lines (no-one wants to type near the edge of the viewport)
 */ViewLines.HORIZONTAL_EXTRA_PX=30;// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/linesDecorations/linesDecorations.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class LinesDecorationsOverlay extends DedupOverlay{constructor(context){super(),this._context=context;const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);this._decorationsLeft=layoutInfo.decorationsLeft,this._decorationsWidth=layoutInfo.decorationsWidth,this._renderResult=null,this._context.addEventHandler(this)}dispose(){this._context.removeEventHandler(this),this._renderResult=null,super.dispose()}
// --- begin event handlers
onConfigurationChanged(e){const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);return this._decorationsLeft=layoutInfo.decorationsLeft,this._decorationsWidth=layoutInfo.decorationsWidth,!0}onDecorationsChanged(e){return!0}onFlushed(e){return!0}onLinesChanged(e){return!0}onLinesDeleted(e){return!0}onLinesInserted(e){return!0}onScrollChanged(e){return e.scrollTopChanged}onZonesChanged(e){return!0}
// --- end event handlers
_getDecorations(ctx){const decorations=ctx.getDecorationsInViewport();let r=[],rLen=0;for(let i=0,len=decorations.length;i<len;i++){const d=decorations[i],linesDecorationsClassName=d.options.linesDecorationsClassName;linesDecorationsClassName&&(r[rLen++]=new DecorationToRender(d.range.startLineNumber,d.range.endLineNumber,linesDecorationsClassName));const firstLineDecorationClassName=d.options.firstLineDecorationClassName;firstLineDecorationClassName&&(r[rLen++]=new DecorationToRender(d.range.startLineNumber,d.range.startLineNumber,firstLineDecorationClassName))}return r}prepareRender(ctx){const visibleStartLineNumber=ctx.visibleRange.startLineNumber,visibleEndLineNumber=ctx.visibleRange.endLineNumber,toRender=this._render(visibleStartLineNumber,visibleEndLineNumber,this._getDecorations(ctx)),left=this._decorationsLeft.toString(),width=this._decorationsWidth.toString(),common='" style="left:'+left+"px;width:"+width+'px;"></div>',output=[];for(let lineNumber=visibleStartLineNumber;lineNumber<=visibleEndLineNumber;lineNumber++){const lineIndex=lineNumber-visibleStartLineNumber,classNames=toRender[lineIndex];let lineOutput="";for(let i=0,len=classNames.length;i<len;i++)lineOutput+='<div class="cldr '+classNames[i]+common;output[lineIndex]=lineOutput}this._renderResult=output}render(startLineNumber,lineNumber){return this._renderResult?this._renderResult[lineNumber-startLineNumber]:""}}// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/marginDecorations/marginDecorations.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class MarginViewLineDecorationsOverlay extends DedupOverlay{constructor(context){super(),this._context=context,this._renderResult=null,this._context.addEventHandler(this)}dispose(){this._context.removeEventHandler(this),this._renderResult=null,super.dispose()}
// --- begin event handlers
onConfigurationChanged(e){return!0}onDecorationsChanged(e){return!0}onFlushed(e){return!0}onLinesChanged(e){return!0}onLinesDeleted(e){return!0}onLinesInserted(e){return!0}onScrollChanged(e){return e.scrollTopChanged}onZonesChanged(e){return!0}
// --- end event handlers
_getDecorations(ctx){const decorations=ctx.getDecorationsInViewport();let r=[],rLen=0;for(let i=0,len=decorations.length;i<len;i++){const d=decorations[i],marginClassName=d.options.marginClassName;marginClassName&&(r[rLen++]=new DecorationToRender(d.range.startLineNumber,d.range.endLineNumber,marginClassName))}return r}prepareRender(ctx){const visibleStartLineNumber=ctx.visibleRange.startLineNumber,visibleEndLineNumber=ctx.visibleRange.endLineNumber,toRender=this._render(visibleStartLineNumber,visibleEndLineNumber,this._getDecorations(ctx)),output=[];for(let lineNumber=visibleStartLineNumber;lineNumber<=visibleEndLineNumber;lineNumber++){const lineIndex=lineNumber-visibleStartLineNumber,classNames=toRender[lineIndex];let lineOutput="";for(let i=0,len=classNames.length;i<len;i++)lineOutput+='<div class="cmdr '+classNames[i]+'" style=""></div>';output[lineIndex]=lineOutput}this._renderResult=output}render(startLineNumber,lineNumber){return this._renderResult?this._renderResult[lineNumber-startLineNumber]:""}}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/core/rgba.js
var rgba=__webpack_require__(89636),minimapTokensColorTracker=__webpack_require__(489743),viewModel=__webpack_require__(513824);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/viewModel/minimapTokensColorTracker.js
// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharSheet.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
const allCharCodes=(()=>{const v=[];for(let i=32/* START_CH_CODE */;i<=126/* END_CH_CODE */;i++)v.push(i);return v.push(65533/* UNKNOWN_CODE */),v})(),getCharIndex=(chCode,fontScale)=>(chCode-=32/* START_CH_CODE */,chCode<0||chCode>96/* CHAR_COUNT */?fontScale<=2?(chCode+96/* CHAR_COUNT */)%96/* CHAR_COUNT */:95:chCode);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/base/common/uint.js
var uint=__webpack_require__(385427);// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRenderer.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class MinimapCharRenderer{constructor(charData,scale){this.scale=scale,this._minimapCharRendererBrand=void 0,this.charDataNormal=MinimapCharRenderer.soften(charData,.8),this.charDataLight=MinimapCharRenderer.soften(charData,50/60)}static soften(input,ratio){let result=new Uint8ClampedArray(input.length);for(let i=0,len=input.length;i<len;i++)result[i]=(0,uint/* toUint8 */.K)(input[i]*ratio);return result}renderChar(target,dx,dy,chCode,color,foregroundAlpha,backgroundColor,backgroundAlpha,fontScale,useLighterFont,force1pxHeight){const charWidth=1/* BASE_CHAR_WIDTH */*this.scale,charHeight=2/* BASE_CHAR_HEIGHT */*this.scale,renderHeight=force1pxHeight?1:charHeight;if(dx+charWidth>target.width||dy+renderHeight>target.height)return;const charData=useLighterFont?this.charDataLight:this.charDataNormal,charIndex=getCharIndex(chCode,fontScale),destWidth=4/* RGBA_CHANNELS_CNT */*target.width,backgroundR=backgroundColor.r,backgroundG=backgroundColor.g,backgroundB=backgroundColor.b,deltaR=color.r-backgroundR,deltaG=color.g-backgroundG,deltaB=color.b-backgroundB,destAlpha=Math.max(foregroundAlpha,backgroundAlpha),dest=target.data;let sourceOffset=charIndex*charWidth*charHeight,row=dy*destWidth+4/* RGBA_CHANNELS_CNT */*dx;for(let y=0;y<renderHeight;y++){let column=row;for(let x=0;x<charWidth;x++){const c=charData[sourceOffset++]/255*(foregroundAlpha/255);dest[column++]=backgroundR+deltaR*c,dest[column++]=backgroundG+deltaG*c,dest[column++]=backgroundB+deltaB*c,dest[column++]=destAlpha}row+=destWidth}}blockRenderChar(target,dx,dy,color,foregroundAlpha,backgroundColor,backgroundAlpha,force1pxHeight){const charWidth=1/* BASE_CHAR_WIDTH */*this.scale,charHeight=2/* BASE_CHAR_HEIGHT */*this.scale,renderHeight=force1pxHeight?1:charHeight;if(dx+charWidth>target.width||dy+renderHeight>target.height)return;const destWidth=4/* RGBA_CHANNELS_CNT */*target.width,c=foregroundAlpha/255*.5,backgroundR=backgroundColor.r,backgroundG=backgroundColor.g,backgroundB=backgroundColor.b,deltaR=color.r-backgroundR,deltaG=color.g-backgroundG,deltaB=color.b-backgroundB,colorR=backgroundR+deltaR*c,colorG=backgroundG+deltaG*c,colorB=backgroundB+deltaB*c,destAlpha=Math.max(foregroundAlpha,backgroundAlpha),dest=target.data;let row=dy*destWidth+4/* RGBA_CHANNELS_CNT */*dx;for(let y=0;y<renderHeight;y++){let column=row;for(let x=0;x<charWidth;x++)dest[column++]=colorR,dest[column++]=colorG,dest[column++]=colorB,dest[column++]=destAlpha;row+=destWidth}}}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/base/common/functional.js
var functional=__webpack_require__(888289);// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapPreBaked.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
const charTable={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,A:10,B:11,C:12,D:13,E:14,F:15},decodeData=str=>{const output=new Uint8ClampedArray(str.length/2);for(let i=0;i<str.length;i+=2)output[i>>1]=charTable[str[i]]<<4|15&charTable[str[i+1]];return output},prebakedMiniMaps={1:(0,functional/* once */.I)((()=>decodeData("0000511D6300CF609C709645A78432005642574171487021003C451900274D35D762755E8B629C5BA856AF57BA649530C167D1512A272A3F6038604460398526BCA2A968DB6F8957C768BE5FBE2FB467CF5D8D5B795DC7625B5DFF50DE64C466DB2FC47CD860A65E9A2EB96CB54CE06DA763AB2EA26860524D3763536601005116008177A8705E53AB738E6A982F88BAA35B5F5B626D9C636B449B737E5B7B678598869A662F6B5B8542706C704C80736A607578685B70594A49715A4522E792"))),2:(0,functional/* once */.I)((()=>decodeData};// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
/**
 * Creates character renderers. It takes a 'scale' that determines how large
 * characters should be drawn. Using this, it draws data into a canvas and
 * then downsamples the characters as necessary for the current display.
 * This makes rendering more efficient, rather than drawing a full (tiny)
 * font, or downsampling in real-time.
 */
class MinimapCharRendererFactory{
/**
     * Creates a new character renderer factory with the given scale.
     */
static create(scale,fontFamily){
// renderers are immutable. By default we'll 'create' a new minimap
// character renderer whenever we switch editors, no need to do extra work.
if(this.lastCreated&&scale===this.lastCreated.scale&&fontFamily===this.lastFontFamily)return this.lastCreated;let factory;return factory=prebakedMiniMaps[scale]?new MinimapCharRenderer(prebakedMiniMaps[scale](),scale):MinimapCharRendererFactory.createFromSampleData(MinimapCharRendererFactory.createSampleData(fontFamily).data,scale),this.lastFontFamily=fontFamily,this.lastCreated=factory,factory}
/**
     * Creates the font sample data, writing to a canvas.
     */static createSampleData(fontFamily){const canvas=document.createElement("canvas"),ctx=canvas.getContext("2d");canvas.style.height="16px",canvas.height=16/* SAMPLED_CHAR_HEIGHT */,canvas.width=960/* SAMPLED_CHAR_WIDTH */,canvas.style.width="960px",ctx.fillStyle="#ffffff",ctx.font=`bold 16px ${fontFamily}`,ctx.textBaseline="middle";let x=0;for(const code of allCharCodes)ctx.fillText(String.fromCharCode(code),x,8),x+=10/* SAMPLED_CHAR_WIDTH */;return ctx.getImageData(0,0,960/* SAMPLED_CHAR_WIDTH */,16/* SAMPLED_CHAR_HEIGHT */)}
/**
     * Creates a character renderer from the canvas sample data.
     */static createFromSampleData(source,scale){const expectedLength=61440/* CHAR_COUNT */;if(source.length!==expectedLength)throw new Error("Unexpected source in MinimapCharRenderer");let charData=MinimapCharRendererFactory._downsample(source,scale);return new MinimapCharRenderer(charData,scale)}static _downsampleChar(source,sourceOffset,dest,destOffset,scale){const width=1/* BASE_CHAR_WIDTH */*scale,height=2/* BASE_CHAR_HEIGHT */*scale;let targetIndex=destOffset,brightest=0;
// This is essentially an ad-hoc rescaling algorithm. Standard approaches
// like bicubic interpolation are awesome for scaling between image sizes,
// but don't work so well when scaling to very small pixel values, we end
// up with blurry, indistinct forms.
// The approach taken here is simply mapping each source pixel to the target
// pixels, and taking the weighted values for all pixels in each, and then
// averaging them out. Finally we apply an intensity boost in _downsample,
// since when scaling to the smallest pixel sizes there's more black space
// which causes characters to be much less distinct.
for(let y=0;y<height;y++){
// 1. For this destination pixel, get the source pixels we're sampling
// from (x1, y1) to the next pixel (x2, y2)
const sourceY1=y/height*16/* SAMPLED_CHAR_HEIGHT */,sourceY2=(y+1)/height*16/* SAMPLED_CHAR_HEIGHT */;for(let x=0;x<width;x++){const sourceX1=x/width*10/* SAMPLED_CHAR_WIDTH */,sourceX2=(x+1)/width*10/* SAMPLED_CHAR_WIDTH */;
// 2. Sample all of them, summing them up and weighting them. Similar
// to bilinear interpolation.
let value=0,samples=0;for(let sy=sourceY1;sy<sourceY2;sy++){const sourceRow=sourceOffset+3840/* RGBA_SAMPLED_ROW_WIDTH */*Math.floor(sy),yBalance=1-(sy-Math.floor(sy));for(let sx=sourceX1;sx<sourceX2;sx++){const xBalance=1-(sx-Math.floor(sx)),sourceIndex=sourceRow+4/* RGBA_CHANNELS_CNT */*Math.floor(sx),weight=xBalance*yBalance;samples+=weight,value+=source[sourceIndex]*source[sourceIndex+3]/255*weight}}const final=value/samples;brightest=Math.max(brightest,final),dest[targetIndex++]=(0,uint/* toUint8 */.K)(final)}}return brightest}static _downsample(data,scale){const pixelsPerCharacter=2/* BASE_CHAR_HEIGHT */*scale*1/* BASE_CHAR_WIDTH */*scale,resultLen=96/* CHAR_COUNT */*pixelsPerCharacter,result=new Uint8ClampedArray(resultLen);let resultOffset=0,sourceOffset=0,brightest=0;for(let charIndex=0;charIndex<96/* CHAR_COUNT */;charIndex++)brightest=Math.max(brightest,this._downsampleChar(data,sourceOffset,result,resultOffset,scale)),resultOffset+=pixelsPerCharacter,sourceOffset+=40/* RGBA_CHANNELS_CNT */;if(brightest>0){const adjust=255/brightest;for(let i=0;i<resultLen;i++)result[i]*=adjust}return result}}// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimap.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
/**
 * The orthogonal distance to the slider at which dragging "resets". This implements "snapping"
 */
const MOUSE_DRAG_RESET_DISTANCE=140,GUTTER_DECORATION_WIDTH=2;class MinimapOptions{constructor(configuration,theme,tokensColorTracker){const options=configuration.options,pixelRatio=options.get(127/* pixelRatio */),layoutInfo=options.get(129/* layoutInfo */),minimapLayout=layoutInfo.minimap,fontInfo=options.get(43/* fontInfo */),minimapOpts=options.get(64/* minimap */);this.renderMinimap=minimapLayout.renderMinimap,this.size=minimapOpts.size,this.minimapHeightIsEditorHeight=minimapLayout.minimapHeightIsEditorHeight,this.scrollBeyondLastLine=options.get(93/* scrollBeyondLastLine */),this.showSlider=minimapOpts.showSlider,this.pixelRatio=pixelRatio,this.typicalHalfwidthCharacterWidth=fontInfo.typicalHalfwidthCharacterWidth,this.lineHeight=options.get(58/* lineHeight */),this.minimapLeft=minimapLayout.minimapLeft,this.minimapWidth=minimapLayout.minimapWidth,this.minimapHeight=layoutInfo.height,this.canvasInnerWidth=minimapLayout.minimapCanvasInnerWidth,this.canvasInnerHeight=minimapLayout.minimapCanvasInnerHeight,this.canvasOuterWidth=minimapLayout.minimapCanvasOuterWidth,this.canvasOuterHeight=minimapLayout.minimapCanvasOuterHeight,this.isSampling=minimapLayout.minimapIsSampling,this.editorHeight=layoutInfo.height,this.fontScale=minimapLayout.minimapScale,this.minimapLineHeight=minimapLayout.minimapLineHeight,this.minimapCharWidth=1/* BASE_CHAR_WIDTH */*this.fontScale,this.charRenderer=(0,functional/* once */.I)((()=>MinimapCharRendererFactory.create(this.fontScale,fontInfo.fontFamily))),this.defaultBackgroundColor=tokensColorTracker.getColor(2/* DefaultBackground */),this.backgroundColor=MinimapOptions._getMinimapBackground(theme,this.defaultBackgroundColor),this.foregroundAlpha=MinimapOptions._getMinimapForegroundOpacity(theme)}static _getMinimapBackground(theme,defaultBackgroundColor){const themeColor=theme.getColor(colorRegistry/* minimapBackground */.kV);return themeColor?new rgba/* RGBA8 */.h(themeColor.rgba.r,themeColor.rgba.g,themeColor.rgba.b,Math.round(255*themeColor.rgba.a)):defaultBackgroundColor}static _getMinimapForegroundOpacity(theme){const themeColor=theme.getColor(colorRegistry/* minimapForegroundOpacity */.It);return themeColor?rgba/* RGBA8 */.h._clamp(Math.round(255*themeColor.rgba.a)):255}equals(other){return this.renderMinimap===other.renderMinimap&&this.size===other.size&&this.minimapHeightIsEditorHeight===other.minimapHeightIsEditorHeight&&this.scrollBeyondLastLine===other.scrollBeyondLastLine&&this.showSlider===other.showSlider&&this.pixelRatio===other.pixelRatio&&this.typicalHalfwidthCharacterWidth===other.typicalHalfwidthCharacterWidth&&this.lineHeight===other.lineHeight&&this.minimapLeft===other.minimapLeft&&this.minimapWidth===other.minimapWidth&&this.minimapHeight===other.minimapHeight&&this.canvasInnerWidth===other.canvasInnerWidth&&this.canvasInnerHeight===other.canvasInnerHeight&&this.canvasOuterWidth===other.canvasOuterWidth&&this.canvasOuterHeight===other.canvasOuterHeight&&this.isSampling===other.isSampling&&this.editorHeight===other.editorHeight&&this.fontScale===other.fontScale&&this.minimapLineHeight===other.minimapLineHeight&&this.minimapCharWidth===other.minimapCharWidth&&this.defaultBackgroundColor&&this.defaultBackgroundColor.equals(other.defaultBackgroundColor)&&this.backgroundColor&&this.backgroundColor.equals(other.backgroundColor)&&this.foregroundAlpha===other.foregroundAlpha}}class MinimapLayout{constructor(scrollTop,scrollHeight,sliderNeeded,computedSliderRatio,sliderTop,sliderHeight,startLineNumber,endLineNumber){this.scrollTop=scrollTop,this.scrollHeight=scrollHeight,this.sliderNeeded=sliderNeeded,this._computedSliderRatio=computedSliderRatio,this.sliderTop=sliderTop,this.sliderHeight=sliderHeight,this.startLineNumber=startLineNumber,this.endLineNumber=endLineNumber}
/**
     * Compute a desired `scrollPosition` such that the slider moves by `delta`.
     */getDesiredScrollTopFromDelta(delta){return Math.round(this.scrollTop+delta/this._computedSliderRatio)}getDesiredScrollTopFromTouchLocation(pageY){return Math.round((pageY-this.sliderHeight/2)/this._computedSliderRatio)}static create(options,viewportStartLineNumber,viewportEndLineNumber,viewportStartLineNumberVerticalOffset,viewportHeight,viewportContainsWhitespaceGaps,lineCount,realLineCount,scrollTop,scrollHeight,previousLayout){const pixelRatio=options.pixelRatio,minimapLineHeight=options.minimapLineHeight,minimapLinesFitting=Math.floor(options.canvasInnerHeight/minimapLineHeight),lineHeight=options.lineHeight;if(options.minimapHeightIsEditorHeight){const logicalScrollHeight=realLineCount*options.lineHeight+(options.scrollBeyondLastLine?viewportHeight-options.lineHeight:0),sliderHeight=Math.max(1,Math.floor(viewportHeight*viewportHeight/logicalScrollHeight)),maxMinimapSliderTop=Math.max(0,options.minimapHeight-sliderHeight),computedSliderRatio=maxMinimapSliderTop/(scrollHeight-viewportHeight),sliderTop=scrollTop*computedSliderRatio,sliderNeeded=maxMinimapSliderTop>0,maxLinesFitting=Math.floor(options.canvasInnerHeight/options.minimapLineHeight);return new MinimapLayout(scrollTop,scrollHeight,sliderNeeded,computedSliderRatio,sliderTop,sliderHeight,1,Math.min(lineCount,maxLinesFitting))}
// The visible line count in a viewport can change due to a number of reasons:
//  a) with the same viewport width, different scroll positions can result in partial lines being visible:
//    e.g. for a line height of 20, and a viewport height of 600
//          * scrollTop = 0  => visible lines are [1, 30]
//          * scrollTop = 10 => visible lines are [1, 31] (with lines 1 and 31 partially visible)
//          * scrollTop = 20 => visible lines are [2, 31]
//  b) whitespace gaps might make their way in the viewport (which results in a decrease in the visible line count)
//  c) we could be in the scroll beyond last line case (which also results in a decrease in the visible line count, down to possibly only one line being visible)
// We must first establish a desirable slider height.
let sliderHeight,maxMinimapSliderTop;if(viewportContainsWhitespaceGaps&&viewportEndLineNumber!==lineCount){
// case b) from above: there are whitespace gaps in the viewport.
// In this case, the height of the slider directly reflects the visible line count.
const viewportLineCount=viewportEndLineNumber-viewportStartLineNumber+1;sliderHeight=Math.floor(viewportLineCount*minimapLineHeight/pixelRatio)}else{
// The slider has a stable height
const expectedViewportLineCount=viewportHeight/lineHeight;sliderHeight=Math.floor(expectedViewportLineCount*minimapLineHeight/pixelRatio)}
// The minimap slider, when dragged all the way down, will contain the last line at its top
maxMinimapSliderTop=options.scrollBeyondLastLine?(lineCount-1)*minimapLineHeight/pixelRatio:Math.max(0,lineCount*minimapLineHeight/pixelRatio-sliderHeight),maxMinimapSliderTop=Math.min(options.minimapHeight-sliderHeight,maxMinimapSliderTop);
// The slider can move from 0 to `maxMinimapSliderTop`
// in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.
const computedSliderRatio=maxMinimapSliderTop/(scrollHeight-viewportHeight),sliderTop=scrollTop*computedSliderRatio;let extraLinesAtTheBottom=0;if(options.scrollBeyondLastLine){const expectedViewportLineCount=viewportHeight/lineHeight;extraLinesAtTheBottom=expectedViewportLineCount-1}if(minimapLinesFitting>=lineCount+extraLinesAtTheBottom){
// All lines fit in the minimap
const startLineNumber=1,endLineNumber=lineCount,sliderNeeded=maxMinimapSliderTop>0;return new MinimapLayout(scrollTop,scrollHeight,sliderNeeded,computedSliderRatio,sliderTop,sliderHeight,startLineNumber,endLineNumber)}{let startLineNumber=Math.max(1,Math.floor(viewportStartLineNumber-sliderTop*pixelRatio/minimapLineHeight));
// Avoid flickering caused by a partial viewport start line
// by being consistent w.r.t. the previous layout decision
previousLayout&&previousLayout.scrollHeight===scrollHeight&&(previousLayout.scrollTop>scrollTop&&(
// Scrolling up => never increase `startLineNumber`
startLineNumber=Math.min(startLineNumber,previousLayout.startLineNumber)),previousLayout.scrollTop<scrollTop&&(
// Scrolling down => never decrease `startLineNumber`
startLineNumber=Math.max(startLineNumber,previousLayout.startLineNumber)));const endLineNumber=Math.min(lineCount,startLineNumber+minimapLinesFitting-1),partialLine=(scrollTop-viewportStartLineNumberVerticalOffset)/lineHeight,sliderTopAligned=(viewportStartLineNumber-startLineNumber+partialLine)*minimapLineHeight/pixelRatio;return new MinimapLayout(scrollTop,scrollHeight,!0,computedSliderRatio,sliderTopAligned,sliderHeight,startLineNumber,endLineNumber)}}}class MinimapLine{constructor(dy){this.dy=dy}onContentChanged(){this.dy=-1}onTokensChanged(){this.dy=-1}}MinimapLine.INVALID=new MinimapLine(-1);class RenderData{constructor(renderedLayout,imageData,lines){this.renderedLayout=renderedLayout,this._imageData=imageData,this._renderedLines=new RenderedLinesCollection((()=>MinimapLine.INVALID)),this._renderedLines._set(renderedLayout.startLineNumber,lines)}
/**
     * Check if the current RenderData matches accurately the new desired layout and no painting is needed.
     */linesEquals(layout){if(!this.scrollEquals(layout))return!1;const tmp=this._renderedLines._get(),lines=tmp.lines;for(let i=0,len=lines.length;i<len;i++)if(-1===lines[i].dy)
// This line is invalid
return!1;return!0}
/**
     * Check if the current RenderData matches the new layout's scroll position
     */scrollEquals(layout){return this.renderedLayout.startLineNumber===layout.startLineNumber&&this.renderedLayout.endLineNumber===layout.endLineNumber}_get(){const tmp=this._renderedLines._get();return{imageData:this._imageData,rendLineNumberStart:tmp.rendLineNumberStart,lines:tmp.lines}}onLinesChanged(changeFromLineNumber,changeToLineNumber){return this._renderedLines.onLinesChanged(changeFromLineNumber,changeToLineNumber)}onLinesDeleted(deleteFromLineNumber,deleteToLineNumber){this._renderedLines.onLinesDeleted(deleteFromLineNumber,deleteToLineNumber)}onLinesInserted(insertFromLineNumber,insertToLineNumber){this._renderedLines.onLinesInserted(insertFromLineNumber,insertToLineNumber)}onTokensChanged(ranges){return this._renderedLines.onTokensChanged(ranges)}}
/**
 * Some sort of double buffering.
 *
 * Keeps two buffers around that will be rotated for painting.
 * Always gives a buffer that is filled with the background color.
 */class MinimapBuffers{constructor(ctx,WIDTH,HEIGHT,background){this._backgroundFillData=MinimapBuffers._createBackgroundFillData(WIDTH,HEIGHT,background),this._buffers=[ctx.createImageData(WIDTH,HEIGHT),ctx.createImageData(WIDTH,HEIGHT)],this._lastUsedBuffer=0}getBuffer(){
// rotate buffers
this._lastUsedBuffer=1-this._lastUsedBuffer;const result=this._buffers[this._lastUsedBuffer];
// fill with background color
return result.data.set(this._backgroundFillData),result}static _createBackgroundFillData(WIDTH,HEIGHT,background){const backgroundR=background.r,backgroundG=background.g,backgroundB=background.b,backgroundA=background.a,result=new Uint8ClampedArray(WIDTH*HEIGHT*4);let offset=0;for(let i=0;i<HEIGHT;i++)for(let j=0;j<WIDTH;j++)result[offset]=backgroundR,result[offset+1]=backgroundG,result[offset+2]=backgroundB,result[offset+3]=backgroundA,offset+=4;return result}}class MinimapSamplingState{constructor(samplingRatio,minimapLines){this.samplingRatio=samplingRatio,this.minimapLines=minimapLines}static compute(options,viewLineCount,oldSamplingState){if(0/* None */===options.renderMinimap||!options.isSampling)return[null,[]];
// ratio is intentionally not part of the layout to avoid the layout changing all the time
// so we need to recompute it again...
const pixelRatio=options.pixelRatio,lineHeight=options.lineHeight,scrollBeyondLastLine=options.scrollBeyondLastLine,{minimapLineCount:minimapLineCount}=editorOptions/* EditorLayoutInfoComputer */.gk.computeContainedMinimapLineCount({viewLineCount:viewLineCount,scrollBeyondLastLine:scrollBeyondLastLine,height:options.editorHeight,lineHeight:lineHeight,pixelRatio:pixelRatio}),ratio=viewLineCount/minimapLineCount,halfRatio=ratio/2;if(!oldSamplingState||0===oldSamplingState.minimapLines.length){let result=[];if(result[0]=1,minimapLineCount>1){for(let i=0,lastIndex=minimapLineCount-1;i<lastIndex;i++)result[i]=Math.round(i*ratio+halfRatio);result[minimapLineCount-1]=viewLineCount}return[new MinimapSamplingState(ratio,result),[]]}const oldMinimapLines=oldSamplingState.minimapLines,oldLength=oldMinimapLines.length;let result=[],oldIndex=0,oldDeltaLineCount=0,minViewLineNumber=1;const MAX_EVENT_COUNT=10;// generate at most 10 events, if there are more than 10 changes, just flush all previous data
let events=[],lastEvent=null;for(let i=0;i<minimapLineCount;i++){const fromViewLineNumber=Math.max(minViewLineNumber,Math.round(i*ratio)),toViewLineNumber=Math.max(fromViewLineNumber,Math.round((i+1)*ratio));while(oldIndex<oldLength&&oldMinimapLines[oldIndex]<fromViewLineNumber){if(events.length<MAX_EVENT_COUNT){const oldMinimapLineNumber=oldIndex+1+oldDeltaLineCount;lastEvent&&"deleted"===lastEvent.type&&lastEvent._oldIndex===oldIndex-1?lastEvent.deleteToLineNumber++:(lastEvent={type:"deleted",_oldIndex:oldIndex,deleteFromLineNumber:oldMinimapLineNumber,deleteToLineNumber:oldMinimapLineNumber},events.push(lastEvent)),oldDeltaLineCount--}oldIndex++}let selectedViewLineNumber;if(oldIndex<oldLength&&oldMinimapLines[oldIndex]<=toViewLineNumber)
// reuse the old sampled line
selectedViewLineNumber=oldMinimapLines[oldIndex],oldIndex++;else if(selectedViewLineNumber=0===i?1:i+1===minimapLineCount?viewLineCount:Math.round(i*ratio+halfRatio),events.length<MAX_EVENT_COUNT){const oldMinimapLineNumber=oldIndex+1+oldDeltaLineCount;lastEvent&&"inserted"===lastEvent.type&&lastEvent._i===i-1?lastEvent.insertToLineNumber++:(lastEvent={type:"inserted",_i:i,insertFromLineNumber:oldMinimapLineNumber,insertToLineNumber:oldMinimapLineNumber},events.push(lastEvent)),oldDeltaLineCount++}result[i]=selectedViewLineNumber,minViewLineNumber=selectedViewLineNumber}if(events.length<MAX_EVENT_COUNT)while(oldIndex<oldLength){const oldMinimapLineNumber=oldIndex+1+oldDeltaLineCount;lastEvent&&"deleted"===lastEvent.type&&lastEvent._oldIndex===oldIndex-1?lastEvent.deleteToLineNumber++:(lastEvent={type:"deleted",_oldIndex:oldIndex,deleteFromLineNumber:oldMinimapLineNumber,deleteToLineNumber:oldMinimapLineNumber},events.push(lastEvent)),oldDeltaLineCount--,oldIndex++}else
// too many events, just give up
events=[{type:"flush"}];return[new MinimapSamplingState(ratio,result),events]}modelLineToMinimapLine(lineNumber){return Math.min(this.minimapLines.length,Math.max(1,Math.round(lineNumber/this.samplingRatio)))}
/**
     * Will return null if the model line ranges are not intersecting with a sampled model line.
     */modelLineRangeToMinimapLineRange(fromLineNumber,toLineNumber){let fromLineIndex=this.modelLineToMinimapLine(fromLineNumber)-1;while(fromLineIndex>0&&this.minimapLines[fromLineIndex-1]>=fromLineNumber)fromLineIndex--;let toLineIndex=this.modelLineToMinimapLine(toLineNumber)-1;while(toLineIndex+1<this.minimapLines.length&&this.minimapLines[toLineIndex+1]<=toLineNumber)toLineIndex++;if(fromLineIndex===toLineIndex){const sampledLineNumber=this.minimapLines[fromLineIndex];if(sampledLineNumber<fromLineNumber||sampledLineNumber>toLineNumber)
// This line is not part of the sampled lines ==> nothing to do
return null}return[fromLineIndex+1,toLineIndex+1]}
/**
     * Will always return a range, even if it is not intersecting with a sampled model line.
     */decorationLineRangeToMinimapLineRange(startLineNumber,endLineNumber){let minimapLineStart=this.modelLineToMinimapLine(startLineNumber),minimapLineEnd=this.modelLineToMinimapLine(endLineNumber);return startLineNumber!==endLineNumber&&minimapLineEnd===minimapLineStart&&(minimapLineEnd===this.minimapLines.length?minimapLineStart>1&&minimapLineStart--:minimapLineEnd++),[minimapLineStart,minimapLineEnd]}onLinesDeleted(e){
// have the mapping be sticky
const deletedLineCount=e.toLineNumber-e.fromLineNumber+1;let changeStartIndex=this.minimapLines.length,changeEndIndex=0;for(let i=this.minimapLines.length-1;i>=0;i--){if(this.minimapLines[i]<e.fromLineNumber)break;this.minimapLines[i]<=e.toLineNumber?(
// this line got deleted => move to previous available
this.minimapLines[i]=Math.max(1,e.fromLineNumber-1),changeStartIndex=Math.min(changeStartIndex,i),changeEndIndex=Math.max(changeEndIndex,i)):this.minimapLines[i]-=deletedLineCount}return[changeStartIndex,changeEndIndex]}onLinesInserted(e){
// have the mapping be sticky
const insertedLineCount=e.toLineNumber-e.fromLineNumber+1;for(let i=this.minimapLines.length-1;i>=0;i--){if(this.minimapLines[i]<e.fromLineNumber)break;this.minimapLines[i]+=insertedLineCount}}}class Minimap extends ViewPart{constructor(context){super(context),this.tokensColorTracker=minimapTokensColorTracker/* MinimapTokensColorTracker */.E.getInstance(),this._selections=[],this._minimapSelections=null,this.options=new MinimapOptions(this._context.configuration,this._context.theme,this.tokensColorTracker);const[samplingState]=MinimapSamplingState.compute(this.options,this._context.model.getLineCount(),null);this._samplingState=samplingState,this._shouldCheckSampling=!1,this._actual=new InnerMinimap(context.theme,this)}dispose(){this._actual.dispose(),super.dispose()}getDomNode(){return this._actual.getDomNode()}_onOptionsMaybeChanged(){const opts=new MinimapOptions(this._context.configuration,this._context.theme,this.tokensColorTracker);return!this.options.equals(opts)&&(this.options=opts,this._recreateLineSampling(),this._actual.onDidChangeOptions(),!0)}
// ---- begin view event handlers
onConfigurationChanged(e){return this._onOptionsMaybeChanged()}onCursorStateChanged(e){return this._selections=e.selections,this._minimapSelections=null,this._actual.onSelectionChanged()}onDecorationsChanged(e){return!!e.affectsMinimap&&this._actual.onDecorationsChanged()}onFlushed(e){return this._samplingState&&(this._shouldCheckSampling=!0),this._actual.onFlushed()}onLinesChanged(e){if(this._samplingState){const minimapLineRange=this._samplingState.modelLineRangeToMinimapLineRange(e.fromLineNumber,e.toLineNumber);return!!minimapLineRange&&this._actual.onLinesChanged(minimapLineRange[0],minimapLineRange[1])}return this._actual.onLinesChanged(e.fromLineNumber,e.toLineNumber)}onLinesDeleted(e){if(this._samplingState){const[changeStartIndex,changeEndIndex]=this._samplingState.onLinesDeleted(e);return changeStartIndex<=changeEndIndex&&this._actual.onLinesChanged(changeStartIndex+1,changeEndIndex+1),this._shouldCheckSampling=!0,!0}return this._actual.onLinesDeleted(e.fromLineNumber,e.toLineNumber)}onLinesInserted(e){return this._samplingState?(this._samplingState.onLinesInserted(e),this._shouldCheckSampling=!0,!0):this._actual.onLinesInserted(e.fromLineNumber,e.toLineNumber)}onScrollChanged(e){return this._actual.onScrollChanged()}onThemeChanged(e){return this._context.model.invalidateMinimapColorCache(),this._actual.onThemeChanged(),this._onOptionsMaybeChanged(),!0}onTokensChanged(e){if(this._samplingState){let ranges=[];for(const range of e.ranges){const minimapLineRange=this._samplingState.modelLineRangeToMinimapLineRange(range.fromLineNumber,range.toLineNumber);minimapLineRange&&ranges.push({fromLineNumber:minimapLineRange[0],toLineNumber:minimapLineRange[1]})}return!!ranges.length&&this._actual.onTokensChanged(ranges)}return this._actual.onTokensChanged(e.ranges)}onTokensColorsChanged(e){return this._onOptionsMaybeChanged(),this._actual.onTokensColorsChanged()}onZonesChanged(e){return this._actual.onZonesChanged()}
// --- end event handlers
prepareRender(ctx){this._shouldCheckSampling&&(this._shouldCheckSampling=!1,this._recreateLineSampling())}render(ctx){let viewportStartLineNumber=ctx.visibleRange.startLineNumber,viewportEndLineNumber=ctx.visibleRange.endLineNumber;this._samplingState&&(viewportStartLineNumber=this._samplingState.modelLineToMinimapLine(viewportStartLineNumber),viewportEndLineNumber=this._samplingState.modelLineToMinimapLine(viewportEndLineNumber));const minimapCtx={viewportContainsWhitespaceGaps:ctx.viewportData.whitespaceViewportData.length>0,scrollWidth:ctx.scrollWidth,scrollHeight:ctx.scrollHeight,viewportStartLineNumber:viewportStartLineNumber,viewportEndLineNumber:viewportEndLineNumber,viewportStartLineNumberVerticalOffset:ctx.getVerticalOffsetForLineNumber(viewportStartLineNumber),scrollTop:ctx.scrollTop,scrollLeft:ctx.scrollLeft,viewportWidth:ctx.viewportWidth,viewportHeight:ctx.viewportHeight};this._actual.render(minimapCtx)}
//#region IMinimapModel
_recreateLineSampling(){this._minimapSelections=null;const wasSampling=Boolean(this._samplingState),[samplingState,events]=MinimapSamplingState.compute(this.options,this._context.model.getLineCount(),this._samplingState);if(this._samplingState=samplingState,wasSampling&&this._samplingState)
// was sampling, is sampling
for(const event of events)switch(event.type){case"deleted":this._actual.onLinesDeleted(event.deleteFromLineNumber,event.deleteToLineNumber);break;case"inserted":this._actual.onLinesInserted(event.insertFromLineNumber,event.insertToLineNumber);break;case"flush":this._actual.onFlushed();break}}getLineCount(){return this._samplingState?this._samplingState.minimapLines.length:this._context.model.getLineCount()}getRealLineCount(){return this._context.model.getLineCount()}getLineContent(lineNumber){return this._samplingState?this._context.model.getLineContent(this._samplingState.minimapLines[lineNumber-1]):this._context.model.getLineContent(lineNumber)}getLineMaxColumn(lineNumber){return this._samplingState?this._context.model.getLineMaxColumn(this._samplingState.minimapLines[lineNumber-1]):this._context.model.getLineMaxColumn(lineNumber)}getMinimapLinesRenderingData(startLineNumber,endLineNumber,needed){if(this._samplingState){let result=[];for(let lineIndex=0,lineCount=endLineNumber-startLineNumber+1;lineIndex<lineCount;lineIndex++)needed[lineIndex]?result[lineIndex]=this._context.model.getViewLineData(this._samplingState.minimapLines[startLineNumber+lineIndex-1]):result[lineIndex]=null;return result}return this._context.model.getMinimapLinesRenderingData(startLineNumber,endLineNumber,needed).data}getSelections(){if(null===this._minimapSelections)if(this._samplingState){this._minimapSelections=[];for(const selection of this._selections){const[minimapLineStart,minimapLineEnd]=this._samplingState.decorationLineRangeToMinimapLineRange(selection.startLineNumber,selection.endLineNumber);this._minimapSelections.push(new core_selection/* Selection */.Y(minimapLineStart,selection.startColumn,minimapLineEnd,selection.endColumn))}}else this._minimapSelections=this._selections;return this._minimapSelections}getMinimapDecorationsInViewport(startLineNumber,endLineNumber){let visibleRange;if(this._samplingState){const modelStartLineNumber=this._samplingState.minimapLines[startLineNumber-1],modelEndLineNumber=this._samplingState.minimapLines[endLineNumber-1];visibleRange=new core_range/* Range */.e(modelStartLineNumber,1,modelEndLineNumber,this._context.model.getLineMaxColumn(modelEndLineNumber))}else visibleRange=new core_range/* Range */.e(startLineNumber,1,endLineNumber,this._context.model.getLineMaxColumn(endLineNumber));const decorations=this._context.model.getDecorationsInViewport(visibleRange);if(this._samplingState){let result=[];for(const decoration of decorations){if(!decoration.options.minimap)continue;const range=decoration.range,minimapStartLineNumber=this._samplingState.modelLineToMinimapLine(range.startLineNumber),minimapEndLineNumber=this._samplingState.modelLineToMinimapLine(range.endLineNumber);result.push(new viewModel/* ViewModelDecoration */.$l(new core_range/* Range */.e(minimapStartLineNumber,range.startColumn,minimapEndLineNumber,range.endColumn),decoration.options))}return result}return decorations}getOptions(){return this._context.model.getTextModelOptions()}revealLineNumber(lineNumber){this._samplingState&&(lineNumber=this._samplingState.minimapLines[lineNumber-1]),this._context.model.revealRange("mouse",!1,new core_range/* Range */.e(lineNumber,1,lineNumber,1),1/* Center */,0/* Smooth */)}setScrollTop(scrollTop){this._context.model.setScrollPosition({scrollTop:scrollTop},1/* Immediate */)}}class InnerMinimap extends lifecycle/* Disposable */.JT{constructor(theme,model){super(),this._renderDecorations=!1,this._gestureInProgress=!1,this._theme=theme,this._model=model,this._lastRenderData=null,this._buffers=null,this._selectionColor=this._theme.getColor(colorRegistry/* minimapSelection */.ov),this._domNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),PartFingerprints.write(this._domNode,8/* Minimap */),this._domNode.setClassName(this._getMinimapDomNodeClassName()),this._domNode.setPosition("absolute"),this._domNode.setAttribute("role","presentation"),this._domNode.setAttribute("aria-hidden","true"),this._shadow=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this._shadow.setClassName("minimap-shadow-hidden"),this._domNode.appendChild(this._shadow),this._canvas=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("canvas")),this._canvas.setPosition("absolute"),this._canvas.setLeft(0),this._domNode.appendChild(this._canvas),this._decorationsCanvas=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("canvas")),this._decorationsCanvas.setPosition("absolute"),this._decorationsCanvas.setClassName("minimap-decorations-layer"),this._decorationsCanvas.setLeft(0),this._domNode.appendChild(this._decorationsCanvas),this._slider=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this._slider.setPosition("absolute"),this._slider.setClassName("minimap-slider"),this._slider.setLayerHinting(!0),this._slider.setContain("strict"),this._domNode.appendChild(this._slider),this._sliderHorizontal=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this._sliderHorizontal.setPosition("absolute"),this._sliderHorizontal.setClassName("minimap-slider-horizontal"),this._slider.appendChild(this._sliderHorizontal),this._applyLayout(),this._mouseDownListener=dom/* addStandardDisposableListener */.mu(this._domNode.domNode,"mousedown",(e=>{e.preventDefault();const renderMinimap=this._model.options.renderMinimap;if(0/* None */===renderMinimap)return;if(!this._lastRenderData)return;if("proportional"!==this._model.options.size){if(e.leftButton&&this._lastRenderData){
// pretend the click occurred in the center of the slider
const position=dom/* getDomNodePagePosition */.i(this._slider.domNode),initialPosY=position.top+position.height/2;this._startSliderDragging(e.buttons,e.posx,initialPosY,e.posy,this._lastRenderData.renderedLayout)}return}const minimapLineHeight=this._model.options.minimapLineHeight,internalOffsetY=this._model.options.canvasInnerHeight/this._model.options.canvasOuterHeight*e.browserEvent.offsetY,lineIndex=Math.floor(internalOffsetY/minimapLineHeight);let lineNumber=lineIndex+this._lastRenderData.renderedLayout.startLineNumber;lineNumber=Math.min(lineNumber,this._model.getLineCount()),this._model.revealLineNumber(lineNumber)})),this._sliderMouseMoveMonitor=new globalMouseMoveMonitor/* GlobalMouseMoveMonitor */.Z,this._sliderMouseDownListener=dom/* addStandardDisposableListener */.mu(this._slider.domNode,"mousedown",(e=>{e.preventDefault(),e.stopPropagation(),e.leftButton&&this._lastRenderData&&this._startSliderDragging(e.buttons,e.posx,e.posy,e.posy,this._lastRenderData.renderedLayout)})),this._gestureDisposable=touch/* Gesture */.o.addTarget(this._domNode.domNode),this._sliderTouchStartListener=dom/* addDisposableListener */.nm(this._domNode.domNode,touch/* EventType */.t.Start,(e=>{e.preventDefault(),e.stopPropagation(),this._lastRenderData&&(this._slider.toggleClassName("active",!0),this._gestureInProgress=!0,this.scrollDueToTouchEvent(e))}),{passive:!1}),this._sliderTouchMoveListener=dom/* addDisposableListener */.nm(this._domNode.domNode,touch/* EventType */.t.Change,(e=>{e.preventDefault(),e.stopPropagation(),this._lastRenderData&&this._gestureInProgress&&this.scrollDueToTouchEvent(e)}),{passive:!1}),this._sliderTouchEndListener=dom/* addStandardDisposableListener */.mu(this._domNode.domNode,touch/* EventType */.t.End,(e=>{e.preventDefault(),e.stopPropagation(),this._gestureInProgress=!1,this._slider.toggleClassName("active",!1)}))}_startSliderDragging(initialButtons,initialPosX,initialPosY,posy,initialSliderState){this._slider.toggleClassName("active",!0);const handleMouseMove=(posy,posx)=>{const mouseOrthogonalDelta=Math.abs(posx-initialPosX);if(platform/* isWindows */.ED&&mouseOrthogonalDelta>MOUSE_DRAG_RESET_DISTANCE)
// The mouse has wondered away from the scrollbar => reset dragging
return void this._model.setScrollTop(initialSliderState.scrollTop);const mouseDelta=posy-initialPosY;this._model.setScrollTop(initialSliderState.getDesiredScrollTopFromDelta(mouseDelta))};posy!==initialPosY&&handleMouseMove(posy,initialPosX),this._sliderMouseMoveMonitor.startMonitoring(this._slider.domNode,initialButtons,globalMouseMoveMonitor/* standardMouseMoveMerger */.e,(mouseMoveData=>handleMouseMove(mouseMoveData.posy,mouseMoveData.posx)),(()=>{this._slider.toggleClassName("active",!1)}))}scrollDueToTouchEvent(touch){const startY=this._domNode.domNode.getBoundingClientRect().top,scrollTop=this._lastRenderData.renderedLayout.getDesiredScrollTopFromTouchLocation(touch.pageY-startY);this._model.setScrollTop(scrollTop)}dispose(){this._mouseDownListener.dispose(),this._sliderMouseMoveMonitor.dispose(),this._sliderMouseDownListener.dispose(),this._gestureDisposable.dispose(),this._sliderTouchStartListener.dispose(),this._sliderTouchMoveListener.dispose(),this._sliderTouchEndListener.dispose(),super.dispose()}_getMinimapDomNodeClassName(){return"always"===this._model.options.showSlider?"minimap slider-always":"minimap slider-mouseover"}getDomNode(){return this._domNode}_applyLayout(){this._domNode.setLeft(this._model.options.minimapLeft),this._domNode.setWidth(this._model.options.minimapWidth),this._domNode.setHeight(this._model.options.minimapHeight),this._shadow.setHeight(this._model.options.minimapHeight),this._canvas.setWidth(this._model.options.canvasOuterWidth),this._canvas.setHeight(this._model.options.canvasOuterHeight),this._canvas.domNode.width=this._model.options.canvasInnerWidth,this._canvas.domNode.height=this._model.options.canvasInnerHeight,this._decorationsCanvas.setWidth(this._model.options.canvasOuterWidth),this._decorationsCanvas.setHeight(this._model.options.canvasOuterHeight),this._decorationsCanvas.domNode.width=this._model.options.canvasInnerWidth,this._decorationsCanvas.domNode.height=this._model.options.canvasInnerHeight,this._slider.setWidth(this._model.options.minimapWidth)}_getBuffer(){return this._buffers||this._model.options.canvasInnerWidth>0&&this._model.options.canvasInnerHeight>0&&(this._buffers=new MinimapBuffers(this._canvas.domNode.getContext("2d"),this._model.options.canvasInnerWidth,this._model.options.canvasInnerHeight,this._model.options.backgroundColor)),this._buffers?this._buffers.getBuffer():null}
// ---- begin view event handlers
onDidChangeOptions(){this._lastRenderData=null,this._buffers=null,this._applyLayout(),this._domNode.setClassName(this._getMinimapDomNodeClassName())}onSelectionChanged(){return this._renderDecorations=!0,!0}onDecorationsChanged(){return this._renderDecorations=!0,!0}onFlushed(){return this._lastRenderData=null,!0}onLinesChanged(changeFromLineNumber,changeToLineNumber){return!!this._lastRenderData&&this._lastRenderData.onLinesChanged(changeFromLineNumber,changeToLineNumber)}onLinesDeleted(deleteFromLineNumber,deleteToLineNumber){return this._lastRenderData&&this._lastRenderData.onLinesDeleted(deleteFromLineNumber,deleteToLineNumber),!0}onLinesInserted(insertFromLineNumber,insertToLineNumber){return this._lastRenderData&&this._lastRenderData.onLinesInserted(insertFromLineNumber,insertToLineNumber),!0}onScrollChanged(){return this._renderDecorations=!0,!0}onThemeChanged(){return this._selectionColor=this._theme.getColor(colorRegistry/* minimapSelection */.ov),this._renderDecorations=!0,!0}onTokensChanged(ranges){return!!this._lastRenderData&&this._lastRenderData.onTokensChanged(ranges)}onTokensColorsChanged(){return this._lastRenderData=null,this._buffers=null,!0}onZonesChanged(){return this._lastRenderData=null,!0}
// --- end event handlers
render(renderingCtx){const renderMinimap=this._model.options.renderMinimap;if(0/* None */===renderMinimap)return this._shadow.setClassName("minimap-shadow-hidden"),this._sliderHorizontal.setWidth(0),void this._sliderHorizontal.setHeight(0);renderingCtx.scrollLeft+renderingCtx.viewportWidth>=renderingCtx.scrollWidth?this._shadow.setClassName("minimap-shadow-hidden"):this._shadow.setClassName("minimap-shadow-visible");const layout=MinimapLayout.create(this._model.options,renderingCtx.viewportStartLineNumber,renderingCtx.viewportEndLineNumber,renderingCtx.viewportStartLineNumberVerticalOffset,renderingCtx.viewportHeight,renderingCtx.viewportContainsWhitespaceGaps,this._model.getLineCount(),this._model.getRealLineCount(),renderingCtx.scrollTop,renderingCtx.scrollHeight,this._lastRenderData?this._lastRenderData.renderedLayout:null);this._slider.setDisplay(layout.sliderNeeded?"block":"none"),this._slider.setTop(layout.sliderTop),this._slider.setHeight(layout.sliderHeight),
// Compute horizontal slider coordinates
this._sliderHorizontal.setLeft(0),this._sliderHorizontal.setWidth(this._model.options.minimapWidth),this._sliderHorizontal.setTop(0),this._sliderHorizontal.setHeight(layout.sliderHeight),this.renderDecorations(layout),this._lastRenderData=this.renderLines(layout)}renderDecorations(layout){if(this._renderDecorations){this._renderDecorations=!1;const selections=this._model.getSelections();selections.sort(core_range/* Range */.e.compareRangesUsingStarts);const decorations=this._model.getMinimapDecorationsInViewport(layout.startLineNumber,layout.endLineNumber);decorations.sort(((a,b)=>(a.options.zIndex||0)-(b.options.zIndex||0)));const{canvasInnerWidth:canvasInnerWidth,canvasInnerHeight:canvasInnerHeight}=this._model.options,lineHeight=this._model.options.minimapLineHeight,characterWidth=this._model.options.minimapCharWidth,tabSize=this._model.getOptions().tabSize,canvasContext=this._decorationsCanvas.domNode.getContext("2d");canvasContext.clearRect(0,0,canvasInnerWidth,canvasInnerHeight);
// We first need to render line highlights and then render decorations on top of those.
// But we need to pick a single color for each line, and use that as a line highlight.
// This needs to be the color of the decoration with the highest `zIndex`, but priority
// is given to the selection.
const highlightedLines=new ContiguousLineMap(layout.startLineNumber,layout.endLineNumber,!1);this._renderSelectionLineHighlights(canvasContext,selections,highlightedLines,layout,lineHeight),this._renderDecorationsLineHighlights(canvasContext,decorations,highlightedLines,layout,lineHeight);const lineOffsetMap=new ContiguousLineMap(layout.startLineNumber,layout.endLineNumber,null);this._renderSelectionsHighlights(canvasContext,selections,lineOffsetMap,layout,lineHeight,tabSize,characterWidth,canvasInnerWidth),this._renderDecorationsHighlights(canvasContext,decorations,lineOffsetMap,layout,lineHeight,tabSize,characterWidth,canvasInnerWidth)}}_renderSelectionLineHighlights(canvasContext,selections,highlightedLines,layout,lineHeight){if(!this._selectionColor||this._selectionColor.isTransparent())return;canvasContext.fillStyle=this._selectionColor.transparent(.5).toString();let y1=0,y2=0;for(const selection of selections){const startLineNumber=Math.max(layout.startLineNumber,selection.startLineNumber),endLineNumber=Math.min(layout.endLineNumber,selection.endLineNumber);if(startLineNumber>endLineNumber)
// entirely outside minimap's viewport
continue;for(let line=startLineNumber;line<=endLineNumber;line++)highlightedLines.set(line,!0);const yy1=(startLineNumber-layout.startLineNumber)*lineHeight,yy2=(endLineNumber-layout.startLineNumber)*lineHeight+lineHeight;y2>=yy1||(y2>y1&&
// flush
canvasContext.fillRect(editorOptions/* MINIMAP_GUTTER_WIDTH */.y0,y1,canvasContext.canvas.width,y2-y1),y1=yy1),
// merge into previous
y2=yy2}y2>y1&&
// flush
canvasContext.fillRect(editorOptions/* MINIMAP_GUTTER_WIDTH */.y0,y1,canvasContext.canvas.width,y2-y1)}_renderDecorationsLineHighlights(canvasContext,decorations,highlightedLines,layout,lineHeight){const highlightColors=new Map;
// Loop backwards to hit first decorations with higher `zIndex`
for(let i=decorations.length-1;i>=0;i--){const decoration=decorations[i],minimapOptions=decoration.options.minimap;if(!minimapOptions||minimapOptions.position!==model/* MinimapPosition */.F5.Inline)continue;const startLineNumber=Math.max(layout.startLineNumber,decoration.range.startLineNumber),endLineNumber=Math.min(layout.endLineNumber,decoration.range.endLineNumber);if(startLineNumber>endLineNumber)
// entirely outside minimap's viewport
continue;const decorationColor=minimapOptions.getColor(this._theme);if(!decorationColor||decorationColor.isTransparent())continue;let highlightColor=highlightColors.get(decorationColor.toString());highlightColor||(highlightColor=decorationColor.transparent(.5).toString(),highlightColors.set(decorationColor.toString(),highlightColor)),canvasContext.fillStyle=highlightColor;for(let line=startLineNumber;line<=endLineNumber;line++){if(highlightedLines.has(line))continue;highlightedLines.set(line,!0);const y=(startLineNumber-layout.startLineNumber)*lineHeight;canvasContext.fillRect(editorOptions/* MINIMAP_GUTTER_WIDTH */.y0,y,canvasContext.canvas.width,lineHeight)}}}_renderSelectionsHighlights(canvasContext,selections,lineOffsetMap,layout,lineHeight,tabSize,characterWidth,canvasInnerWidth){if(this._selectionColor&&!this._selectionColor.isTransparent())for(const selection of selections){const startLineNumber=Math.max(layout.startLineNumber,selection.startLineNumber),endLineNumber=Math.min(layout.endLineNumber,selection.endLineNumber);if(!(startLineNumber>endLineNumber))for(let line=startLineNumber;line<=endLineNumber;line++)this.renderDecorationOnLine(canvasContext,lineOffsetMap,selection,this._selectionColor,layout,line,lineHeight,lineHeight,tabSize,characterWidth,canvasInnerWidth)}}_renderDecorationsHighlights(canvasContext,decorations,lineOffsetMap,layout,lineHeight,tabSize,characterWidth,canvasInnerWidth){
// Loop forwards to hit first decorations with lower `zIndex`
for(const decoration of decorations){const minimapOptions=decoration.options.minimap;if(!minimapOptions)continue;const startLineNumber=Math.max(layout.startLineNumber,decoration.range.startLineNumber),endLineNumber=Math.min(layout.endLineNumber,decoration.range.endLineNumber);if(startLineNumber>endLineNumber)
// entirely outside minimap's viewport
continue;const decorationColor=minimapOptions.getColor(this._theme);if(decorationColor&&!decorationColor.isTransparent())for(let line=startLineNumber;line<=endLineNumber;line++)switch(minimapOptions.position){case model/* MinimapPosition */.F5.Inline:this.renderDecorationOnLine(canvasContext,lineOffsetMap,decoration.range,decorationColor,layout,line,lineHeight,lineHeight,tabSize,characterWidth,canvasInnerWidth);continue;case model/* MinimapPosition */.F5.Gutter:const y=(line-layout.startLineNumber)*lineHeight,x=2;this.renderDecoration(canvasContext,decorationColor,x,y,GUTTER_DECORATION_WIDTH,lineHeight);continue}}}renderDecorationOnLine(canvasContext,lineOffsetMap,decorationRange,decorationColor,layout,lineNumber,height,lineHeight,tabSize,charWidth,canvasInnerWidth){const y=(lineNumber-layout.startLineNumber)*lineHeight;
// Skip rendering the line if it's vertically outside our viewport
if(y+height<0||y>this._model.options.canvasInnerHeight)return;const{startLineNumber:startLineNumber,endLineNumber:endLineNumber}=decorationRange,startColumn=startLineNumber===lineNumber?decorationRange.startColumn:1,endColumn=endLineNumber===lineNumber?decorationRange.endColumn:this._model.getLineMaxColumn(lineNumber),x1=this.getXOffsetForPosition(lineOffsetMap,lineNumber,startColumn,tabSize,charWidth,canvasInnerWidth),x2=this.getXOffsetForPosition(lineOffsetMap,lineNumber,endColumn,tabSize,charWidth,canvasInnerWidth);this.renderDecoration(canvasContext,decorationColor,x1,y,x2-x1,height)}getXOffsetForPosition(lineOffsetMap,lineNumber,column,tabSize,charWidth,canvasInnerWidth){if(1===column)return editorOptions/* MINIMAP_GUTTER_WIDTH */.y0;const minimumXOffset=(column-1)*charWidth;if(minimumXOffset>=canvasInnerWidth)
// there is no need to look at actual characters,
// as this column is certainly after the minimap width
return canvasInnerWidth;
// Cache line offset data so that it is only read once per line
let lineIndexToXOffset=lineOffsetMap.get(lineNumber);if(!lineIndexToXOffset){const lineData=this._model.getLineContent(lineNumber);lineIndexToXOffset=[editorOptions/* MINIMAP_GUTTER_WIDTH */.y0];let prevx=editorOptions/* MINIMAP_GUTTER_WIDTH */.y0;for(let i=1;i<lineData.length+1;i++){const charCode=lineData.charCodeAt(i-1),dx=9/* Tab */===charCode?tabSize*charWidth:strings/* isFullWidthCharacter */.K7(charCode)?2*charWidth:charWidth,x=prevx+dx;if(x>=canvasInnerWidth){
// no need to keep on going, as we've hit the canvas width
lineIndexToXOffset[i]=canvasInnerWidth;break}lineIndexToXOffset[i]=x,prevx=x}lineOffsetMap.set(lineNumber,lineIndexToXOffset)}return column-1<lineIndexToXOffset.length?lineIndexToXOffset[column-1]:canvasInnerWidth;
// goes over the canvas width
}renderDecoration(canvasContext,decorationColor,x,y,width,height){canvasContext.fillStyle=decorationColor&&decorationColor.toString()||"",canvasContext.fillRect(x,y,width,height)}renderLines(layout){const startLineNumber=layout.startLineNumber,endLineNumber=layout.endLineNumber,minimapLineHeight=this._model.options.minimapLineHeight;
// Check if nothing changed w.r.t. lines from last frame
if(this._lastRenderData&&this._lastRenderData.linesEquals(layout)){const _lastData=this._lastRenderData._get();
// Nice!! Nothing changed from last frame
return new RenderData(layout,_lastData.imageData,_lastData.lines)}
// Oh well!! We need to repaint some lines...
const imageData=this._getBuffer();if(!imageData)
// 0 width or 0 height canvas, nothing to do
return null;
// Render untouched lines by using last rendered data.
let[_dirtyY1,_dirtyY2,needed]=InnerMinimap._renderUntouchedLines(imageData,startLineNumber,endLineNumber,minimapLineHeight,this._lastRenderData);
// Fetch rendering info from view model for rest of lines that need rendering.
const lineInfo=this._model.getMinimapLinesRenderingData(startLineNumber,endLineNumber,needed),tabSize=this._model.getOptions().tabSize,defaultBackground=this._model.options.defaultBackgroundColor,background=this._model.options.backgroundColor,foregroundAlpha=this._model.options.foregroundAlpha,tokensColorTracker=this._model.tokensColorTracker,useLighterFont=tokensColorTracker.backgroundIsLight(),renderMinimap=this._model.options.renderMinimap,charRenderer=this._model.options.charRenderer(),fontScale=this._model.options.fontScale,minimapCharWidth=this._model.options.minimapCharWidth,baseCharHeight=1/* Text */===renderMinimap?2/* BASE_CHAR_HEIGHT */:3,renderMinimapLineHeight=baseCharHeight*fontScale,innerLinePadding=minimapLineHeight>renderMinimapLineHeight?Math.floor((minimapLineHeight-renderMinimapLineHeight)/2):0,backgroundA=background.a/255,renderBackground=new rgba/* RGBA8 */.h(Math.round((background.r-defaultBackground.r)*backgroundA+defaultBackground.r),Math.round((background.g-defaultBackground.g)*backgroundA+defaultBackground.g),Math.round((background.b-defaultBackground.b)*backgroundA+defaultBackground.b),255);let dy=0;const renderedLines=[];for(let lineIndex=0,lineCount=endLineNumber-startLineNumber+1;lineIndex<lineCount;lineIndex++)needed[lineIndex]&&InnerMinimap._renderLine(imageData,renderBackground,background.a,useLighterFont,renderMinimap,minimapCharWidth,tokensColorTracker,foregroundAlpha,charRenderer,dy,innerLinePadding,tabSize,lineInfo[lineIndex],fontScale,minimapLineHeight),renderedLines[lineIndex]=new MinimapLine(dy),dy+=minimapLineHeight;const dirtyY1=-1===_dirtyY1?0:_dirtyY1,dirtyY2=-1===_dirtyY2?imageData.height:_dirtyY2,dirtyHeight=dirtyY2-dirtyY1,ctx=this._canvas.domNode.getContext("2d");
// Save rendered data for reuse on next frame if possible
return ctx.putImageData(imageData,0,0,0,dirtyY1,imageData.width,dirtyHeight),new RenderData(layout,imageData,renderedLines)}static _renderUntouchedLines(target,startLineNumber,endLineNumber,minimapLineHeight,lastRenderData){const needed=[];if(!lastRenderData){for(let i=0,len=endLineNumber-startLineNumber+1;i<len;i++)needed[i]=!0;return[-1,-1,needed]}const _lastData=lastRenderData._get(),lastTargetData=_lastData.imageData.data,lastStartLineNumber=_lastData.rendLineNumberStart,lastLines=_lastData.lines,lastLinesLength=lastLines.length,WIDTH=target.width,targetData=target.data,maxDestPixel=(endLineNumber-startLineNumber+1)*minimapLineHeight*WIDTH*4;let dirtyPixel1=-1,dirtyPixel2=-1,copySourceStart=-1,copySourceEnd=-1,copyDestStart=-1,copyDestEnd=-1,dest_dy=0;// the pixel offset up to which all the data is equal to the prev frame
for(let lineNumber=startLineNumber;lineNumber<=endLineNumber;lineNumber++){const lineIndex=lineNumber-startLineNumber,lastLineIndex=lineNumber-lastStartLineNumber,source_dy=lastLineIndex>=0&&lastLineIndex<lastLinesLength?lastLines[lastLineIndex].dy:-1;if(-1===source_dy){needed[lineIndex]=!0,dest_dy+=minimapLineHeight;continue}const sourceStart=source_dy*WIDTH*4,sourceEnd=(source_dy+minimapLineHeight)*WIDTH*4,destStart=dest_dy*WIDTH*4,destEnd=(dest_dy+minimapLineHeight)*WIDTH*4;copySourceEnd===sourceStart&&copyDestEnd===destStart?(
// contiguous zone => extend copy request
copySourceEnd=sourceEnd,copyDestEnd=destEnd):(-1!==copySourceStart&&(
// flush existing copy request
targetData.set(lastTargetData.subarray(copySourceStart,copySourceEnd),copyDestStart),-1===dirtyPixel1&&0===copySourceStart&&copySourceStart===copyDestStart&&(dirtyPixel1=copySourceEnd),-1===dirtyPixel2&&copySourceEnd===maxDestPixel&&copySourceStart===copyDestStart&&(dirtyPixel2=copySourceStart)),copySourceStart=sourceStart,copySourceEnd=sourceEnd,copyDestStart=destStart,copyDestEnd=destEnd),needed[lineIndex]=!1,dest_dy+=minimapLineHeight}-1!==copySourceStart&&(
// flush existing copy request
targetData.set(lastTargetData.subarray(copySourceStart,copySourceEnd),copyDestStart),-1===dirtyPixel1&&0===copySourceStart&&copySourceStart===copyDestStart&&(dirtyPixel1=copySourceEnd),-1===dirtyPixel2&&copySourceEnd===maxDestPixel&&copySourceStart===copyDestStart&&(dirtyPixel2=copySourceStart));const dirtyY1=-1===dirtyPixel1?-1:dirtyPixel1/(4*WIDTH),dirtyY2=-1===dirtyPixel2?-1:dirtyPixel2/(4*WIDTH);return[dirtyY1,dirtyY2,needed]}static _renderLine(target,backgroundColor,backgroundAlpha,useLighterFont,renderMinimap,charWidth,colorTracker,foregroundAlpha,minimapCharRenderer,dy,innerLinePadding,tabSize,lineData,fontScale,minimapLineHeight){const content=lineData.content,tokens=lineData.tokens,maxDx=target.width-charWidth,force1pxHeight=1===minimapLineHeight;let dx=editorOptions/* MINIMAP_GUTTER_WIDTH */.y0,charIndex=0,tabsCharDelta=0;for(let tokenIndex=0,tokensLen=tokens.getCount();tokenIndex<tokensLen;tokenIndex++){const tokenEndIndex=tokens.getEndOffset(tokenIndex),tokenColorId=tokens.getForeground(tokenIndex),tokenColor=colorTracker.getColor(tokenColorId);for(;charIndex<tokenEndIndex;charIndex++){if(dx>maxDx)
// hit edge of minimap
return;const charCode=content.charCodeAt(charIndex);if(9/* Tab */===charCode){const insertSpacesCount=tabSize-(charIndex+tabsCharDelta)%tabSize;tabsCharDelta+=insertSpacesCount-1,
// No need to render anything since tab is invisible
dx+=insertSpacesCount*charWidth}else if(32/* Space */===charCode)
// No need to render anything since space is invisible
dx+=charWidth;else{
// Render twice for a full width character
const count=strings/* isFullWidthCharacter */.K7(charCode)?2:1;for(let i=0;i<count;i++)if(2/* Blocks */===renderMinimap?minimapCharRenderer.blockRenderChar(target,dx,dy+innerLinePadding,tokenColor,foregroundAlpha,backgroundColor,backgroundAlpha,force1pxHeight):// RenderMinimap.Text
minimapCharRenderer.renderChar(target,dx,dy+innerLinePadding,charCode,tokenColor,foregroundAlpha,backgroundColor,backgroundAlpha,fontScale,useLighterFont,force1pxHeight),dx+=charWidth,dx>maxDx)
// hit edge of minimap
return}}}}}class ContiguousLineMap{constructor(startLineNumber,endLineNumber,defaultValue){this._startLineNumber=startLineNumber,this._endLineNumber=endLineNumber,this._defaultValue=defaultValue,this._values=[];for(let i=0,count=this._endLineNumber-this._startLineNumber+1;i<count;i++)this._values[i]=defaultValue}has(lineNumber){return this.get(lineNumber)!==this._defaultValue}set(lineNumber,value){lineNumber<this._startLineNumber||lineNumber>this._endLineNumber||(this._values[lineNumber-this._startLineNumber]=value)}get(lineNumber){return lineNumber<this._startLineNumber||lineNumber>this._endLineNumber?this._defaultValue:this._values[lineNumber-this._startLineNumber]}}(0,themeService/* registerThemingParticipant */.Ic)(((theme,collector)=>{const sliderBackground=theme.getColor(colorRegistry/* minimapSliderBackground */.CA);sliderBackground&&collector.addRule(`.monaco-editor .minimap-slider .minimap-slider-horizontal { background: ${sliderBackground}; }`);const sliderHoverBackground=theme.getColor(colorRegistry/* minimapSliderHoverBackground */.Xy);sliderHoverBackground&&collector.addRule(`.monaco-editor .minimap-slider:hover .minimap-slider-horizontal { background: ${sliderHoverBackground}; }`);const sliderActiveBackground=theme.getColor(colorRegistry/* minimapSliderActiveBackground */.br);sliderActiveBackground&&collector.addRule(`.monaco-editor .minimap-slider.active .minimap-slider-horizontal { background: ${sliderActiveBackground}; }`);const shadow=theme.getColor(colorRegistry/* scrollbarShadow */._w);shadow&&collector.addRule(`.monaco-editor .minimap-shadow-visible { box-shadow: ${shadow} -6px 0 6px -6px inset; }`)}));// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class ViewOverlayWidgets extends ViewPart{constructor(context){super(context);const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);this._widgets={},this._verticalScrollbarWidth=layoutInfo.verticalScrollbarWidth,this._minimapWidth=layoutInfo.minimap.minimapWidth,this._horizontalScrollbarHeight=layoutInfo.horizontalScrollbarHeight,this._editorHeight=layoutInfo.height,this._editorWidth=layoutInfo.width,this._domNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),PartFingerprints.write(this._domNode,4/* OverlayWidgets */),this._domNode.setClassName("overlayWidgets")}dispose(){super.dispose(),this._widgets={}}getDomNode(){return this._domNode}
// ---- begin view event handlers
onConfigurationChanged(e){const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);return this._verticalScrollbarWidth=layoutInfo.verticalScrollbarWidth,this._minimapWidth=layoutInfo.minimap.minimapWidth,this._horizontalScrollbarHeight=layoutInfo.horizontalScrollbarHeight,this._editorHeight=layoutInfo.height,this._editorWidth=layoutInfo.width,!0}
// ---- end view event handlers
addWidget(widget){const domNode=(0,fastDomNode/* createFastDomNode */.X)(widget.getDomNode());this._widgets[widget.getId()]={widget:widget,preference:null,domNode:domNode},
// This is sync because a widget wants to be in the dom
domNode.setPosition("absolute"),domNode.setAttribute("widgetId",widget.getId()),this._domNode.appendChild(domNode),this.setShouldRender()}setWidgetPosition(widget,preference){const widgetData=this._widgets[widget.getId()];return widgetData.preference!==preference&&(widgetData.preference=preference,this.setShouldRender(),!0)}removeWidget(widget){const widgetId=widget.getId();if(this._widgets.hasOwnProperty(widgetId)){const widgetData=this._widgets[widgetId],domNode=widgetData.domNode.domNode;delete this._widgets[widgetId],domNode.parentNode.removeChild(domNode),this.setShouldRender()}}_renderWidget(widgetData){const domNode=widgetData.domNode;if(null!==widgetData.preference)if(0/* TOP_RIGHT_CORNER */===widgetData.preference)domNode.setTop(0),domNode.setRight(2*this._verticalScrollbarWidth+this._minimapWidth);else if(1/* BOTTOM_RIGHT_CORNER */===widgetData.preference){const widgetHeight=domNode.domNode.clientHeight;domNode.setTop(this._editorHeight-widgetHeight-2*this._horizontalScrollbarHeight),domNode.setRight(2*this._verticalScrollbarWidth+this._minimapWidth)}else 2/* TOP_CENTER */===widgetData.preference&&(domNode.setTop(0),domNode.domNode.style.right="50%");else domNode.unsetTop()}prepareRender(ctx){
// Nothing to read
}render(ctx){this._domNode.setWidth(this._editorWidth);const keys=Object.keys(this._widgets);for(let i=0,len=keys.length;i<len;i++){const widgetId=keys[i];this._renderWidget(this._widgets[widgetId])}}}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/base/common/color.js
var color=__webpack_require__(41264),modes=__webpack_require__(860303);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/modes.js + 1 modules
// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class Settings{constructor(config,theme){const options=config.options;this.lineHeight=options.get(58/* lineHeight */),this.pixelRatio=options.get(127/* pixelRatio */),this.overviewRulerLanes=options.get(73/* overviewRulerLanes */),this.renderBorder=options.get(72/* overviewRulerBorder */);const borderColor=theme.getColor(editorColorRegistry/* editorOverviewRulerBorder */.zw);this.borderColor=borderColor?borderColor.toString():null,this.hideCursor=options.get(51/* hideCursorInOverviewRuler */);const cursorColor=theme.getColor(editorColorRegistry/* editorCursorForeground */.n0);this.cursorColor=cursorColor?cursorColor.transparent(.7).toString():null,this.themeType=theme.type;const minimapOpts=options.get(64/* minimap */),minimapEnabled=minimapOpts.enabled,minimapSide=minimapOpts.side,backgroundColor=minimapEnabled?theme.getColor(editorColorRegistry/* editorOverviewRulerBackground */.e_)||modes/* TokenizationRegistry */.RW.getDefaultBackground():null;this.backgroundColor=null===backgroundColor||"left"===minimapSide?null:color/* Color */.Il.Format.CSS.formatHex(backgroundColor);const layoutInfo=options.get(129/* layoutInfo */),position=layoutInfo.overviewRuler;this.top=position.top,this.right=position.right,this.domWidth=position.width,this.domHeight=position.height,0===this.overviewRulerLanes?(
// overview ruler is off
this.canvasWidth=0,this.canvasHeight=0):(this.canvasWidth=this.domWidth*this.pixelRatio|0,this.canvasHeight=this.domHeight*this.pixelRatio|0);const[x,w]=this._initLanes(1,this.canvasWidth,this.overviewRulerLanes);this.x=x,this.w=w}_initLanes(canvasLeftOffset,canvasWidth,laneCount){const remainingWidth=canvasWidth-canvasLeftOffset;if(laneCount>=3){const leftWidth=Math.floor(remainingWidth/3),rightWidth=Math.floor(remainingWidth/3),centerWidth=remainingWidth-leftWidth-rightWidth,leftOffset=canvasLeftOffset,centerOffset=leftOffset+leftWidth,rightOffset=leftOffset+leftWidth+centerWidth;return[[0,leftOffset,centerOffset,leftOffset,rightOffset,leftOffset,centerOffset,leftOffset],[0,leftWidth,centerWidth,leftWidth+centerWidth,rightWidth,leftWidth+centerWidth+rightWidth,centerWidth+rightWidth,leftWidth+centerWidth+rightWidth]]}if(2===laneCount){const leftWidth=Math.floor(remainingWidth/2),rightWidth=remainingWidth-leftWidth,leftOffset=canvasLeftOffset,rightOffset=leftOffset+leftWidth;return[[0,leftOffset,leftOffset,leftOffset,rightOffset,leftOffset,leftOffset,leftOffset],[0,leftWidth,leftWidth,leftWidth,rightWidth,leftWidth+rightWidth,leftWidth+rightWidth,leftWidth+rightWidth]]}{const offset=canvasLeftOffset,width=remainingWidth;return[[0,offset,offset,offset,offset,offset,offset,offset],[0,width,width,width,width,width,width,width]]}}equals(other){return this.lineHeight===other.lineHeight&&this.pixelRatio===other.pixelRatio&&this.overviewRulerLanes===other.overviewRulerLanes&&this.renderBorder===other.renderBorder&&this.borderColor===other.borderColor&&this.hideCursor===other.hideCursor&&this.cursorColor===other.cursorColor&&this.themeType===other.themeType&&this.backgroundColor===other.backgroundColor&&this.top===other.top&&this.right===other.right&&this.domWidth===other.domWidth&&this.domHeight===other.domHeight&&this.canvasWidth===other.canvasWidth&&this.canvasHeight===other.canvasHeight}}class DecorationsOverviewRuler extends ViewPart{constructor(context){super(context),this._domNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("canvas")),this._domNode.setClassName("decorationsOverviewRuler"),this._domNode.setPosition("absolute"),this._domNode.setLayerHinting(!0),this._domNode.setContain("strict"),this._domNode.setAttribute("aria-hidden","true"),this._updateSettings(!1),this._tokensColorTrackerListener=modes/* TokenizationRegistry */.RW.onDidChange((e=>{e.changedColorMap&&this._updateSettings(!0)})),this._cursorPositions=[]}dispose(){super.dispose(),this._tokensColorTrackerListener.dispose()}_updateSettings(renderNow){const newSettings=new Settings(this._context.configuration,this._context.theme);return(!this._settings||!this._settings.equals(newSettings))&&(this._settings=newSettings,this._domNode.setTop(this._settings.top),this._domNode.setRight(this._settings.right),this._domNode.setWidth(this._settings.domWidth),this._domNode.setHeight(this._settings.domHeight),this._domNode.domNode.width=this._settings.canvasWidth,this._domNode.domNode.height=this._settings.canvasHeight,renderNow&&this._render(),!0)}
// ---- begin view event handlers
onConfigurationChanged(e){return this._updateSettings(!1)}onCursorStateChanged(e){this._cursorPositions=[];for(let i=0,len=e.selections.length;i<len;i++)this._cursorPositions[i]=e.selections[i].getPosition();return this._cursorPositions.sort(core_position/* Position */.L.compare),!0}onDecorationsChanged(e){return!!e.affectsOverviewRuler}onFlushed(e){return!0}onScrollChanged(e){return e.scrollHeightChanged}onZonesChanged(e){return!0}onThemeChanged(e){
// invalidate color cache
return this._context.model.invalidateOverviewRulerColorCache(),this._updateSettings(!1)}
// ---- end view event handlers
getDomNode(){return this._domNode.domNode}prepareRender(ctx){
// Nothing to read
}render(editorCtx){this._render()}_render(){if(0===this._settings.overviewRulerLanes)
// overview ruler is off
return void this._domNode.setBackgroundColor(this._settings.backgroundColor?this._settings.backgroundColor:"");const canvasWidth=this._settings.canvasWidth,canvasHeight=this._settings.canvasHeight,lineHeight=this._settings.lineHeight,viewLayout=this._context.viewLayout,outerHeight=this._context.viewLayout.getScrollHeight(),heightRatio=canvasHeight/outerHeight,decorations=this._context.model.getAllOverviewRulerDecorations(this._context.theme),minDecorationHeight=6/* MIN_DECORATION_HEIGHT */*this._settings.pixelRatio|0,halfMinDecorationHeight=minDecorationHeight/2|0,canvasCtx=this._domNode.domNode.getContext("2d");null===this._settings.backgroundColor?canvasCtx.clearRect(0,0,canvasWidth,canvasHeight):(canvasCtx.fillStyle=this._settings.backgroundColor,canvasCtx.fillRect(0,0,canvasWidth,canvasHeight));const x=this._settings.x,w=this._settings.w;decorations.sort(viewModel/* OverviewRulerDecorationsGroup */.SQ.cmp);for(const decorationGroup of decorations){const color=decorationGroup.color,decorationGroupData=decorationGroup.data;canvasCtx.fillStyle=color;let prevLane=0,prevY1=0,prevY2=0;for(let i=0,len=decorationGroupData.length/3;i<len;i++){const lane=decorationGroupData[3*i],startLineNumber=decorationGroupData[3*i+1],endLineNumber=decorationGroupData[3*i+2];let y1=viewLayout.getVerticalOffsetForLineNumber(startLineNumber)*heightRatio|0,y2=(viewLayout.getVerticalOffsetForLineNumber(endLineNumber)+lineHeight)*heightRatio|0;const height=y2-y1;if(height<minDecorationHeight){let yCenter=(y1+y2)/2|0;yCenter<halfMinDecorationHeight?yCenter=halfMinDecorationHeight:yCenter+halfMinDecorationHeight>canvasHeight&&(yCenter=canvasHeight-halfMinDecorationHeight),y1=yCenter-halfMinDecorationHeight,y2=yCenter+halfMinDecorationHeight}y1>prevY2+1||lane!==prevLane?(
// flush prev
0!==i&&canvasCtx.fillRect(x[prevLane],prevY1,w[prevLane],prevY2-prevY1),prevLane=lane,prevY1=y1,prevY2=y2):
// merge into prev
y2>prevY2&&(prevY2=y2)}canvasCtx.fillRect(x[prevLane],prevY1,w[prevLane],prevY2-prevY1)}
// Draw cursors
if(!this._settings.hideCursor&&this._settings.cursorColor){const cursorHeight=2*this._settings.pixelRatio|0,halfCursorHeight=cursorHeight/2|0,cursorX=this._settings.x[7/* Full */],cursorW=this._settings.w[7/* Full */];canvasCtx.fillStyle=this._settings.cursorColor;let prevY1=-100,prevY2=-100;for(let i=0,len=this._cursorPositions.length;i<len;i++){const cursor=this._cursorPositions[i];let yCenter=viewLayout.getVerticalOffsetForLineNumber(cursor.lineNumber)*heightRatio|0;yCenter<halfCursorHeight?yCenter=halfCursorHeight:yCenter+halfCursorHeight>canvasHeight&&(yCenter=canvasHeight-halfCursorHeight);const y1=yCenter-halfCursorHeight,y2=y1+cursorHeight;y1>prevY2+1?(
// flush prev
0!==i&&canvasCtx.fillRect(cursorX,prevY1,cursorW,prevY2-prevY1),prevY1=y1,prevY2=y2):
// merge into prev
y2>prevY2&&(prevY2=y2)}canvasCtx.fillRect(cursorX,prevY1,cursorW,prevY2-prevY1)}this._settings.renderBorder&&this._settings.borderColor&&this._settings.overviewRulerLanes>0&&(canvasCtx.beginPath(),canvasCtx.lineWidth=1,canvasCtx.strokeStyle=this._settings.borderColor,canvasCtx.moveTo(0,0),canvasCtx.lineTo(0,canvasHeight),canvasCtx.stroke(),canvasCtx.moveTo(0,0),canvasCtx.lineTo(canvasWidth,0),canvasCtx.stroke())}}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/view/overviewZoneManager.js
var overviewZoneManager=__webpack_require__(92003);// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/overviewRuler.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class OverviewRuler extends viewEventHandler/* ViewEventHandler */.O{constructor(context,cssClassName){super(),this._context=context;const options=this._context.configuration.options;this._domNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("canvas")),this._domNode.setClassName(cssClassName),this._domNode.setPosition("absolute"),this._domNode.setLayerHinting(!0),this._domNode.setContain("strict"),this._zoneManager=new overviewZoneManager/* OverviewZoneManager */.Tj((lineNumber=>this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber))),this._zoneManager.setDOMWidth(0),this._zoneManager.setDOMHeight(0),this._zoneManager.setOuterHeight(this._context.viewLayout.getScrollHeight()),this._zoneManager.setLineHeight(options.get(58/* lineHeight */)),this._zoneManager.setPixelRatio(options.get(127/* pixelRatio */)),this._context.addEventHandler(this)}dispose(){this._context.removeEventHandler(this),super.dispose()}
// ---- begin view event handlers
onConfigurationChanged(e){const options=this._context.configuration.options;return e.hasChanged(58/* lineHeight */)&&(this._zoneManager.setLineHeight(options.get(58/* lineHeight */)),this._render()),e.hasChanged(127/* pixelRatio */)&&(this._zoneManager.setPixelRatio(options.get(127/* pixelRatio */)),this._domNode.setWidth(this._zoneManager.getDOMWidth()),this._domNode.setHeight(this._zoneManager.getDOMHeight()),this._domNode.domNode.width=this._zoneManager.getCanvasWidth(),this._domNode.domNode.height=this._zoneManager.getCanvasHeight(),this._render()),!0}onFlushed(e){return this._render(),!0}onScrollChanged(e){return e.scrollHeightChanged&&(this._zoneManager.setOuterHeight(e.scrollHeight),this._render()),!0}onZonesChanged(e){return this._render(),!0}
// ---- end view event handlers
getDomNode(){return this._domNode.domNode}setLayout(position){this._domNode.setTop(position.top),this._domNode.setRight(position.right);let hasChanged=!1;hasChanged=this._zoneManager.setDOMWidth(position.width)||hasChanged,hasChanged=this._zoneManager.setDOMHeight(position.height)||hasChanged,hasChanged&&(this._domNode.setWidth(this._zoneManager.getDOMWidth()),this._domNode.setHeight(this._zoneManager.getDOMHeight()),this._domNode.domNode.width=this._zoneManager.getCanvasWidth(),this._domNode.domNode.height=this._zoneManager.getCanvasHeight(),this._render())}setZones(zones){this._zoneManager.setZones(zones),this._render()}_render(){if(0===this._zoneManager.getOuterHeight())return!1;const width=this._zoneManager.getCanvasWidth(),height=this._zoneManager.getCanvasHeight(),colorZones=this._zoneManager.resolveColorZones(),id2Color=this._zoneManager.getId2Color(),ctx=this._domNode.domNode.getContext("2d");return ctx.clearRect(0,0,width,height),colorZones.length>0&&this._renderOneLane(ctx,colorZones,id2Color,width),!0}_renderOneLane(ctx,colorZones,id2Color,width){let currentColorId=0,currentFrom=0,currentTo=0;for(const zone of colorZones){const zoneColorId=zone.colorId,zoneFrom=zone.from,zoneTo=zone.to;zoneColorId!==currentColorId?(ctx.fillRect(0,currentFrom,width,currentTo-currentFrom),currentColorId=zoneColorId,ctx.fillStyle=id2Color[currentColorId],currentFrom=zoneFrom,currentTo=zoneTo):currentTo>=zoneFrom?currentTo=Math.max(currentTo,zoneTo):(ctx.fillRect(0,currentFrom,width,currentTo-currentFrom),currentFrom=zoneFrom,currentTo=zoneTo)}ctx.fillRect(0,currentFrom,width,currentTo-currentFrom)}}// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/rulers/rulers.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class Rulers extends ViewPart{constructor(context){super(context),this.domNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this.domNode.setAttribute("role","presentation"),this.domNode.setAttribute("aria-hidden","true"),this.domNode.setClassName("view-rulers"),this._renderedRulers=[];const options=this._context.configuration.options;this._rulers=options.get(90/* rulers */),this._typicalHalfwidthCharacterWidth=options.get(43/* fontInfo */).typicalHalfwidthCharacterWidth}dispose(){super.dispose()}
// --- begin event handlers
onConfigurationChanged(e){const options=this._context.configuration.options;return this._rulers=options.get(90/* rulers */),this._typicalHalfwidthCharacterWidth=options.get(43/* fontInfo */).typicalHalfwidthCharacterWidth,!0}onScrollChanged(e){return e.scrollHeightChanged}
// --- end event handlers
prepareRender(ctx){
// Nothing to read
}_ensureRulersCount(){const currentCount=this._renderedRulers.length,desiredCount=this._rulers.length;if(currentCount===desiredCount)
// Nothing to do
return;if(currentCount<desiredCount){const{tabSize:tabSize}=this._context.model.getTextModelOptions(),rulerWidth=tabSize;let addCount=desiredCount-currentCount;while(addCount>0){const node=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div"));node.setClassName("view-ruler"),node.setWidth(rulerWidth),this.domNode.appendChild(node),this._renderedRulers.push(node),addCount--}return}let removeCount=currentCount-desiredCount;while(removeCount>0){const node=this._renderedRulers.pop();this.domNode.removeChild(node),removeCount--}}render(ctx){this._ensureRulersCount();for(let i=0,len=this._rulers.length;i<len;i++){const node=this._renderedRulers[i],ruler=this._rulers[i];node.setBoxShadow(ruler.color?`1px 0 0 0 ${ruler.color} inset`:""),node.setHeight(Math.min(ctx.scrollHeight,1e6)),node.setLeft(ruler.column*this._typicalHalfwidthCharacterWidth)}}}(0,themeService/* registerThemingParticipant */.Ic)(((theme,collector)=>{const rulerColor=theme.getColor(editorColorRegistry/* editorRuler */.zk);rulerColor&&collector.addRule(`.monaco-editor .view-ruler { box-shadow: 1px 0 0 0 ${rulerColor} inset; }`)}));// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class ScrollDecorationViewPart extends ViewPart{constructor(context){super(context),this._scrollTop=0,this._width=0,this._updateWidth(),this._shouldShow=!1;const options=this._context.configuration.options,scrollbar=options.get(91/* scrollbar */);this._useShadows=scrollbar.useShadows,this._domNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this._domNode.setAttribute("role","presentation"),this._domNode.setAttribute("aria-hidden","true")}dispose(){super.dispose()}_updateShouldShow(){const newShouldShow=this._useShadows&&this._scrollTop>0;return this._shouldShow!==newShouldShow&&(this._shouldShow=newShouldShow,!0)}getDomNode(){return this._domNode}_updateWidth(){const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);0===layoutInfo.minimap.renderMinimap||layoutInfo.minimap.minimapWidth>0&&0===layoutInfo.minimap.minimapLeft?this._width=layoutInfo.width:this._width=layoutInfo.width-layoutInfo.minimap.minimapWidth-layoutInfo.verticalScrollbarWidth}
// --- begin event handlers
onConfigurationChanged(e){const options=this._context.configuration.options,scrollbar=options.get(91/* scrollbar */);return this._useShadows=scrollbar.useShadows,this._updateWidth(),this._updateShouldShow(),!0}onScrollChanged(e){return this._scrollTop=e.scrollTop,this._updateShouldShow()}
// --- end event handlers
prepareRender(ctx){
// Nothing to read
}render(ctx){this._domNode.setWidth(this._width),this._domNode.setClassName(this._shouldShow?"scroll-decoration":"")}}(0,themeService/* registerThemingParticipant */.Ic)(((theme,collector)=>{const shadow=theme.getColor(colorRegistry/* scrollbarShadow */._w);shadow&&collector.addRule(`.monaco-editor .scroll-decoration { box-shadow: ${shadow} 0 6px 6px -6px inset; }`)}));// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/selections/selections.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class HorizontalRangeWithStyle{constructor(other){this.left=other.left,this.width=other.width,this.startStyle=null,this.endStyle=null}}class LineVisibleRangesWithStyle{constructor(lineNumber,ranges){this.lineNumber=lineNumber,this.ranges=ranges}}function toStyledRange(item){return new HorizontalRangeWithStyle(item)}function toStyled(item){return new LineVisibleRangesWithStyle(item.lineNumber,item.ranges.map(toStyledRange))}class SelectionsOverlay extends DynamicViewOverlay{constructor(context){super(),this._previousFrameVisibleRangesWithStyle=[],this._context=context;const options=this._context.configuration.options;this._lineHeight=options.get(58/* lineHeight */),this._roundedSelection=options.get(89/* roundedSelection */),this._typicalHalfwidthCharacterWidth=options.get(43/* fontInfo */).typicalHalfwidthCharacterWidth,this._selections=[],this._renderResult=null,this._context.addEventHandler(this)}dispose(){this._context.removeEventHandler(this),this._renderResult=null,super.dispose()}
// --- begin event handlers
onConfigurationChanged(e){const options=this._context.configuration.options;return this._lineHeight=options.get(58/* lineHeight */),this._roundedSelection=options.get(89/* roundedSelection */),this._typicalHalfwidthCharacterWidth=options.get(43/* fontInfo */).typicalHalfwidthCharacterWidth,!0}onCursorStateChanged(e){return this._selections=e.selections.slice(0),!0}onDecorationsChanged(e){
// true for inline decorations that can end up relayouting text
return!0;//e.inlineDecorationsChanged;
}onFlushed(e){return!0}onLinesChanged(e){return!0}onLinesDeleted(e){return!0}onLinesInserted(e){return!0}onScrollChanged(e){return e.scrollTopChanged}onZonesChanged(e){return!0}
// --- end event handlers
_visibleRangesHaveGaps(linesVisibleRanges){for(let i=0,len=linesVisibleRanges.length;i<len;i++){const lineVisibleRanges=linesVisibleRanges[i];if(lineVisibleRanges.ranges.length>1)
// There are two ranges on the same line
return!0}return!1}_enrichVisibleRangesWithStyle(viewport,linesVisibleRanges,previousFrame){const epsilon=this._typicalHalfwidthCharacterWidth/4;let previousFrameTop=null,previousFrameBottom=null;if(previousFrame&&previousFrame.length>0&&linesVisibleRanges.length>0){const topLineNumber=linesVisibleRanges[0].lineNumber;if(topLineNumber===viewport.startLineNumber)for(let i=0;!previousFrameTop&&i<previousFrame.length;i++)previousFrame[i].lineNumber===topLineNumber&&(previousFrameTop=previousFrame[i].ranges[0]);const bottomLineNumber=linesVisibleRanges[linesVisibleRanges.length-1].lineNumber;if(bottomLineNumber===viewport.endLineNumber)for(let i=previousFrame.length-1;!previousFrameBottom&&i>=0;i--)previousFrame[i].lineNumber===bottomLineNumber&&(previousFrameBottom=previousFrame[i].ranges[0]);previousFrameTop&&!previousFrameTop.startStyle&&(previousFrameTop=null),previousFrameBottom&&!previousFrameBottom.startStyle&&(previousFrameBottom=null)}for(let i=0,len=linesVisibleRanges.length;i<len;i++){
// We know for a fact that there is precisely one range on each line
const curLineRange=linesVisibleRanges[i].ranges[0],curLeft=curLineRange.left,curRight=curLineRange.left+curLineRange.width,startStyle={top:0/* EXTERN */,bottom:0/* EXTERN */},endStyle={top:0/* EXTERN */,bottom:0/* EXTERN */};if(i>0){
// Look above
const prevLeft=linesVisibleRanges[i-1].ranges[0].left,prevRight=linesVisibleRanges[i-1].ranges[0].left+linesVisibleRanges[i-1].ranges[0].width;abs(curLeft-prevLeft)<epsilon?startStyle.top=2/* FLAT */:curLeft>prevLeft&&(startStyle.top=1/* INTERN */),abs(curRight-prevRight)<epsilon?endStyle.top=2/* FLAT */:prevLeft<curRight&&curRight<prevRight&&(endStyle.top=1/* INTERN */)}else previousFrameTop&&(
// Accept some hiccups near the viewport edges to save on repaints
startStyle.top=previousFrameTop.startStyle.top,endStyle.top=previousFrameTop.endStyle.top);if(i+1<len){
// Look below
const nextLeft=linesVisibleRanges[i+1].ranges[0].left,nextRight=linesVisibleRanges[i+1].ranges[0].left+linesVisibleRanges[i+1].ranges[0].width;abs(curLeft-nextLeft)<epsilon?startStyle.bottom=2/* FLAT */:nextLeft<curLeft&&curLeft<nextRight&&(startStyle.bottom=1/* INTERN */),abs(curRight-nextRight)<epsilon?endStyle.bottom=2/* FLAT */:curRight<nextRight&&(endStyle.bottom=1/* INTERN */)}else previousFrameBottom&&(
// Accept some hiccups near the viewport edges to save on repaints
startStyle.bottom=previousFrameBottom.startStyle.bottom,endStyle.bottom=previousFrameBottom.endStyle.bottom);curLineRange.startStyle=startStyle,curLineRange.endStyle=endStyle}}_getVisibleRangesWithStyle(selection,ctx,previousFrame){const _linesVisibleRanges=ctx.linesVisibleRangesForRange(selection,!0)||[],linesVisibleRanges=_linesVisibleRanges.map(toStyled),visibleRangesHaveGaps=this._visibleRangesHaveGaps(linesVisibleRanges);
// The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT
return!visibleRangesHaveGaps&&this._roundedSelection&&this._enrichVisibleRangesWithStyle(ctx.visibleRange,linesVisibleRanges,previousFrame),linesVisibleRanges}_createSelectionPiece(top,height,className,left,width){return'<div class="cslr '+className+'" style="top:'+top.toString()+"px;left:"+left.toString()+"px;width:"+width.toString()+"px;height:"+height+'px;"></div>'}_actualRenderOneSelection(output2,visibleStartLineNumber,hasMultipleSelections,visibleRanges){if(0===visibleRanges.length)return;const visibleRangesHaveStyle=!!visibleRanges[0].ranges[0].startStyle,fullLineHeight=this._lineHeight.toString(),reducedLineHeight=(this._lineHeight-1).toString(),firstLineNumber=visibleRanges[0].lineNumber,lastLineNumber=visibleRanges[visibleRanges.length-1].lineNumber;for(let i=0,len=visibleRanges.length;i<len;i++){const lineVisibleRanges=visibleRanges[i],lineNumber=lineVisibleRanges.lineNumber,lineIndex=lineNumber-visibleStartLineNumber,lineHeight=hasMultipleSelections&&(lineNumber===lastLineNumber||lineNumber===firstLineNumber)?reducedLineHeight:fullLineHeight,top=hasMultipleSelections&&lineNumber===firstLineNumber?1:0;let innerCornerOutput="",restOfSelectionOutput="";for(let j=0,lenJ=lineVisibleRanges.ranges.length;j<lenJ;j++){const visibleRange=lineVisibleRanges.ranges[j];if(visibleRangesHaveStyle){const startStyle=visibleRange.startStyle,endStyle=visibleRange.endStyle;if(1/* INTERN */===startStyle.top||1/* INTERN */===startStyle.bottom){
// Reverse rounded corner to the left
// First comes the selection (blue layer)
innerCornerOutput+=this._createSelectionPiece(top,lineHeight,SelectionsOverlay.SELECTION_CLASS_NAME,visibleRange.left-SelectionsOverlay.ROUNDED_PIECE_WIDTH,SelectionsOverlay.ROUNDED_PIECE_WIDTH);
// Second comes the background (white layer) with inverse border radius
let className=SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;1/* INTERN */===startStyle.top&&(className+=" "+SelectionsOverlay.SELECTION_TOP_RIGHT),1/* INTERN */===startStyle.bottom&&(className+=" "+SelectionsOverlay.SELECTION_BOTTOM_RIGHT),innerCornerOutput+=this._createSelectionPiece(top,lineHeight,className,visibleRange.left-SelectionsOverlay.ROUNDED_PIECE_WIDTH,SelectionsOverlay.ROUNDED_PIECE_WIDTH)}if(1/* INTERN */===endStyle.top||1/* INTERN */===endStyle.bottom){
// Reverse rounded corner to the right
// First comes the selection (blue layer)
innerCornerOutput+=this._createSelectionPiece(top,lineHeight,SelectionsOverlay.SELECTION_CLASS_NAME,visibleRange.left+visibleRange.width,SelectionsOverlay.ROUNDED_PIECE_WIDTH);
// Second comes the background (white layer) with inverse border radius
let className=SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;1/* INTERN */===endStyle.top&&(className+=" "+SelectionsOverlay.SELECTION_TOP_LEFT),1/* INTERN */===endStyle.bottom&&(className+=" "+SelectionsOverlay.SELECTION_BOTTOM_LEFT),innerCornerOutput+=this._createSelectionPiece(top,lineHeight,className,visibleRange.left+visibleRange.width,SelectionsOverlay.ROUNDED_PIECE_WIDTH)}}let className=SelectionsOverlay.SELECTION_CLASS_NAME;if(visibleRangesHaveStyle){const startStyle=visibleRange.startStyle,endStyle=visibleRange.endStyle;0/* EXTERN */===startStyle.top&&(className+=" "+SelectionsOverlay.SELECTION_TOP_LEFT),0/* EXTERN */===startStyle.bottom&&(className+=" "+SelectionsOverlay.SELECTION_BOTTOM_LEFT),0/* EXTERN */===endStyle.top&&(className+=" "+SelectionsOverlay.SELECTION_TOP_RIGHT),0/* EXTERN */===endStyle.bottom&&(className+=" "+SelectionsOverlay.SELECTION_BOTTOM_RIGHT)}restOfSelectionOutput+=this._createSelectionPiece(top,lineHeight,className,visibleRange.left,visibleRange.width)}output2[lineIndex][0]+=innerCornerOutput,output2[lineIndex][1]+=restOfSelectionOutput}}prepareRender(ctx){
// Build HTML for inner corners separate from HTML for the rest of selections,
// as the inner corner HTML can interfere with that of other selections.
// In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.
const output=[],visibleStartLineNumber=ctx.visibleRange.startLineNumber,visibleEndLineNumber=ctx.visibleRange.endLineNumber;for(let lineNumber=visibleStartLineNumber;lineNumber<=visibleEndLineNumber;lineNumber++){const lineIndex=lineNumber-visibleStartLineNumber;output[lineIndex]=["",""]}const thisFrameVisibleRangesWithStyle=[];for(let i=0,len=this._selections.length;i<len;i++){const selection=this._selections[i];if(selection.isEmpty()){thisFrameVisibleRangesWithStyle[i]=null;continue}const visibleRangesWithStyle=this._getVisibleRangesWithStyle(selection,ctx,this._previousFrameVisibleRangesWithStyle[i]);thisFrameVisibleRangesWithStyle[i]=visibleRangesWithStyle,this._actualRenderOneSelection(output,visibleStartLineNumber,this._selections.length>1,visibleRangesWithStyle)}this._previousFrameVisibleRangesWithStyle=thisFrameVisibleRangesWithStyle,this._renderResult=output.map((([internalCorners,restOfSelection])=>internalCorners+restOfSelection))}render(startLineNumber,lineNumber){if(!this._renderResult)return"";const lineIndex=lineNumber-startLineNumber;return lineIndex<0||lineIndex>=this._renderResult.length?"":this._renderResult[lineIndex]}}function abs(n){return n<0?-n:n}SelectionsOverlay.SELECTION_CLASS_NAME="selected-text",SelectionsOverlay.SELECTION_TOP_LEFT="top-left-radius",SelectionsOverlay.SELECTION_BOTTOM_LEFT="bottom-left-radius",SelectionsOverlay.SELECTION_TOP_RIGHT="top-right-radius",SelectionsOverlay.SELECTION_BOTTOM_RIGHT="bottom-right-radius",SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME="monaco-editor-background",SelectionsOverlay.ROUNDED_PIECE_WIDTH=10,(0,themeService/* registerThemingParticipant */.Ic)(((theme,collector)=>{const editorSelectionColor=theme.getColor(colorRegistry/* editorSelectionBackground */.hE);editorSelectionColor&&collector.addRule(`.monaco-editor .focused .selected-text { background-color: ${editorSelectionColor}; }`);const editorInactiveSelectionColor=theme.getColor(colorRegistry/* editorInactiveSelection */.ES);editorInactiveSelectionColor&&collector.addRule(`.monaco-editor .selected-text { background-color: ${editorInactiveSelectionColor}; }`);const editorSelectionForegroundColor=theme.getColor(colorRegistry/* editorSelectionForeground */.yb);editorSelectionForegroundColor&&!editorSelectionForegroundColor.isTransparent()&&collector.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`)}));// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursor.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class ViewCursorRenderData{constructor(top,left,width,height,textContent,textContentClassName){this.top=top,this.left=left,this.width=width,this.height=height,this.textContent=textContent,this.textContentClassName=textContentClassName}}class ViewCursor{constructor(context){this._context=context;const options=this._context.configuration.options,fontInfo=options.get(43/* fontInfo */);this._cursorStyle=options.get(24/* cursorStyle */),this._lineHeight=options.get(58/* lineHeight */),this._typicalHalfwidthCharacterWidth=fontInfo.typicalHalfwidthCharacterWidth,this._lineCursorWidth=Math.min(options.get(27/* cursorWidth */),this._typicalHalfwidthCharacterWidth),this._isVisible=!0,
// Create the dom node
this._domNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this._domNode.setClassName(`cursor ${mouseCursor/* MOUSE_CURSOR_TEXT_CSS_CLASS_NAME */.S}`),this._domNode.setHeight(this._lineHeight),this._domNode.setTop(0),this._domNode.setLeft(0),configuration/* Configuration */.V.applyFontInfo(this._domNode,fontInfo),this._domNode.setDisplay("none"),this._position=new core_position/* Position */.L(1,1),this._lastRenderedContent="",this._renderData=null}getDomNode(){return this._domNode}getPosition(){return this._position}show(){this._isVisible||(this._domNode.setVisibility("inherit"),this._isVisible=!0)}hide(){this._isVisible&&(this._domNode.setVisibility("hidden"),this._isVisible=!1)}onConfigurationChanged(e){const options=this._context.configuration.options,fontInfo=options.get(43/* fontInfo */);return this._cursorStyle=options.get(24/* cursorStyle */),this._lineHeight=options.get(58/* lineHeight */),this._typicalHalfwidthCharacterWidth=fontInfo.typicalHalfwidthCharacterWidth,this._lineCursorWidth=Math.min(options.get(27/* cursorWidth */),this._typicalHalfwidthCharacterWidth),configuration/* Configuration */.V.applyFontInfo(this._domNode,fontInfo),!0}onCursorPositionChanged(position){return this._position=position,!0}_prepareRender(ctx){let textContent="";if(this._cursorStyle===editorOptions/* TextEditorCursorStyle */.d2.Line||this._cursorStyle===editorOptions/* TextEditorCursorStyle */.d2.LineThin){const visibleRange=ctx.visibleRangeForPosition(this._position);if(!visibleRange||visibleRange.outsideRenderedLine)
// Outside viewport
return null;let width;if(this._cursorStyle===editorOptions/* TextEditorCursorStyle */.d2.Line){if(width=dom/* computeScreenAwareSize */.Uh(this._lineCursorWidth>0?this._lineCursorWidth:2),width>2){const lineContent=this._context.model.getLineContent(this._position.lineNumber),nextCharLength=strings/* nextCharLength */.vH(lineContent,this._position.column-1);textContent=lineContent.substr(this._position.column-1,nextCharLength)}}else width=dom/* computeScreenAwareSize */.Uh(1);let left=visibleRange.left;width>=2&&left>=1&&(
// try to center cursor
left-=1);const top=ctx.getVerticalOffsetForLineNumber(this._position.lineNumber)-ctx.bigNumbersDelta;return new ViewCursorRenderData(top,left,width,this._lineHeight,textContent,"")}const lineContent=this._context.model.getLineContent(this._position.lineNumber),nextCharLength=strings/* nextCharLength */.vH(lineContent,this._position.column-1),visibleRangeForCharacter=ctx.linesVisibleRangesForRange(new core_range/* Range */.e(this._position.lineNumber,this._position.column,this._position.lineNumber,this._position.column+nextCharLength),!1);if(!visibleRangeForCharacter||0===visibleRangeForCharacter.length)
// Outside viewport
return null;const firstVisibleRangeForCharacter=visibleRangeForCharacter[0];if(firstVisibleRangeForCharacter.outsideRenderedLine||0===firstVisibleRangeForCharacter.ranges.length)
// Outside viewport
return null;const range=firstVisibleRangeForCharacter.ranges[0],width=range.width<1?this._typicalHalfwidthCharacterWidth:range.width;let textContentClassName="";if(this._cursorStyle===editorOptions/* TextEditorCursorStyle */.d2.Block){const lineData=this._context.model.getViewLineData(this._position.lineNumber);textContent=lineContent.substr(this._position.column-1,nextCharLength);const tokenIndex=lineData.tokens.findTokenIndexAtOffset(this._position.column-1);textContentClassName=lineData.tokens.getClassName(tokenIndex)}let top=ctx.getVerticalOffsetForLineNumber(this._position.lineNumber)-ctx.bigNumbersDelta,height=this._lineHeight;
// Underline might interfere with clicking
return this._cursorStyle!==editorOptions/* TextEditorCursorStyle */.d2.Underline&&this._cursorStyle!==editorOptions/* TextEditorCursorStyle */.d2.UnderlineThin||(top+=this._lineHeight-2,height=2),new ViewCursorRenderData(top,range.left,width,height,textContent,textContentClassName)}prepareRender(ctx){this._renderData=this._prepareRender(ctx)}render(ctx){return this._renderData?(this._lastRenderedContent!==this._renderData.textContent&&(this._lastRenderedContent=this._renderData.textContent,this._domNode.domNode.textContent=this._lastRenderedContent),this._domNode.setClassName(`cursor ${mouseCursor/* MOUSE_CURSOR_TEXT_CSS_CLASS_NAME */.S} ${this._renderData.textContentClassName}`),this._domNode.setDisplay("block"),this._domNode.setTop(this._renderData.top),this._domNode.setLeft(this._renderData.left),this._domNode.setWidth(this._renderData.width),this._domNode.setLineHeight(this._renderData.height),this._domNode.setHeight(this._renderData.height),{domNode:this._domNode.domNode,position:this._position,contentLeft:this._renderData.left,height:this._renderData.height,width:2}):(this._domNode.setDisplay("none"),null)}}// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursors.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class ViewCursors extends ViewPart{constructor(context){super(context);const options=this._context.configuration.options;this._readOnly=options.get(80/* readOnly */),this._cursorBlinking=options.get(22/* cursorBlinking */),this._cursorStyle=options.get(24/* cursorStyle */),this._cursorSmoothCaretAnimation=options.get(23/* cursorSmoothCaretAnimation */),this._selectionIsEmpty=!0,this._isComposingInput=!1,this._isVisible=!1,this._primaryCursor=new ViewCursor(this._context),this._secondaryCursors=[],this._renderData=[],this._domNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this._domNode.setAttribute("role","presentation"),this._domNode.setAttribute("aria-hidden","true"),this._updateDomClassName(),this._domNode.appendChild(this._primaryCursor.getDomNode()),this._startCursorBlinkAnimation=new common_async/* TimeoutTimer */._F,this._cursorFlatBlinkInterval=new common_async/* IntervalTimer */.zh,this._blinkingEnabled=!1,this._editorHasFocus=!1,this._updateBlinking()}dispose(){super.dispose(),this._startCursorBlinkAnimation.dispose(),this._cursorFlatBlinkInterval.dispose()}getDomNode(){return this._domNode}
// --- begin event handlers
onCompositionStart(e){return this._isComposingInput=!0,this._updateBlinking(),!0}onCompositionEnd(e){return this._isComposingInput=!1,this._updateBlinking(),!0}onConfigurationChanged(e){const options=this._context.configuration.options;this._readOnly=options.get(80/* readOnly */),this._cursorBlinking=options.get(22/* cursorBlinking */),this._cursorStyle=options.get(24/* cursorStyle */),this._cursorSmoothCaretAnimation=options.get(23/* cursorSmoothCaretAnimation */),this._updateBlinking(),this._updateDomClassName(),this._primaryCursor.onConfigurationChanged(e);for(let i=0,len=this._secondaryCursors.length;i<len;i++)this._secondaryCursors[i].onConfigurationChanged(e);return!0}_onCursorPositionChanged(position,secondaryPositions){if(this._primaryCursor.onCursorPositionChanged(position),this._updateBlinking(),this._secondaryCursors.length<secondaryPositions.length){
// Create new cursors
const addCnt=secondaryPositions.length-this._secondaryCursors.length;for(let i=0;i<addCnt;i++){const newCursor=new ViewCursor(this._context);this._domNode.domNode.insertBefore(newCursor.getDomNode().domNode,this._primaryCursor.getDomNode().domNode.nextSibling),this._secondaryCursors.push(newCursor)}}else if(this._secondaryCursors.length>secondaryPositions.length){
// Remove some cursors
const removeCnt=this._secondaryCursors.length-secondaryPositions.length;for(let i=0;i<removeCnt;i++)this._domNode.removeChild(this._secondaryCursors[0].getDomNode()),this._secondaryCursors.splice(0,1)}for(let i=0;i<secondaryPositions.length;i++)this._secondaryCursors[i].onCursorPositionChanged(secondaryPositions[i])}onCursorStateChanged(e){const positions=[];for(let i=0,len=e.selections.length;i<len;i++)positions[i]=e.selections[i].getPosition();this._onCursorPositionChanged(positions[0],positions.slice(1));const selectionIsEmpty=e.selections[0].isEmpty();return this._selectionIsEmpty!==selectionIsEmpty&&(this._selectionIsEmpty=selectionIsEmpty,this._updateDomClassName()),!0}onDecorationsChanged(e){
// true for inline decorations that can end up relayouting text
return!0}onFlushed(e){return!0}onFocusChanged(e){return this._editorHasFocus=e.isFocused,this._updateBlinking(),!1}onLinesChanged(e){return!0}onLinesDeleted(e){return!0}onLinesInserted(e){return!0}onScrollChanged(e){return!0}onTokensChanged(e){const shouldRender=position=>{for(let i=0,len=e.ranges.length;i<len;i++)if(e.ranges[i].fromLineNumber<=position.lineNumber&&position.lineNumber<=e.ranges[i].toLineNumber)return!0;return!1};if(shouldRender(this._primaryCursor.getPosition()))return!0;for(const secondaryCursor of this._secondaryCursors)if(shouldRender(secondaryCursor.getPosition()))return!0;return!1}onZonesChanged(e){return!0}
// --- end event handlers
// ---- blinking logic
_getCursorBlinking(){return this._isComposingInput?0/* Hidden */:this._editorHasFocus?this._readOnly?5/* Solid */:this._cursorBlinking:0/* Hidden */}_updateBlinking(){this._startCursorBlinkAnimation.cancel(),this._cursorFlatBlinkInterval.cancel();const blinkingStyle=this._getCursorBlinking(),isHidden=0/* Hidden */===blinkingStyle,isSolid=5/* Solid */===blinkingStyle;
// hidden and solid are special as they involve no animations
isHidden?this._hide():this._show(),this._blinkingEnabled=!1,this._updateDomClassName(),isHidden||isSolid||(1/* Blink */===blinkingStyle?
// flat blinking is handled by JavaScript to save battery life due to Chromium step timing issue https://bugs.chromium.org/p/chromium/issues/detail?id=361587
this._cursorFlatBlinkInterval.cancelAndSet((()=>{this._isVisible?this._hide():this._show()}),ViewCursors.BLINK_INTERVAL):this._startCursorBlinkAnimation.setIfNotSet((()=>{this._blinkingEnabled=!0,this._updateDomClassName()}),ViewCursors.BLINK_INTERVAL))}
// --- end blinking logic
_updateDomClassName(){this._domNode.setClassName(this._getClassName())}_getClassName(){let result="cursors-layer";switch(this._selectionIsEmpty||(result+=" has-selection"),this._cursorStyle){case editorOptions/* TextEditorCursorStyle */.d2.Line:result+=" cursor-line-style";break;case editorOptions/* TextEditorCursorStyle */.d2.Block:result+=" cursor-block-style";break;case editorOptions/* TextEditorCursorStyle */.d2.Underline:result+=" cursor-underline-style";break;case editorOptions/* TextEditorCursorStyle */.d2.LineThin:result+=" cursor-line-thin-style";break;case editorOptions/* TextEditorCursorStyle */.d2.BlockOutline:result+=" cursor-block-outline-style";break;case editorOptions/* TextEditorCursorStyle */.d2.UnderlineThin:result+=" cursor-underline-thin-style";break;default:result+=" cursor-line-style"}if(this._blinkingEnabled)switch(this._getCursorBlinking()){case 1/* Blink */:result+=" cursor-blink";break;case 2/* Smooth */:result+=" cursor-smooth";break;case 3/* Phase */:result+=" cursor-phase";break;case 4/* Expand */:result+=" cursor-expand";break;case 5/* Solid */:result+=" cursor-solid";break;default:result+=" cursor-solid"}else result+=" cursor-solid";return this._cursorSmoothCaretAnimation&&(result+=" cursor-smooth-caret-animation"),result}_show(){this._primaryCursor.show();for(let i=0,len=this._secondaryCursors.length;i<len;i++)this._secondaryCursors[i].show();this._isVisible=!0}_hide(){this._primaryCursor.hide();for(let i=0,len=this._secondaryCursors.length;i<len;i++)this._secondaryCursors[i].hide();this._isVisible=!1}
// ---- IViewPart implementation
prepareRender(ctx){this._primaryCursor.prepareRender(ctx);for(let i=0,len=this._secondaryCursors.length;i<len;i++)this._secondaryCursors[i].prepareRender(ctx)}render(ctx){let renderData=[],renderDataLen=0;const primaryRenderData=this._primaryCursor.render(ctx);primaryRenderData&&(renderData[renderDataLen++]=primaryRenderData);for(let i=0,len=this._secondaryCursors.length;i<len;i++){const secondaryRenderData=this._secondaryCursors[i].render(ctx);secondaryRenderData&&(renderData[renderDataLen++]=secondaryRenderData)}this._renderData=renderData}getLastRenderData(){return this._renderData}}ViewCursors.BLINK_INTERVAL=500,(0,themeService/* registerThemingParticipant */.Ic)(((theme,collector)=>{const caret=theme.getColor(editorColorRegistry/* editorCursorForeground */.n0);if(caret){let caretBackground=theme.getColor(editorColorRegistry/* editorCursorBackground */.fY);caretBackground||(caretBackground=caret.opposite()),collector.addRule(`.monaco-editor .cursors-layer .cursor { background-color: ${caret}; border-color: ${caret}; color: ${caretBackground}; }`),"hc"===theme.type&&collector.addRule(`.monaco-editor .cursors-layer.has-selection .cursor { border-left: 1px solid ${caretBackground}; border-right: 1px solid ${caretBackground}; }`)}}));// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewZones/viewZones.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
const invalidFunc=()=>{throw new Error("Invalid change accessor")};class ViewZones extends ViewPart{constructor(context){super(context);const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);this._lineHeight=options.get(58/* lineHeight */),this._contentWidth=layoutInfo.contentWidth,this._contentLeft=layoutInfo.contentLeft,this.domNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this.domNode.setClassName("view-zones"),this.domNode.setPosition("absolute"),this.domNode.setAttribute("role","presentation"),this.domNode.setAttribute("aria-hidden","true"),this.marginDomNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this.marginDomNode.setClassName("margin-view-zones"),this.marginDomNode.setPosition("absolute"),this.marginDomNode.setAttribute("role","presentation"),this.marginDomNode.setAttribute("aria-hidden","true"),this._zones={}}dispose(){super.dispose(),this._zones={}}
// ---- begin view event handlers
_recomputeWhitespacesProps(){const whitespaces=this._context.viewLayout.getWhitespaces(),oldWhitespaces=new Map;for(const whitespace of whitespaces)oldWhitespaces.set(whitespace.id,whitespace);let hadAChange=!1;return this._context.model.changeWhitespace((whitespaceAccessor=>{const keys=Object.keys(this._zones);for(let i=0,len=keys.length;i<len;i++){const id=keys[i],zone=this._zones[id],props=this._computeWhitespaceProps(zone.delegate);zone.isInHiddenArea=props.isInHiddenArea;const oldWhitespace=oldWhitespaces.get(id);!oldWhitespace||oldWhitespace.afterLineNumber===props.afterViewLineNumber&&oldWhitespace.height===props.heightInPx||(whitespaceAccessor.changeOneWhitespace(id,props.afterViewLineNumber,props.heightInPx),this._safeCallOnComputedHeight(zone.delegate,props.heightInPx),hadAChange=!0)}})),hadAChange}onConfigurationChanged(e){const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);return this._lineHeight=options.get(58/* lineHeight */),this._contentWidth=layoutInfo.contentWidth,this._contentLeft=layoutInfo.contentLeft,e.hasChanged(58/* lineHeight */)&&this._recomputeWhitespacesProps(),!0}onLineMappingChanged(e){return this._recomputeWhitespacesProps()}onLinesDeleted(e){return!0}onScrollChanged(e){return e.scrollTopChanged||e.scrollWidthChanged}onZonesChanged(e){return!0}onLinesInserted(e){return!0}
// ---- end view event handlers
_getZoneOrdinal(zone){return"undefined"!==typeof zone.afterColumn?zone.afterColumn:1e4}_computeWhitespaceProps(zone){if(0===zone.afterLineNumber)return{isInHiddenArea:!1,afterViewLineNumber:0,heightInPx:this._heightInPixels(zone),minWidthInPx:this._minWidthInPixels(zone)};let zoneAfterModelPosition,zoneBeforeModelPosition;if("undefined"!==typeof zone.afterColumn)zoneAfterModelPosition=this._context.model.validateModelPosition({lineNumber:zone.afterLineNumber,column:zone.afterColumn});else{const validAfterLineNumber=this._context.model.validateModelPosition({lineNumber:zone.afterLineNumber,column:1}).lineNumber;zoneAfterModelPosition=new core_position/* Position */.L(validAfterLineNumber,this._context.model.getModelLineMaxColumn(validAfterLineNumber))}zoneBeforeModelPosition=zoneAfterModelPosition.column===this._context.model.getModelLineMaxColumn(zoneAfterModelPosition.lineNumber)?this._context.model.validateModelPosition({lineNumber:zoneAfterModelPosition.lineNumber+1,column:1}):this._context.model.validateModelPosition({lineNumber:zoneAfterModelPosition.lineNumber,column:zoneAfterModelPosition.column+1});const viewPosition=this._context.model.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition),isVisible=this._context.model.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);return{isInHiddenArea:!isVisible,afterViewLineNumber:viewPosition.lineNumber,heightInPx:isVisible?this._heightInPixels(zone):0,minWidthInPx:this._minWidthInPixels(zone)}}changeViewZones(callback){let zonesHaveChanged=!1;return this._context.model.changeWhitespace((whitespaceAccessor=>{const changeAccessor={addZone:zone=>(zonesHaveChanged=!0,this._addZone(whitespaceAccessor,zone)),removeZone:id=>{id&&(zonesHaveChanged=this._removeZone(whitespaceAccessor,id)||zonesHaveChanged)},layoutZone:id=>{id&&(zonesHaveChanged=this._layoutZone(whitespaceAccessor,id)||zonesHaveChanged)}};safeInvoke1Arg(callback,changeAccessor),
// Invalidate changeAccessor
changeAccessor.addZone=invalidFunc,changeAccessor.removeZone=invalidFunc,changeAccessor.layoutZone=invalidFunc})),zonesHaveChanged}_addZone(whitespaceAccessor,zone){const props=this._computeWhitespaceProps(zone),whitespaceId=whitespaceAccessor.insertWhitespace(props.afterViewLineNumber,this._getZoneOrdinal(zone),props.heightInPx,props.minWidthInPx),myZone={whitespaceId:whitespaceId,delegate:zone,isInHiddenArea:props.isInHiddenArea,isVisible:!1,domNode:(0,fastDomNode/* createFastDomNode */.X)(zone.domNode),marginDomNode:zone.marginDomNode?(0,fastDomNode/* createFastDomNode */.X)(zone.marginDomNode):null};return this._safeCallOnComputedHeight(myZone.delegate,props.heightInPx),myZone.domNode.setPosition("absolute"),myZone.domNode.domNode.style.width="100%",myZone.domNode.setDisplay("none"),myZone.domNode.setAttribute("monaco-view-zone",myZone.whitespaceId),this.domNode.appendChild(myZone.domNode),myZone.marginDomNode&&(myZone.marginDomNode.setPosition("absolute"),myZone.marginDomNode.domNode.style.width="100%",myZone.marginDomNode.setDisplay("none"),myZone.marginDomNode.setAttribute("monaco-view-zone",myZone.whitespaceId),this.marginDomNode.appendChild(myZone.marginDomNode)),this._zones[myZone.whitespaceId]=myZone,this.setShouldRender(),myZone.whitespaceId}_removeZone(whitespaceAccessor,id){if(this._zones.hasOwnProperty(id)){const zone=this._zones[id];return delete this._zones[id],whitespaceAccessor.removeWhitespace(zone.whitespaceId),zone.domNode.removeAttribute("monaco-visible-view-zone"),zone.domNode.removeAttribute("monaco-view-zone"),zone.domNode.domNode.parentNode.removeChild(zone.domNode.domNode),zone.marginDomNode&&(zone.marginDomNode.removeAttribute("monaco-visible-view-zone"),zone.marginDomNode.removeAttribute("monaco-view-zone"),zone.marginDomNode.domNode.parentNode.removeChild(zone.marginDomNode.domNode)),this.setShouldRender(),!0}return!1}_layoutZone(whitespaceAccessor,id){if(this._zones.hasOwnProperty(id)){const zone=this._zones[id],props=this._computeWhitespaceProps(zone.delegate);return zone.isInHiddenArea=props.isInHiddenArea,
// const newOrdinal = this._getZoneOrdinal(zone.delegate);
whitespaceAccessor.changeOneWhitespace(zone.whitespaceId,props.afterViewLineNumber,props.heightInPx),
// TODO@Alex: change `newOrdinal` too
this._safeCallOnComputedHeight(zone.delegate,props.heightInPx),this.setShouldRender(),!0}return!1}shouldSuppressMouseDownOnViewZone(id){if(this._zones.hasOwnProperty(id)){const zone=this._zones[id];return Boolean(zone.delegate.suppressMouseDown)}return!1}_heightInPixels(zone){return"number"===typeof zone.heightInPx?zone.heightInPx:"number"===typeof zone.heightInLines?this._lineHeight*zone.heightInLines:this._lineHeight}_minWidthInPixels(zone){return"number"===typeof zone.minWidthInPx?zone.minWidthInPx:0}_safeCallOnComputedHeight(zone,height){if("function"===typeof zone.onComputedHeight)try{zone.onComputedHeight(height)}catch(e){(0,errors/* onUnexpectedError */.dL)(e)}}_safeCallOnDomNodeTop(zone,top){if("function"===typeof zone.onDomNodeTop)try{zone.onDomNodeTop(top)}catch(e){(0,errors/* onUnexpectedError */.dL)(e)}}prepareRender(ctx){
// Nothing to read
}render(ctx){const visibleWhitespaces=ctx.viewportData.whitespaceViewportData,visibleZones={};let hasVisibleZone=!1;for(const visibleWhitespace of visibleWhitespaces)this._zones[visibleWhitespace.id].isInHiddenArea||(visibleZones[visibleWhitespace.id]=visibleWhitespace,hasVisibleZone=!0);const keys=Object.keys(this._zones);for(let i=0,len=keys.length;i<len;i++){const id=keys[i],zone=this._zones[id];let newTop=0,newHeight=0,newDisplay="none";visibleZones.hasOwnProperty(id)?(newTop=visibleZones[id].verticalOffset-ctx.bigNumbersDelta,newHeight=visibleZones[id].height,newDisplay="block",
// zone is visible
zone.isVisible||(zone.domNode.setAttribute("monaco-visible-view-zone","true"),zone.isVisible=!0),this._safeCallOnDomNodeTop(zone.delegate,ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset))):(zone.isVisible&&(zone.domNode.removeAttribute("monaco-visible-view-zone"),zone.isVisible=!1),this._safeCallOnDomNodeTop(zone.delegate,ctx.getScrolledTopFromAbsoluteTop(-1e6))),zone.domNode.setTop(newTop),zone.domNode.setHeight(newHeight),zone.domNode.setDisplay(newDisplay),zone.marginDomNode&&(zone.marginDomNode.setTop(newTop),zone.marginDomNode.setHeight(newHeight),zone.marginDomNode.setDisplay(newDisplay))}hasVisibleZone&&(this.domNode.setWidth(Math.max(ctx.scrollWidth,this._contentWidth)),this.marginDomNode.setWidth(this._contentLeft))}}function safeInvoke1Arg(func,arg1){try{return func(arg1)}catch(e){(0,errors/* onUnexpectedError */.dL)(e)}}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/view/viewContext.js
var viewContext=__webpack_require__(431923),viewLinesViewportData=__webpack_require__(863664);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/viewLayout/viewLinesViewportData.js
// CONCATENATED MODULE: ./node_modules/monaco-editor/esm/vs/editor/browser/view/viewImpl.js
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
class View extends viewEventHandler/* ViewEventHandler */.O{constructor(commandDelegate,configuration,themeService,model,userInputEvents,overflowWidgetsDomNode){super(),this._selections=[new core_selection/* Selection */.Y(1,1,1,1)],this._renderAnimationFrame=null;const viewController=new ViewController(configuration,model,userInputEvents,commandDelegate);
// The view context is passed on to most classes (basically to reduce param. counts in ctors)
this._context=new viewContext/* ViewContext */.A(configuration,themeService.getColorTheme(),model),this._configPixelRatio=this._context.configuration.options.get(127/* pixelRatio */),
// Ensure the view is the first event handler in order to update the layout
this._context.addEventHandler(this),this._register(themeService.onDidColorThemeChange((theme=>{this._context.theme.update(theme),this._context.model.onDidColorThemeChange(),this.render(!0,!1)}))),this._viewParts=[],
// Keyboard handler
this._textAreaHandler=new TextAreaHandler(this._context,viewController,this._createTextAreaHandlerHelper()),this._viewParts.push(this._textAreaHandler),
// These two dom nodes must be constructed up front, since references are needed in the layout provider (scrolling & co.)
this._linesContent=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this._linesContent.setClassName("lines-content monaco-editor-background"),this._linesContent.setPosition("absolute"),this.domNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this.domNode.setClassName(this._getEditorClassName()),
// Set role 'code' for better screen reader support https://github.com/microsoft/vscode/issues/93438
this.domNode.setAttribute("role","code"),this._overflowGuardContainer=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),PartFingerprints.write(this._overflowGuardContainer,3/* OverflowGuard */),this._overflowGuardContainer.setClassName("overflow-guard"),this._scrollbar=new EditorScrollbar(this._context,this._linesContent,this.domNode,this._overflowGuardContainer),this._viewParts.push(this._scrollbar),
// View Lines
this._viewLines=new ViewLines(this._context,this._linesContent),
// View Zones
this._viewZones=new ViewZones(this._context),this._viewParts.push(this._viewZones);
// Decorations overview ruler
const decorationsOverviewRuler=new DecorationsOverviewRuler(this._context);this._viewParts.push(decorationsOverviewRuler);const scrollDecoration=new ScrollDecorationViewPart(this._context);this._viewParts.push(scrollDecoration);const contentViewOverlays=new ContentViewOverlays(this._context);this._viewParts.push(contentViewOverlays),contentViewOverlays.addDynamicOverlay(new CurrentLineHighlightOverlay(this._context)),contentViewOverlays.addDynamicOverlay(new SelectionsOverlay(this._context)),contentViewOverlays.addDynamicOverlay(new IndentGuidesOverlay(this._context)),contentViewOverlays.addDynamicOverlay(new DecorationsOverlay(this._context));const marginViewOverlays=new MarginViewOverlays(this._context);this._viewParts.push(marginViewOverlays),marginViewOverlays.addDynamicOverlay(new CurrentLineMarginHighlightOverlay(this._context)),marginViewOverlays.addDynamicOverlay(new GlyphMarginOverlay(this._context)),marginViewOverlays.addDynamicOverlay(new MarginViewLineDecorationsOverlay(this._context)),marginViewOverlays.addDynamicOverlay(new LinesDecorationsOverlay(this._context)),marginViewOverlays.addDynamicOverlay(new LineNumbersOverlay(this._context));const margin=new Margin(this._context);margin.getDomNode().appendChild(this._viewZones.marginDomNode),margin.getDomNode().appendChild(marginViewOverlays.getDomNode()),this._viewParts.push(margin),
// Content widgets
this._contentWidgets=new ViewContentWidgets(this._context,this.domNode),this._viewParts.push(this._contentWidgets),this._viewCursors=new ViewCursors(this._context),this._viewParts.push(this._viewCursors),
// Overlay widgets
this._overlayWidgets=new ViewOverlayWidgets(this._context),this._viewParts.push(this._overlayWidgets);const rulers=new Rulers(this._context);this._viewParts.push(rulers);const minimap=new Minimap(this._context);
// -------------- Wire dom nodes up
if(this._viewParts.push(minimap),decorationsOverviewRuler){const overviewRulerData=this._scrollbar.getOverviewRulerLayoutInfo();overviewRulerData.parent.insertBefore(decorationsOverviewRuler.getDomNode(),overviewRulerData.insertBefore)}this._linesContent.appendChild(contentViewOverlays.getDomNode()),this._linesContent.appendChild(rulers.domNode),this._linesContent.appendChild(this._viewZones.domNode),this._linesContent.appendChild(this._viewLines.getDomNode()),this._linesContent.appendChild(this._contentWidgets.domNode),this._linesContent.appendChild(this._viewCursors.getDomNode()),this._overflowGuardContainer.appendChild(margin.getDomNode()),this._overflowGuardContainer.appendChild(this._scrollbar.getDomNode()),this._overflowGuardContainer.appendChild(scrollDecoration.getDomNode()),this._overflowGuardContainer.appendChild(this._textAreaHandler.textArea),this._overflowGuardContainer.appendChild(this._textAreaHandler.textAreaCover),this._overflowGuardContainer.appendChild(this._overlayWidgets.getDomNode()),this._overflowGuardContainer.appendChild(minimap.getDomNode()),this.domNode.appendChild(this._overflowGuardContainer),overflowWidgetsDomNode?overflowWidgetsDomNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode.domNode):this.domNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode),this._applyLayout(),
// Pointer handler
this._pointerHandler=this._register(new PointerHandler(this._context,viewController,this._createPointerHandlerHelper()))}_flushAccumulatedAndRenderNow(){this._renderNow()}_createPointerHandlerHelper(){return{viewDomNode:this.domNode.domNode,linesContentDomNode:this._linesContent.domNode,focusTextArea:()=>{this.focus()},dispatchTextAreaEvent:event=>{this._textAreaHandler.textArea.domNode.dispatchEvent(event)},getLastRenderData:()=>{const lastViewCursorsRenderData=this._viewCursors.getLastRenderData()||[],lastTextareaPosition=this._textAreaHandler.getLastRenderData();return new PointerHandlerLastRenderData(lastViewCursorsRenderData,lastTextareaPosition)},shouldSuppressMouseDownOnViewZone:viewZoneId=>this._viewZones.shouldSuppressMouseDownOnViewZone(viewZoneId),shouldSuppressMouseDownOnWidget:widgetId=>this._contentWidgets.shouldSuppressMouseDownOnWidget(widgetId),getPositionFromDOMInfo:(spanNode,offset)=>(this._flushAccumulatedAndRenderNow(),this._viewLines.getPositionFromDOMInfo(spanNode,offset)),visibleRangeForPosition:(lineNumber,column)=>(this._flushAccumulatedAndRenderNow(),this._viewLines.visibleRangeForPosition(new core_position/* Position */.L(lineNumber,column))),getLineWidth:lineNumber=>(this._flushAccumulatedAndRenderNow(),this._viewLines.getLineWidth(lineNumber))}}_createTextAreaHandlerHelper(){return{visibleRangeForPositionRelativeToEditor:(lineNumber,column)=>(this._flushAccumulatedAndRenderNow(),this._viewLines.visibleRangeForPosition(new core_position/* Position */.L(lineNumber,column)))}}_applyLayout(){const options=this._context.configuration.options,layoutInfo=options.get(129/* layoutInfo */);this.domNode.setWidth(layoutInfo.width),this.domNode.setHeight(layoutInfo.height),this._overflowGuardContainer.setWidth(layoutInfo.width),this._overflowGuardContainer.setHeight(layoutInfo.height),this._linesContent.setWidth(1e6),this._linesContent.setHeight(1e6)}_getEditorClassName(){const focused=this._textAreaHandler.isFocused()?" focused":"";return this._context.configuration.options.get(126/* editorClassName */)+" "+(0,themeService/* getThemeTypeSelector */.m6)(this._context.theme.type)+focused}
// --- begin event handlers
handleEvents(events){super.handleEvents(events),this._scheduleRender()}onConfigurationChanged(e){return this._configPixelRatio=this._context.configuration.options.get(127/* pixelRatio */),this.domNode.setClassName(this._getEditorClassName()),this._applyLayout(),!1}onCursorStateChanged(e){return this._selections=e.selections,!1}onFocusChanged(e){return this.domNode.setClassName(this._getEditorClassName()),!1}onThemeChanged(e){return this.domNode.setClassName(this._getEditorClassName()),!1}
// --- end event handlers
dispose(){null!==this._renderAnimationFrame&&(this._renderAnimationFrame.dispose(),this._renderAnimationFrame=null),this._contentWidgets.overflowingContentWidgetsDomNode.domNode.remove(),this._context.removeEventHandler(this),this._viewLines.dispose();
// Destroy view parts
for(const viewPart of this._viewParts)viewPart.dispose();super.dispose()}_scheduleRender(){null===this._renderAnimationFrame&&(this._renderAnimationFrame=dom/* runAtThisOrScheduleAtNextAnimationFrame */.lI(this._onRenderScheduled.bind(this),100))}_onRenderScheduled(){this._renderAnimationFrame=null,this._flushAccumulatedAndRenderNow()}_renderNow(){safeInvokeNoArg((()=>this._actualRender()))}_getViewPartsToRender(){let result=[],resultLen=0;for(const viewPart of this._viewParts)viewPart.shouldRender()&&(result[resultLen++]=viewPart);return result}_actualRender(){if(!dom/* isInDOM */.Uw(this.domNode.domNode))return;let viewPartsToRender=this._getViewPartsToRender();if(!this._viewLines.shouldRender()&&0===viewPartsToRender.length)
// Nothing to render
return;const partialViewportData=this._context.viewLayout.getLinesViewportData();this._context.model.setViewport(partialViewportData.startLineNumber,partialViewportData.endLineNumber,partialViewportData.centeredLineNumber);const viewportData=new viewLinesViewportData/* ViewportData */.x(this._selections,partialViewportData,this._context.viewLayout.getWhitespaceViewportData(),this._context.model);this._contentWidgets.shouldRender()&&
// Give the content widgets a chance to set their max width before a possible synchronous layout
this._contentWidgets.onBeforeRender(viewportData),this._viewLines.shouldRender()&&(this._viewLines.renderText(viewportData),this._viewLines.onDidRender(),
// Rendering of viewLines might cause scroll events to occur, so collect view parts to render again
viewPartsToRender=this._getViewPartsToRender());const renderingContext=new view_renderingContext/* RenderingContext */.xh(this._context.viewLayout,viewportData,this._viewLines);
// Render the rest of the parts
for(const viewPart of viewPartsToRender)viewPart.prepareRender(renderingContext);for(const viewPart of viewPartsToRender)viewPart.render(renderingContext),viewPart.onDidRender();
// Try to detect browser zooming and paint again if necessary
Math.abs(browser/* getPixelRatio */.mX()-this._configPixelRatio)>.001&&
// looks like the pixel ratio has changed
this._context.configuration.updatePixelRatio()}
// --- BEGIN CodeEditor helpers
delegateVerticalScrollbarMouseDown(browserEvent){this._scrollbar.delegateVerticalScrollbarMouseDown(browserEvent)}restoreState(scrollPosition){this._context.model.setScrollPosition({scrollTop:scrollPosition.scrollTop},1/* Immediate */),this._context.model.tokenizeViewport(),this._renderNow(),this._viewLines.updateLineWidths(),this._context.model.setScrollPosition({scrollLeft:scrollPosition.scrollLeft},1/* Immediate */)}getOffsetForColumn(modelLineNumber,modelColumn){const modelPosition=this._context.model.validateModelPosition({lineNumber:modelLineNumber,column:modelColumn}),viewPosition=this._context.model.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);this._flushAccumulatedAndRenderNow();const visibleRange=this._viewLines.visibleRangeForPosition(new core_position/* Position */.L(viewPosition.lineNumber,viewPosition.column));return visibleRange?visibleRange.left:-1}getTargetAtClientPoint(clientX,clientY){const mouseTarget=this._pointerHandler.getTargetAtClientPoint(clientX,clientY);return mouseTarget?ViewUserInputEvents.convertViewToModelMouseTarget(mouseTarget,this._context.model.coordinatesConverter):null}createOverviewRuler(cssClassName){return new OverviewRuler(this._context,cssClassName)}change(callback){this._viewZones.changeViewZones(callback),this._scheduleRender()}render(now,everything){if(everything){
// Force everything to render...
this._viewLines.forceShouldRender();for(const viewPart of this._viewParts)viewPart.forceShouldRender()}now?this._flushAccumulatedAndRenderNow():this._scheduleRender()}focus(){this._textAreaHandler.focusTextArea()}isFocused(){return this._textAreaHandler.isFocused()}setAriaOptions(options){this._textAreaHandler.setAriaOptions(options)}addContentWidget(widgetData){this._contentWidgets.addWidget(widgetData.widget),this.layoutContentWidget(widgetData),this._scheduleRender()}layoutContentWidget(widgetData){let newRange=widgetData.position&&widgetData.position.range||null;if(null===newRange){const newPosition=widgetData.position?widgetData.position.position:null;null!==newPosition&&(newRange=new core_range/* Range */.e(newPosition.lineNumber,newPosition.column,newPosition.lineNumber,newPosition.column))}const newPreference=widgetData.position?widgetData.position.preference:null;this._contentWidgets.setWidgetPosition(widgetData.widget,newRange,newPreference),this._scheduleRender()}removeContentWidget(widgetData){this._contentWidgets.removeWidget(widgetData.widget),this._scheduleRender()}addOverlayWidget(widgetData){this._overlayWidgets.addWidget(widgetData.widget),this.layoutOverlayWidget(widgetData),this._scheduleRender()}layoutOverlayWidget(widgetData){const newPreference=widgetData.position?widgetData.position.preference:null,shouldRender=this._overlayWidgets.setWidgetPosition(widgetData.widget,newPreference);shouldRender&&this._scheduleRender()}removeOverlayWidget(widgetData){this._overlayWidgets.removeWidget(widgetData.widget),this._scheduleRender()}}function safeInvokeNoArg(func){try{return func()}catch(e){(0,errors/* onUnexpectedError */.dL)(e)}}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/controller/cursor.js + 2 modules
var domLineBreaksComputer_a,cursor=__webpack_require__(926653),editorAction=__webpack_require__(230653),editorCommon=__webpack_require__(296518),editorContextKeys=__webpack_require__(29102),viewModelImpl=__webpack_require__(977528),commands=__webpack_require__(820942),contextkey=__webpack_require__(938819),instantiation=__webpack_require__(472065),serviceCollection=__webpack_require__(260972),notification=__webpack_require__(759422),accessibility=__webpack_require__(331106),monospaceLineBreaksComputer=__webpack_require__(368263),textModelEvents=__webpack_require__(983256);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/editorAction.js
const ttPolicy=null===(domLineBreaksComputer_a=window.trustedTypes)||void 0===domLineBreaksComputer_a?void 0:domLineBreaksComputer_a.createPolicy("domLineBreaksComputer",{createHTML:value=>value});class DOMLineBreaksComputerFactory{static create(){return new DOMLineBreaksComputerFactory}constructor(){}createLineBreaksComputer(fontInfo,tabSize,wrappingColumn,wrappingIndent){tabSize|=0,//@perf
wrappingColumn=+wrappingColumn;//@perf
let requests=[],injectedTexts=[];return{addRequest:(lineText,injectedText,previousLineBreakData)=>{requests.push(lineText),injectedTexts.push(injectedText)},finalize:()=>createLineBreaks(requests,fontInfo,tabSize,wrappingColumn,wrappingIndent,injectedTexts)}}}function createLineBreaks(requests,fontInfo,tabSize,firstLineBreakColumn,wrappingIndent,injectedTextsPerLine){var _a;function createEmptyLineBreakWithPossiblyInjectedText(requestIdx){const injectedTexts=injectedTextsPerLine[requestIdx];if(injectedTexts){const lineText=textModelEvents/* LineInjectedText */.gk.applyInjectedText(requests[requestIdx],injectedTexts),injectionOptions=injectedTexts.map((t=>t.options)),injectionOffsets=injectedTexts.map((text=>text.column-1));
// creating a `LineBreakData` with an invalid `breakOffsetsVisibleColumn` is OK
// because `breakOffsetsVisibleColumn` will never be used because it contains injected text
return new viewModel/* LineBreakData */.le([lineText.length],[],0,injectionOffsets,injectionOptions)}return null}if(-1===firstLineBreakColumn){const result=[];for(let i=0,len=requests.length;i<len;i++)result[i]=createEmptyLineBreakWithPossiblyInjectedText(i);return result}const overallWidth=Math.round(firstLineBreakColumn*fontInfo.typicalHalfwidthCharacterWidth),additionalIndent=3/* DeepIndent */===wrappingIndent?2:2/* Indent */===wrappingIndent?1:0,additionalIndentSize=Math.round(tabSize*additionalIndent),additionalIndentLength=Math.ceil(fontInfo.spaceWidth*additionalIndentSize),containerDomNode=document.createElement("div");configuration/* Configuration */.V.applyFontInfoSlow(containerDomNode,fontInfo);const sb=(0,stringBuilder/* createStringBuilder */.l$)(1e4),firstNonWhitespaceIndices=[],wrappedTextIndentLengths=[],renderLineContents=[],allCharOffsets=[],allVisibleColumns=[];for(let i=0;i<requests.length;i++){const lineContent=textModelEvents/* LineInjectedText */.gk.applyInjectedText(requests[i],injectedTextsPerLine[i]);let firstNonWhitespaceIndex=0,wrappedTextIndentLength=0,width=overallWidth;if(0/* None */!==wrappingIndent)if(firstNonWhitespaceIndex=strings/* firstNonWhitespaceIndex */.LC(lineContent),-1===firstNonWhitespaceIndex)
// all whitespace line
firstNonWhitespaceIndex=0;else{
// Track existing indent
for(let i=0;i<firstNonWhitespaceIndex;i++){const charWidth=9/* Tab */===lineContent.charCodeAt(i)?tabSize-wrappedTextIndentLength%tabSize:1;wrappedTextIndentLength+=charWidth}const indentWidth=Math.ceil(fontInfo.spaceWidth*wrappedTextIndentLength);
// Force sticking to beginning of line if no character would fit except for the indentation
indentWidth+fontInfo.typicalFullwidthCharacterWidth>overallWidth?(firstNonWhitespaceIndex=0,wrappedTextIndentLength=0):width=overallWidth-indentWidth}const renderLineContent=lineContent.substr(firstNonWhitespaceIndex),tmp=renderLine(renderLineContent,wrappedTextIndentLength,tabSize,width,sb,additionalIndentLength);firstNonWhitespaceIndices[i]=firstNonWhitespaceIndex,wrappedTextIndentLengths[i]=wrappedTextIndentLength,renderLineContents[i]=renderLineContent,allCharOffsets[i]=tmp[0],allVisibleColumns[i]=tmp[1]}const html=sb.build(),trustedhtml=null!==(_a=null===ttPolicy||void 0===ttPolicy?void 0:ttPolicy.createHTML(html))&&void 0!==_a?_a:html;containerDomNode.innerHTML=trustedhtml,containerDomNode.style.position="absolute",containerDomNode.style.top="10000",containerDomNode.style.wordWrap="break-word",document.body.appendChild(containerDomNode);let range=document.createRange();const lineDomNodes=Array.prototype.slice.call(containerDomNode.children,0);let result=[];for(let i=0;i<requests.length;i++){const lineDomNode=lineDomNodes[i],breakOffsets=readLineBreaks(range,lineDomNode,renderLineContents[i],allCharOffsets[i]);if(null===breakOffsets){result[i]=createEmptyLineBreakWithPossiblyInjectedText(i);continue}const firstNonWhitespaceIndex=firstNonWhitespaceIndices[i],wrappedTextIndentLength=wrappedTextIndentLengths[i]+additionalIndentSize,visibleColumns=allVisibleColumns[i],breakOffsetsVisibleColumn=[];for(let j=0,len=breakOffsets.length;j<len;j++)breakOffsetsVisibleColumn[j]=visibleColumns[breakOffsets[j]];if(0!==firstNonWhitespaceIndex)
// All break offsets are relative to the renderLineContent, make them absolute again
for(let j=0,len=breakOffsets.length;j<len;j++)breakOffsets[j]+=firstNonWhitespaceIndex;let injectionOptions,injectionOffsets;const curInjectedTexts=injectedTextsPerLine[i];curInjectedTexts?(injectionOptions=curInjectedTexts.map((t=>t.options)),injectionOffsets=curInjectedTexts.map((text=>text.column-1))):(injectionOptions=null,injectionOffsets=null),result[i]=new viewModel/* LineBreakData */.le(breakOffsets,breakOffsetsVisibleColumn,wrappedTextIndentLength,injectionOffsets,injectionOptions)}return document.body.removeChild(containerDomNode),result}function renderLine(lineContent,initialVisibleColumn,tabSize,width,sb,wrappingIndentLength){if(0!==wrappingIndentLength){let hangingOffset=String(wrappingIndentLength);sb.appendASCIIString('<div style="text-indent: -'),sb.appendASCIIString(hangingOffset),sb.appendASCIIString("px; padding-left: "),sb.appendASCIIString(hangingOffset),sb.appendASCIIString("px; box-sizing: border-box; width:")}else sb.appendASCIIString('<div style="width:');sb.appendASCIIString(String(width)),sb.appendASCIIString('px;">');
// if (containsRTL) {
// 	sb.appendASCIIString('" dir="ltr');
// }
const len=lineContent.length;let visibleColumn=initialVisibleColumn,charOffset=0,charOffsets=[],visibleColumns=[],nextCharCode=0<len?lineContent.charCodeAt(0):0/* Null */;sb.appendASCIIString("<span>");for(let charIndex=0;charIndex<len;charIndex++){0!==charIndex&&charIndex%16384/* SPAN_MODULO_LIMIT */===0&&sb.appendASCIIString("</span><span>"),charOffsets[charIndex]=charOffset,visibleColumns[charIndex]=visibleColumn;const charCode=nextCharCode;nextCharCode=charIndex+1<len?lineContent.charCodeAt(charIndex+1):0/* Null */;let producedCharacters=1,charWidth=1;switch(charCode){case 9/* Tab */:producedCharacters=tabSize-visibleColumn%tabSize,charWidth=producedCharacters;for(let space=1;space<=producedCharacters;space++)space<producedCharacters?sb.write1(160):sb.appendASCII(32/* Space */);break;case 32/* Space */:32/* Space */===nextCharCode?sb.write1(160):sb.appendASCII(32/* Space */);break;case 60/* LessThan */:sb.appendASCIIString("&lt;");break;case 62/* GreaterThan */:sb.appendASCIIString("&gt;");break;case 38/* Ampersand */:sb.appendASCIIString("&amp;");break;case 0/* Null */:sb.appendASCIIString("&#00;");break;case 65279/* UTF8_BOM */:case 8232/* LINE_SEPARATOR */:case 8233/* PARAGRAPH_SEPARATOR */:case 133/* NEXT_LINE */:sb.write1(65533);break;default:strings/* isFullWidthCharacter */.K7(charCode)&&charWidth++,charCode<32?sb.write1(9216+charCode):sb.write1(charCode)}charOffset+=producedCharacters,visibleColumn+=charWidth}return sb.appendASCIIString("</span>"),charOffsets[lineContent.length]=charOffset,visibleColumns[lineContent.length]=visibleColumn,sb.appendASCIIString("</div>"),[charOffsets,visibleColumns]}function readLineBreaks(range,lineDomNode,lineContent,charOffsets){if(lineContent.length<=1)return null;const spans=Array.prototype.slice.call(lineDomNode.children,0),breakOffsets=[];try{discoverBreaks(range,spans,charOffsets,0,null,lineContent.length-1,null,breakOffsets)}catch(err){return null}return 0===breakOffsets.length?null:(breakOffsets.push(lineContent.length),breakOffsets)}function discoverBreaks(range,spans,charOffsets,low,lowRects,high,highRects,result){if(low===high)return;if(lowRects=lowRects||readClientRect(range,spans,charOffsets[low],charOffsets[low+1]),highRects=highRects||readClientRect(range,spans,charOffsets[high],charOffsets[high+1]),Math.abs(lowRects[0].top-highRects[0].top)<=.1)
// same line
return;
// there is at least one line break between these two offsets
if(low+1===high)
// the two characters are adjacent, so the line break must be exactly between them
return void result.push(high);const mid=low+(high-low)/2|0,midRects=readClientRect(range,spans,charOffsets[mid],charOffsets[mid+1]);discoverBreaks(range,spans,charOffsets,low,lowRects,mid,midRects,result),discoverBreaks(range,spans,charOffsets,mid,midRects,high,highRects,result)}function readClientRect(range,spans,startOffset,endOffset){return range.setStart(spans[startOffset/16384/* SPAN_MODULO_LIMIT */|0].firstChild,startOffset%16384/* SPAN_MODULO_LIMIT */),range.setEnd(spans[endOffset/16384/* SPAN_MODULO_LIMIT */|0].firstChild,endOffset%16384/* SPAN_MODULO_LIMIT */),range.getClientRects()}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/controller/cursorWordOperations.js
var cursorWordOperations=__webpack_require__(5795),codeEditorWidget_decorate=function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},codeEditorWidget_param=function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};let EDITOR_ID=0;class ModelData{constructor(model,viewModel,view,hasRealView,listenersToRemove){this.model=model,this.viewModel=viewModel,this.view=view,this.hasRealView=hasRealView,this.listenersToRemove=listenersToRemove}dispose(){(0,lifecycle/* dispose */.B9)(this.listenersToRemove),this.model.onBeforeDetached(),this.hasRealView&&this.view.dispose(),this.viewModel.dispose()}}let CodeEditorWidget=class CodeEditorWidget extends lifecycle/* Disposable */.JT{constructor(domElement,_options,codeEditorWidgetOptions,instantiationService,codeEditorService,commandService,contextKeyService,themeService,notificationService,accessibilityService){super(),
//#region Eventing
this._onDidDispose=this._register(new common_event/* Emitter */.Q5),this.onDidDispose=this._onDidDispose.event,this._onDidChangeModelContent=this._register(new common_event/* Emitter */.Q5),this.onDidChangeModelContent=this._onDidChangeModelContent.event,this._onDidChangeModelLanguage=this._register(new common_event/* Emitter */.Q5),this.onDidChangeModelLanguage=this._onDidChangeModelLanguage.event,this._onDidChangeModelLanguageConfiguration=this._register(new common_event/* Emitter */.Q5),this.onDidChangeModelLanguageConfiguration=this._onDidChangeModelLanguageConfiguration.event,this._onDidChangeModelOptions=this._register(new common_event/* Emitter */.Q5),this.onDidChangeModelOptions=this._onDidChangeModelOptions.event,this._onDidChangeModelDecorations=this._register(new common_event/* Emitter */.Q5),this.onDidChangeModelDecorations=this._onDidChangeModelDecorations.event,this._onDidChangeConfiguration=this._register(new common_event/* Emitter */.Q5),this.onDidChangeConfiguration=this._onDidChangeConfiguration.event,this._onDidChangeModel=this._register(new common_event/* Emitter */.Q5),this.onDidChangeModel=this._onDidChangeModel.event,this._onDidChangeCursorPosition=this._register(new common_event/* Emitter */.Q5),this.onDidChangeCursorPosition=this._onDidChangeCursorPosition.event,this._onDidChangeCursorSelection=this._register(new common_event/* Emitter */.Q5),this.onDidChangeCursorSelection=this._onDidChangeCursorSelection.event,this._onDidAttemptReadOnlyEdit=this._register(new common_event/* Emitter */.Q5),this.onDidAttemptReadOnlyEdit=this._onDidAttemptReadOnlyEdit.event,this._onDidLayoutChange=this._register(new common_event/* Emitter */.Q5),this.onDidLayoutChange=this._onDidLayoutChange.event,this._editorTextFocus=this._register(new BooleanEventEmitter),this.onDidFocusEditorText=this._editorTextFocus.onDidChangeToTrue,this.onDidBlurEditorText=this._editorTextFocus.onDidChangeToFalse,this._editorWidgetFocus=this._register(new BooleanEventEmitter),this.onDidFocusEditorWidget=this._editorWidgetFocus.onDidChangeToTrue,this.onDidBlurEditorWidget=this._editorWidgetFocus.onDidChangeToFalse,this._onWillType=this._register(new common_event/* Emitter */.Q5),this.onWillType=this._onWillType.event,this._onDidType=this._register(new common_event/* Emitter */.Q5),this.onDidType=this._onDidType.event,this._onDidCompositionStart=this._register(new common_event/* Emitter */.Q5),this.onDidCompositionStart=this._onDidCompositionStart.event,this._onDidCompositionEnd=this._register(new common_event/* Emitter */.Q5),this.onDidCompositionEnd=this._onDidCompositionEnd.event,this._onDidPaste=this._register(new common_event/* Emitter */.Q5),this.onDidPaste=this._onDidPaste.event,this._onMouseUp=this._register(new common_event/* Emitter */.Q5),this.onMouseUp=this._onMouseUp.event,this._onMouseDown=this._register(new common_event/* Emitter */.Q5),this.onMouseDown=this._onMouseDown.event,this._onMouseDrag=this._register(new common_event/* Emitter */.Q5),this.onMouseDrag=this._onMouseDrag.event,this._onMouseDrop=this._register(new common_event/* Emitter */.Q5),this.onMouseDrop=this._onMouseDrop.event,this._onMouseDropCanceled=this._register(new common_event/* Emitter */.Q5),this.onMouseDropCanceled=this._onMouseDropCanceled.event,this._onContextMenu=this._register(new common_event/* Emitter */.Q5),this.onContextMenu=this._onContextMenu.event,this._onMouseMove=this._register(new common_event/* Emitter */.Q5),this.onMouseMove=this._onMouseMove.event,this._onMouseLeave=this._register(new common_event/* Emitter */.Q5),this.onMouseLeave=this._onMouseLeave.event,this._onMouseWheel=this._register(new common_event/* Emitter */.Q5),this.onMouseWheel=this._onMouseWheel.event,this._onKeyUp=this._register(new common_event/* Emitter */.Q5),this.onKeyUp=this._onKeyUp.event,this._onKeyDown=this._register(new common_event/* Emitter */.Q5),this.onKeyDown=this._onKeyDown.event,this._onDidContentSizeChange=this._register(new common_event/* Emitter */.Q5),this.onDidContentSizeChange=this._onDidContentSizeChange.event,this._onDidScrollChange=this._register(new common_event/* Emitter */.Q5),this.onDidScrollChange=this._onDidScrollChange.event,this._onDidChangeViewZones=this._register(new common_event/* Emitter */.Q5),this.onDidChangeViewZones=this._onDidChangeViewZones.event,this._onDidChangeHiddenAreas=this._register(new common_event/* Emitter */.Q5),this.onDidChangeHiddenAreas=this._onDidChangeHiddenAreas.event;const options=Object.assign({},_options);let contributions;this._domElement=domElement,this._overflowWidgetsDomNode=options.overflowWidgetsDomNode,delete options.overflowWidgetsDomNode,this._id=++EDITOR_ID,this._decorationTypeKeysToIds={},this._decorationTypeSubtypes={},this.isSimpleWidget=codeEditorWidgetOptions.isSimpleWidget||!1,this._telemetryData=codeEditorWidgetOptions.telemetryData,this._configuration=this._register(this._createConfiguration(options,accessibilityService)),this._register(this._configuration.onDidChange((e=>{this._onDidChangeConfiguration.fire(e);const options=this._configuration.options;if(e.hasChanged(129/* layoutInfo */)){const layoutInfo=options.get(129/* layoutInfo */);this._onDidLayoutChange.fire(layoutInfo)}}))),this._contextKeyService=this._register(contextKeyService.createScoped(this._domElement)),this._notificationService=notificationService,this._codeEditorService=codeEditorService,this._commandService=commandService,this._themeService=themeService,this._register(new EditorContextKeysManager(this,this._contextKeyService)),this._register(new EditorModeContext(this,this._contextKeyService)),this._instantiationService=instantiationService.createChild(new serviceCollection/* ServiceCollection */.y([contextkey/* IContextKeyService */.i6,this._contextKeyService])),this._modelData=null,this._contributions={},this._actions={},this._focusTracker=new CodeEditorWidgetFocusTracker(domElement),this._register(this._focusTracker.onChange((()=>{this._editorWidgetFocus.setValue(this._focusTracker.hasFocus())}))),this._contentWidgets={},this._overlayWidgets={},contributions=Array.isArray(codeEditorWidgetOptions.contributions)?codeEditorWidgetOptions.contributions:editorExtensions/* EditorExtensionsRegistry */.Uc.getEditorContributions();for(const desc of contributions)if(this._contributions[desc.id])(0,errors/* onUnexpectedError */.dL)(new Error(`Cannot have two contributions with the same id ${desc.id}`));else try{const contribution=this._instantiationService.createInstance(desc.ctor,this);this._contributions[desc.id]=contribution}catch(err){(0,errors/* onUnexpectedError */.dL)(err)}editorExtensions/* EditorExtensionsRegistry */.Uc.getEditorActions().forEach((action=>{if(this._actions[action.id])return void(0,errors/* onUnexpectedError */.dL)(new Error(`Cannot have two actions with the same id ${action.id}`));const internalAction=new editorAction/* InternalEditorAction */.p(action.id,action.label,action.alias,(0,types/* withNullAsUndefined */.f6)(action.precondition),(()=>this._instantiationService.invokeFunction((accessor=>Promise.resolve(action.runEditorCommand(accessor,this,null))))),this._contextKeyService);this._actions[internalAction.id]=internalAction})),this._codeEditorService.addCodeEditor(this)}_createConfiguration(options,accessibilityService){return new configuration/* Configuration */.V(this.isSimpleWidget,options,this._domElement,accessibilityService)}getId(){return this.getEditorType()+":"+this._id}getEditorType(){return editorCommon/* EditorType */.g.ICodeEditor}dispose(){this._codeEditorService.removeCodeEditor(this),this._focusTracker.dispose();const keys=Object.keys(this._contributions);for(let i=0,len=keys.length;i<len;i++){const contributionId=keys[i];this._contributions[contributionId].dispose()}this._contributions={},this._actions={},this._contentWidgets={},this._overlayWidgets={},this._removeDecorationTypes(),this._postDetachModelCleanup(this._detachModel()),this._onDidDispose.fire(),super.dispose()}invokeWithinContext(fn){return this._instantiationService.invokeFunction(fn)}updateOptions(newOptions){this._configuration.updateOptions(newOptions)}getOptions(){return this._configuration.options}getOption(id){return this._configuration.options.get(id)}getRawOptions(){return this._configuration.getRawOptions()}getOverflowWidgetsDomNode(){return this._overflowWidgetsDomNode}getConfiguredWordAtPosition(position){return this._modelData?cursorWordOperations/* WordOperations */.w.getWordAtPosition(this._modelData.model,this._configuration.options.get(115/* wordSeparators */),position):null}getValue(options=null){if(!this._modelData)return"";const preserveBOM=!(!options||!options.preserveBOM);let eolPreference=0/* TextDefined */;return options&&options.lineEnding&&"\n"===options.lineEnding?eolPreference=1/* LF */:options&&options.lineEnding&&"\r\n"===options.lineEnding&&(eolPreference=2/* CRLF */),this._modelData.model.getValue(eolPreference,preserveBOM)}setValue(newValue){this._modelData&&this._modelData.model.setValue(newValue)}getModel(){return this._modelData?this._modelData.model:null}setModel(_model=null){const model=_model;if(null===this._modelData&&null===model)
// Current model is the new model
return;if(this._modelData&&this._modelData.model===model)
// Current model is the new model
return;const hasTextFocus=this.hasTextFocus(),detachedModel=this._detachModel();this._attachModel(model),hasTextFocus&&this.hasModel()&&this.focus();const e={oldModelUrl:detachedModel?detachedModel.uri:null,newModelUrl:model?model.uri:null};this._removeDecorationTypes(),this._onDidChangeModel.fire(e),this._postDetachModelCleanup(detachedModel)}_removeDecorationTypes(){if(this._decorationTypeKeysToIds={},this._decorationTypeSubtypes){for(let decorationType in this._decorationTypeSubtypes){const subTypes=this._decorationTypeSubtypes[decorationType];for(let subType in subTypes)this._removeDecorationType(decorationType+"-"+subType)}this._decorationTypeSubtypes={}}}getVisibleRanges(){return this._modelData?this._modelData.viewModel.getVisibleRanges():[]}getVisibleRangesPlusViewportAboveBelow(){return this._modelData?this._modelData.viewModel.getVisibleRangesPlusViewportAboveBelow():[]}getWhitespaces(){return this._modelData?this._modelData.viewModel.viewLayout.getWhitespaces():[]}static _getVerticalOffsetForPosition(modelData,modelLineNumber,modelColumn){const modelPosition=modelData.model.validatePosition({lineNumber:modelLineNumber,column:modelColumn}),viewPosition=modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);return modelData.viewModel.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber)}getTopForLineNumber(lineNumber){return this._modelData?CodeEditorWidget._getVerticalOffsetForPosition(this._modelData,lineNumber,1):-1}getTopForPosition(lineNumber,column){return this._modelData?CodeEditorWidget._getVerticalOffsetForPosition(this._modelData,lineNumber,column):-1}setHiddenAreas(ranges){this._modelData&&this._modelData.viewModel.setHiddenAreas(ranges.map((r=>core_range/* Range */.e.lift(r))))}getVisibleColumnFromPosition(rawPosition){if(!this._modelData)return rawPosition.column;const position=this._modelData.model.validatePosition(rawPosition),tabSize=this._modelData.model.getOptions().tabSize;return cursorCommon/* CursorColumns */.io.visibleColumnFromColumn(this._modelData.model.getLineContent(position.lineNumber),position.column,tabSize)+1}getPosition(){return this._modelData?this._modelData.viewModel.getPosition():null}setPosition(position){if(this._modelData){if(!core_position/* Position */.L.isIPosition(position))throw new Error("Invalid arguments");this._modelData.viewModel.setSelections("api",[{selectionStartLineNumber:position.lineNumber,selectionStartColumn:position.column,positionLineNumber:position.lineNumber,positionColumn:position.column}])}}_sendRevealRange(modelRange,verticalType,revealHorizontal,scrollType){if(!this._modelData)return;if(!core_range/* Range */.e.isIRange(modelRange))throw new Error("Invalid arguments");const validatedModelRange=this._modelData.model.validateRange(modelRange),viewRange=this._modelData.viewModel.coordinatesConverter.convertModelRangeToViewRange(validatedModelRange);this._modelData.viewModel.revealRange("api",revealHorizontal,viewRange,verticalType,scrollType)}revealLine(lineNumber,scrollType=0/* Smooth */){this._revealLine(lineNumber,0/* Simple */,scrollType)}revealLineInCenter(lineNumber,scrollType=0/* Smooth */){this._revealLine(lineNumber,1/* Center */,scrollType)}revealLineInCenterIfOutsideViewport(lineNumber,scrollType=0/* Smooth */){this._revealLine(lineNumber,2/* CenterIfOutsideViewport */,scrollType)}revealLineNearTop(lineNumber,scrollType=0/* Smooth */){this._revealLine(lineNumber,5/* NearTop */,scrollType)}_revealLine(lineNumber,revealType,scrollType){if("number"!==typeof lineNumber)throw new Error("Invalid arguments");this._sendRevealRange(new core_range/* Range */.e(lineNumber,1,lineNumber,1),revealType,!1,scrollType)}revealPosition(position,scrollType=0/* Smooth */){this._revealPosition(position,0/* Simple */,!0,scrollType)}revealPositionInCenter(position,scrollType=0/* Smooth */){this._revealPosition(position,1/* Center */,!0,scrollType)}revealPositionInCenterIfOutsideViewport(position,scrollType=0/* Smooth */){this._revealPosition(position,2/* CenterIfOutsideViewport */,!0,scrollType)}revealPositionNearTop(position,scrollType=0/* Smooth */){this._revealPosition(position,5/* NearTop */,!0,scrollType)}_revealPosition(position,verticalType,revealHorizontal,scrollType){if(!core_position/* Position */.L.isIPosition(position))throw new Error("Invalid arguments");this._sendRevealRange(new core_range/* Range */.e(position.lineNumber,position.column,position.lineNumber,position.column),verticalType,revealHorizontal,scrollType)}getSelection(){return this._modelData?this._modelData.viewModel.getSelection():null}getSelections(){return this._modelData?this._modelData.viewModel.getSelections():null}setSelection(something){const isSelection=core_selection/* Selection */.Y.isISelection(something),isRange=core_range/* Range */.e.isIRange(something);if(!isSelection&&!isRange)throw new Error("Invalid arguments");if(isSelection)this._setSelectionImpl(something);else if(isRange){
// act as if it was an IRange
const selection={selectionStartLineNumber:something.startLineNumber,selectionStartColumn:something.startColumn,positionLineNumber:something.endLineNumber,positionColumn:something.endColumn};this._setSelectionImpl(selection)}}_setSelectionImpl(sel){if(!this._modelData)return;const selection=new core_selection/* Selection */.Y(sel.selectionStartLineNumber,sel.selectionStartColumn,sel.positionLineNumber,sel.positionColumn);this._modelData.viewModel.setSelections("api",[selection])}revealLines(startLineNumber,endLineNumber,scrollType=0/* Smooth */){this._revealLines(startLineNumber,endLineNumber,0/* Simple */,scrollType)}revealLinesInCenter(startLineNumber,endLineNumber,scrollType=0/* Smooth */){this._revealLines(startLineNumber,endLineNumber,1/* Center */,scrollType)}revealLinesInCenterIfOutsideViewport(startLineNumber,endLineNumber,scrollType=0/* Smooth */){this._revealLines(startLineNumber,endLineNumber,2/* CenterIfOutsideViewport */,scrollType)}revealLinesNearTop(startLineNumber,endLineNumber,scrollType=0/* Smooth */){this._revealLines(startLineNumber,endLineNumber,5/* NearTop */,scrollType)}_revealLines(startLineNumber,endLineNumber,verticalType,scrollType){if("number"!==typeof startLineNumber||"number"!==typeof endLineNumber)throw new Error("Invalid arguments");this._sendRevealRange(new core_range/* Range */.e(startLineNumber,1,endLineNumber,1),verticalType,!1,scrollType)}revealRange(range,scrollType=0/* Smooth */,revealVerticalInCenter=!1,revealHorizontal=!0){this._revealRange(range,revealVerticalInCenter?1/* Center */:0/* Simple */,revealHorizontal,scrollType)}revealRangeInCenter(range,scrollType=0/* Smooth */){this._revealRange(range,1/* Center */,!0,scrollType)}revealRangeInCenterIfOutsideViewport(range,scrollType=0/* Smooth */){this._revealRange(range,2/* CenterIfOutsideViewport */,!0,scrollType)}revealRangeNearTop(range,scrollType=0/* Smooth */){this._revealRange(range,5/* NearTop */,!0,scrollType)}revealRangeNearTopIfOutsideViewport(range,scrollType=0/* Smooth */){this._revealRange(range,6/* NearTopIfOutsideViewport */,!0,scrollType)}revealRangeAtTop(range,scrollType=0/* Smooth */){this._revealRange(range,3/* Top */,!0,scrollType)}_revealRange(range,verticalType,revealHorizontal,scrollType){if(!core_range/* Range */.e.isIRange(range))throw new Error("Invalid arguments");this._sendRevealRange(core_range/* Range */.e.lift(range),verticalType,revealHorizontal,scrollType)}setSelections(ranges,source="api",reason=0/* NotSet */){if(this._modelData){if(!ranges||0===ranges.length)throw new Error("Invalid arguments");for(let i=0,len=ranges.length;i<len;i++)if(!core_selection/* Selection */.Y.isISelection(ranges[i]))throw new Error("Invalid arguments");this._modelData.viewModel.setSelections(source,ranges,reason)}}getContentWidth(){return this._modelData?this._modelData.viewModel.viewLayout.getContentWidth():-1}getScrollWidth(){return this._modelData?this._modelData.viewModel.viewLayout.getScrollWidth():-1}getScrollLeft(){return this._modelData?this._modelData.viewModel.viewLayout.getCurrentScrollLeft():-1}getContentHeight(){return this._modelData?this._modelData.viewModel.viewLayout.getContentHeight():-1}getScrollHeight(){return this._modelData?this._modelData.viewModel.viewLayout.getScrollHeight():-1}getScrollTop(){return this._modelData?this._modelData.viewModel.viewLayout.getCurrentScrollTop():-1}setScrollLeft(newScrollLeft,scrollType=1/* Immediate */){if(this._modelData){if("number"!==typeof newScrollLeft)throw new Error("Invalid arguments");this._modelData.viewModel.setScrollPosition({scrollLeft:newScrollLeft},scrollType)}}setScrollTop(newScrollTop,scrollType=1/* Immediate */){if(this._modelData){if("number"!==typeof newScrollTop)throw new Error("Invalid arguments");this._modelData.viewModel.setScrollPosition({scrollTop:newScrollTop},scrollType)}}setScrollPosition(position,scrollType=1/* Immediate */){this._modelData&&this._modelData.viewModel.setScrollPosition(position,scrollType)}saveViewState(){if(!this._modelData)return null;const contributionsState={},keys=Object.keys(this._contributions);for(const id of keys){const contribution=this._contributions[id];"function"===typeof contribution.saveViewState&&(contributionsState[id]=contribution.saveViewState())}const cursorState=this._modelData.viewModel.saveCursorState(),viewState=this._modelData.viewModel.saveState();return{cursorState:cursorState,viewState:viewState,contributionsState:contributionsState}}restoreViewState(s){if(!this._modelData||!this._modelData.hasRealView)return;const codeEditorState=s;if(codeEditorState&&codeEditorState.cursorState&&codeEditorState.viewState){const cursorState=codeEditorState.cursorState;Array.isArray(cursorState)?this._modelData.viewModel.restoreCursorState(cursorState):
// Backwards compatibility
this._modelData.viewModel.restoreCursorState([cursorState]);const contributionsState=codeEditorState.contributionsState||{},keys=Object.keys(this._contributions);for(let i=0,len=keys.length;i<len;i++){const id=keys[i],contribution=this._contributions[id];"function"===typeof contribution.restoreViewState&&contribution.restoreViewState(contributionsState[id])}const reducedState=this._modelData.viewModel.reduceRestoreState(codeEditorState.viewState);this._modelData.view.restoreState(reducedState)}}getContribution(id){return this._contributions[id]||null}getActions(){const result=[],keys=Object.keys(this._actions);for(let i=0,len=keys.length;i<len;i++){const id=keys[i];result.push(this._actions[id])}return result}getSupportedActions(){let result=this.getActions();return result=result.filter((action=>action.isSupported())),result}getAction(id){return this._actions[id]||null}trigger(source,handlerId,payload){switch(payload=payload||{},handlerId){case"compositionStart"/* CompositionStart */:return void this._startComposition();case"compositionEnd"/* CompositionEnd */:return void this._endComposition(source);case"type"/* Type */:{const args=payload;return void this._type(source,args.text||"")}case"replacePreviousChar"/* ReplacePreviousChar */:{const args=payload;return void this._compositionType(source,args.text||"",args.replaceCharCnt||0,0,0)}case"compositionType"/* CompositionType */:{const args=payload;return void this._compositionType(source,args.text||"",args.replacePrevCharCnt||0,args.replaceNextCharCnt||0,args.positionDelta||0)}case"paste"/* Paste */:{const args=payload;return void this._paste(source,args.text||"",args.pasteOnNewLine||!1,args.multicursorText||null,args.mode||null)}case"cut"/* Cut */:return void this._cut(source)}const action=this.getAction(handlerId);action?Promise.resolve(action.run()).then(void 0,errors/* onUnexpectedError */.dL):this._modelData&&(this._triggerEditorCommand(source,handlerId,payload)||this._triggerCommand(handlerId,payload))}_triggerCommand(handlerId,payload){this._commandService.executeCommand(handlerId,payload)}_startComposition(){this._modelData&&(this._modelData.viewModel.startComposition(),this._onDidCompositionStart.fire())}_endComposition(source){this._modelData&&(this._modelData.viewModel.endComposition(source),this._onDidCompositionEnd.fire())}_type(source,text){this._modelData&&0!==text.length&&("keyboard"===source&&this._onWillType.fire(text),this._modelData.viewModel.type(text,source),"keyboard"===source&&this._onDidType.fire(text))}_compositionType(source,text,replacePrevCharCnt,replaceNextCharCnt,positionDelta){this._modelData&&this._modelData.viewModel.compositionType(text,replacePrevCharCnt,replaceNextCharCnt,positionDelta,source)}_paste(source,text,pasteOnNewLine,multicursorText,mode){if(!this._modelData||0===text.length)return;const startPosition=this._modelData.viewModel.getSelection().getStartPosition();this._modelData.viewModel.paste(text,pasteOnNewLine,multicursorText,source);const endPosition=this._modelData.viewModel.getSelection().getStartPosition();"keyboard"===source&&this._onDidPaste.fire({range:new core_range/* Range */.e(startPosition.lineNumber,startPosition.column,endPosition.lineNumber,endPosition.column),languageId:mode})}_cut(source){this._modelData&&this._modelData.viewModel.cut(source)}_triggerEditorCommand(source,handlerId,payload){const command=editorExtensions/* EditorExtensionsRegistry */.Uc.getEditorCommand(handlerId);return!!command&&(payload=payload||{},payload.source=source,this._instantiationService.invokeFunction((accessor=>{Promise.resolve(command.runEditorCommand(accessor,this,payload)).then(void 0,errors/* onUnexpectedError */.dL)})),!0)}_getViewModel(){return this._modelData?this._modelData.viewModel:null}pushUndoStop(){return!!this._modelData&&(!this._configuration.options.get(80/* readOnly */)&&(this._modelData.model.pushStackElement(),!0))}popUndoStop(){return!!this._modelData&&(!this._configuration.options.get(80/* readOnly */)&&(this._modelData.model.popStackElement(),!0))}executeEdits(source,edits,endCursorState){if(!this._modelData)return!1;if(this._configuration.options.get(80/* readOnly */))
// read only editor => sorry!
return!1;let cursorStateComputer;return cursorStateComputer=endCursorState?Array.isArray(endCursorState)?()=>endCursorState:endCursorState:()=>null,this._modelData.viewModel.executeEdits(source,edits,cursorStateComputer),!0}executeCommand(source,command){this._modelData&&this._modelData.viewModel.executeCommand(command,source)}executeCommands(source,commands){this._modelData&&this._modelData.viewModel.executeCommands(commands,source)}changeDecorations(callback){return this._modelData?this._modelData.model.changeDecorations(callback,this._id):null}getLineDecorations(lineNumber){return this._modelData?this._modelData.model.getLineDecorations(lineNumber,this._id,(0,editorOptions/* filterValidationDecorations */.$J)(this._configuration.options)):null}deltaDecorations(oldDecorations,newDecorations){return this._modelData?0===oldDecorations.length&&0===newDecorations.length?oldDecorations:this._modelData.model.deltaDecorations(oldDecorations,newDecorations,this._id):[]}removeDecorations(decorationTypeKey){
// remove decorations for type and sub type
const oldDecorationsIds=this._decorationTypeKeysToIds[decorationTypeKey];oldDecorationsIds&&this.deltaDecorations(oldDecorationsIds,[]),this._decorationTypeKeysToIds.hasOwnProperty(decorationTypeKey)&&delete this._decorationTypeKeysToIds[decorationTypeKey],this._decorationTypeSubtypes.hasOwnProperty(decorationTypeKey)&&delete this._decorationTypeSubtypes[decorationTypeKey]}getLayoutInfo(){const options=this._configuration.options,layoutInfo=options.get(129/* layoutInfo */);return layoutInfo}createOverviewRuler(cssClassName){return this._modelData&&this._modelData.hasRealView?this._modelData.view.createOverviewRuler(cssClassName):null}getContainerDomNode(){return this._domElement}getDomNode(){return this._modelData&&this._modelData.hasRealView?this._modelData.view.domNode.domNode:null}delegateVerticalScrollbarMouseDown(browserEvent){this._modelData&&this._modelData.hasRealView&&this._modelData.view.delegateVerticalScrollbarMouseDown(browserEvent)}layout(dimension){this._configuration.observeReferenceElement(dimension),this.render()}focus(){this._modelData&&this._modelData.hasRealView&&this._modelData.view.focus()}hasTextFocus(){return!(!this._modelData||!this._modelData.hasRealView)&&this._modelData.view.isFocused()}hasWidgetFocus(){return this._focusTracker&&this._focusTracker.hasFocus()}addContentWidget(widget){const widgetData={widget:widget,position:widget.getPosition()};this._contentWidgets.hasOwnProperty(widget.getId()),this._contentWidgets[widget.getId()]=widgetData,this._modelData&&this._modelData.hasRealView&&this._modelData.view.addContentWidget(widgetData)}layoutContentWidget(widget){const widgetId=widget.getId();if(this._contentWidgets.hasOwnProperty(widgetId)){const widgetData=this._contentWidgets[widgetId];widgetData.position=widget.getPosition(),this._modelData&&this._modelData.hasRealView&&this._modelData.view.layoutContentWidget(widgetData)}}removeContentWidget(widget){const widgetId=widget.getId();if(this._contentWidgets.hasOwnProperty(widgetId)){const widgetData=this._contentWidgets[widgetId];delete this._contentWidgets[widgetId],this._modelData&&this._modelData.hasRealView&&this._modelData.view.removeContentWidget(widgetData)}}addOverlayWidget(widget){const widgetData={widget:widget,position:widget.getPosition()};this._overlayWidgets.hasOwnProperty(widget.getId()),this._overlayWidgets[widget.getId()]=widgetData,this._modelData&&this._modelData.hasRealView&&this._modelData.view.addOverlayWidget(widgetData)}layoutOverlayWidget(widget){const widgetId=widget.getId();if(this._overlayWidgets.hasOwnProperty(widgetId)){const widgetData=this._overlayWidgets[widgetId];widgetData.position=widget.getPosition(),this._modelData&&this._modelData.hasRealView&&this._modelData.view.layoutOverlayWidget(widgetData)}}removeOverlayWidget(widget){const widgetId=widget.getId();if(this._overlayWidgets.hasOwnProperty(widgetId)){const widgetData=this._overlayWidgets[widgetId];delete this._overlayWidgets[widgetId],this._modelData&&this._modelData.hasRealView&&this._modelData.view.removeOverlayWidget(widgetData)}}changeViewZones(callback){this._modelData&&this._modelData.hasRealView&&this._modelData.view.change(callback)}getTargetAtClientPoint(clientX,clientY){return this._modelData&&this._modelData.hasRealView?this._modelData.view.getTargetAtClientPoint(clientX,clientY):null}getScrolledVisiblePosition(rawPosition){if(!this._modelData||!this._modelData.hasRealView)return null;const position=this._modelData.model.validatePosition(rawPosition),options=this._configuration.options,layoutInfo=options.get(129/* layoutInfo */),top=CodeEditorWidget._getVerticalOffsetForPosition(this._modelData,position.lineNumber,position.column)-this.getScrollTop(),left=this._modelData.view.getOffsetForColumn(position.lineNumber,position.column)+layoutInfo.glyphMarginWidth+layoutInfo.lineNumbersWidth+layoutInfo.decorationsWidth-this.getScrollLeft();return{top:top,left:left,height:options.get(58/* lineHeight */)}}getOffsetForColumn(lineNumber,column){return this._modelData&&this._modelData.hasRealView?this._modelData.view.getOffsetForColumn(lineNumber,column):-1}render(forceRedraw=!1){this._modelData&&this._modelData.hasRealView&&this._modelData.view.render(!0,forceRedraw)}setAriaOptions(options){this._modelData&&this._modelData.hasRealView&&this._modelData.view.setAriaOptions(options)}applyFontInfo(target){configuration/* Configuration */.V.applyFontInfoSlow(target,this._configuration.options.get(43/* fontInfo */))}_attachModel(model){if(!model)return void(this._modelData=null);const listenersToRemove=[];this._domElement.setAttribute("data-mode-id",model.getLanguageId()),this._configuration.setIsDominatedByLongLines(model.isDominatedByLongLines()),this._configuration.setMaxLineNumber(model.getLineCount()),model.onBeforeAttached();const viewModel=new viewModelImpl/* ViewModel */.j(this._id,this._configuration,model,DOMLineBreaksComputerFactory.create(),monospaceLineBreaksComputer/* MonospaceLineBreaksComputerFactory */.p.create(this._configuration.options),(callback=>dom/* scheduleAtNextAnimationFrame */.jL(callback)));listenersToRemove.push(model.onDidChangeDecorations((e=>this._onDidChangeModelDecorations.fire(e)))),listenersToRemove.push(model.onDidChangeLanguage((e=>{this._domElement.setAttribute("data-mode-id",model.getLanguageId()),this._onDidChangeModelLanguage.fire(e)}))),listenersToRemove.push(model.onDidChangeLanguageConfiguration((e=>this._onDidChangeModelLanguageConfiguration.fire(e)))),listenersToRemove.push(model.onDidChangeContent((e=>this._onDidChangeModelContent.fire(e)))),listenersToRemove.push(model.onDidChangeOptions((e=>this._onDidChangeModelOptions.fire(e)))),
// Someone might destroy the model from under the editor, so prevent any exceptions by setting a null model
listenersToRemove.push(model.onWillDispose((()=>this.setModel(null)))),listenersToRemove.push(viewModel.onEvent((e=>{switch(e.kind){case 0/* ContentSizeChanged */:this._onDidContentSizeChange.fire(e);break;case 1/* FocusChanged */:this._editorTextFocus.setValue(e.hasFocus);break;case 2/* ScrollChanged */:this._onDidScrollChange.fire(e);break;case 3/* ViewZonesChanged */:this._onDidChangeViewZones.fire();break;case 4/* HiddenAreasChanged */:this._onDidChangeHiddenAreas.fire();break;case 5/* ReadOnlyEditAttempt */:this._onDidAttemptReadOnlyEdit.fire();break;case 6/* CursorStateChanged */:{e.reachedMaxCursorCount&&this._notificationService.warn(nls/* localize */.N("cursors.maximum","The number of cursors has been limited to {0}.",cursor/* CursorsController */.U.MAX_CURSOR_COUNT));const positions=[];for(let i=0,len=e.selections.length;i<len;i++)positions[i]=e.selections[i].getPosition();const e1={position:positions[0],secondaryPositions:positions.slice(1),reason:e.reason,source:e.source};this._onDidChangeCursorPosition.fire(e1);const e2={selection:e.selections[0],secondarySelections:e.selections.slice(1),modelVersionId:e.modelVersionId,oldSelections:e.oldSelections,oldModelVersionId:e.oldModelVersionId,source:e.source,reason:e.reason};this._onDidChangeCursorSelection.fire(e2);break}}})));const[view,hasRealView]=this._createView(viewModel);if(hasRealView){this._domElement.appendChild(view.domNode.domNode);let keys=Object.keys(this._contentWidgets);for(let i=0,len=keys.length;i<len;i++){const widgetId=keys[i];view.addContentWidget(this._contentWidgets[widgetId])}keys=Object.keys(this._overlayWidgets);for(let i=0,len=keys.length;i<len;i++){const widgetId=keys[i];view.addOverlayWidget(this._overlayWidgets[widgetId])}view.render(!1,!0),view.domNode.domNode.setAttribute("data-uri",model.uri.toString())}this._modelData=new ModelData(model,viewModel,view,hasRealView,listenersToRemove)}_createView(viewModel){let commandDelegate;commandDelegate=this.isSimpleWidget?{paste:(text,pasteOnNewLine,multicursorText,mode)=>{this._paste("keyboard",text,pasteOnNewLine,multicursorText,mode)},type:text=>{this._type("keyboard",text)},compositionType:(text,replacePrevCharCnt,replaceNextCharCnt,positionDelta)=>{this._compositionType("keyboard",text,replacePrevCharCnt,replaceNextCharCnt,positionDelta)},startComposition:()=>{this._startComposition()},endComposition:()=>{this._endComposition("keyboard")},cut:()=>{this._cut("keyboard")}}:{paste:(text,pasteOnNewLine,multicursorText,mode)=>{const payload={text:text,pasteOnNewLine:pasteOnNewLine,multicursorText:multicursorText,mode:mode};this._commandService.executeCommand("paste"/* Paste */,payload)},type:text=>{const payload={text:text};this._commandService.executeCommand("type"/* Type */,payload)},compositionType:(text,replacePrevCharCnt,replaceNextCharCnt,positionDelta)=>{
// Try if possible to go through the existing `replacePreviousChar` command
if(replaceNextCharCnt||positionDelta){
// must be handled through the new command
const payload={text:text,replacePrevCharCnt:replacePrevCharCnt,replaceNextCharCnt:replaceNextCharCnt,positionDelta:positionDelta};this._commandService.executeCommand("compositionType"/* CompositionType */,payload)}else{const payload={text:text,replaceCharCnt:replacePrevCharCnt};this._commandService.executeCommand("replacePreviousChar"/* ReplacePreviousChar */,payload)}},startComposition:()=>{this._commandService.executeCommand("compositionStart"/* CompositionStart */,{})},endComposition:()=>{this._commandService.executeCommand("compositionEnd"/* CompositionEnd */,{})},cut:()=>{this._commandService.executeCommand("cut"/* Cut */,{})}};const viewUserInputEvents=new ViewUserInputEvents(viewModel.coordinatesConverter);viewUserInputEvents.onKeyDown=e=>this._onKeyDown.fire(e),viewUserInputEvents.onKeyUp=e=>this._onKeyUp.fire(e),viewUserInputEvents.onContextMenu=e=>this._onContextMenu.fire(e),viewUserInputEvents.onMouseMove=e=>this._onMouseMove.fire(e),viewUserInputEvents.onMouseLeave=e=>this._onMouseLeave.fire(e),viewUserInputEvents.onMouseDown=e=>this._onMouseDown.fire(e),viewUserInputEvents.onMouseUp=e=>this._onMouseUp.fire(e),viewUserInputEvents.onMouseDrag=e=>this._onMouseDrag.fire(e),viewUserInputEvents.onMouseDrop=e=>this._onMouseDrop.fire(e),viewUserInputEvents.onMouseDropCanceled=e=>this._onMouseDropCanceled.fire(e),viewUserInputEvents.onMouseWheel=e=>this._onMouseWheel.fire(e);const view=new View(commandDelegate,this._configuration,this._themeService,viewModel,viewUserInputEvents,this._overflowWidgetsDomNode);return[view,!0]}_postDetachModelCleanup(detachedModel){detachedModel&&detachedModel.removeAllDecorationsWithOwnerId(this._id)}_detachModel(){if(!this._modelData)return null;const model=this._modelData.model,removeDomNode=this._modelData.hasRealView?this._modelData.view.domNode.domNode:null;return this._modelData.dispose(),this._modelData=null,this._domElement.removeAttribute("data-mode-id"),removeDomNode&&this._domElement.contains(removeDomNode)&&this._domElement.removeChild(removeDomNode),model}_removeDecorationType(key){this._codeEditorService.removeDecorationType(key)}hasModel(){return null!==this._modelData}};CodeEditorWidget=codeEditorWidget_decorate([codeEditorWidget_param(3,instantiation/* IInstantiationService */.TG),codeEditorWidget_param(4,codeEditorService/* ICodeEditorService */.$),codeEditorWidget_param(5,commands/* ICommandService */.H),codeEditorWidget_param(6,contextkey/* IContextKeyService */.i6),codeEditorWidget_param(7,themeService/* IThemeService */.XE),codeEditorWidget_param(8,notification/* INotificationService */.lT),codeEditorWidget_param(9,accessibility/* IAccessibilityService */.F)],CodeEditorWidget);class BooleanEventEmitter extends lifecycle/* Disposable */.JT{constructor(){super(),this._onDidChangeToTrue=this._register(new common_event/* Emitter */.Q5),this.onDidChangeToTrue=this._onDidChangeToTrue.event,this._onDidChangeToFalse=this._register(new common_event/* Emitter */.Q5),this.onDidChangeToFalse=this._onDidChangeToFalse.event,this._value=0/* NotSet */}setValue(_value){const value=_value?2/* True */:1/* False */;this._value!==value&&(this._value=value,2/* True */===this._value?this._onDidChangeToTrue.fire():1/* False */===this._value&&this._onDidChangeToFalse.fire())}}class EditorContextKeysManager extends lifecycle/* Disposable */.JT{constructor(editor,contextKeyService){super(),this._editor=editor,contextKeyService.createKey("editorId",editor.getId()),this._editorSimpleInput=editorContextKeys/* EditorContextKeys */.u.editorSimpleInput.bindTo(contextKeyService),this._editorFocus=editorContextKeys/* EditorContextKeys */.u.focus.bindTo(contextKeyService),this._textInputFocus=editorContextKeys/* EditorContextKeys */.u.textInputFocus.bindTo(contextKeyService),this._editorTextFocus=editorContextKeys/* EditorContextKeys */.u.editorTextFocus.bindTo(contextKeyService),this._editorTabMovesFocus=editorContextKeys/* EditorContextKeys */.u.tabMovesFocus.bindTo(contextKeyService),this._editorReadonly=editorContextKeys/* EditorContextKeys */.u.readOnly.bindTo(contextKeyService),this._inDiffEditor=editorContextKeys/* EditorContextKeys */.u.inDiffEditor.bindTo(contextKeyService),this._editorColumnSelection=editorContextKeys/* EditorContextKeys */.u.columnSelection.bindTo(contextKeyService),this._hasMultipleSelections=editorContextKeys/* EditorContextKeys */.u.hasMultipleSelections.bindTo(contextKeyService),this._hasNonEmptySelection=editorContextKeys/* EditorContextKeys */.u.hasNonEmptySelection.bindTo(contextKeyService),this._canUndo=editorContextKeys/* EditorContextKeys */.u.canUndo.bindTo(contextKeyService),this._canRedo=editorContextKeys/* EditorContextKeys */.u.canRedo.bindTo(contextKeyService),this._register(this._editor.onDidChangeConfiguration((()=>this._updateFromConfig()))),this._register(this._editor.onDidChangeCursorSelection((()=>this._updateFromSelection()))),this._register(this._editor.onDidFocusEditorWidget((()=>this._updateFromFocus()))),this._register(this._editor.onDidBlurEditorWidget((()=>this._updateFromFocus()))),this._register(this._editor.onDidFocusEditorText((()=>this._updateFromFocus()))),this._register(this._editor.onDidBlurEditorText((()=>this._updateFromFocus()))),this._register(this._editor.onDidChangeModel((()=>this._updateFromModel()))),this._register(this._editor.onDidChangeConfiguration((()=>this._updateFromModel()))),this._updateFromConfig(),this._updateFromSelection(),this._updateFromFocus(),this._updateFromModel(),this._editorSimpleInput.set(this._editor.isSimpleWidget)}_updateFromConfig(){const options=this._editor.getOptions();this._editorTabMovesFocus.set(options.get(128/* tabFocusMode */)),this._editorReadonly.set(options.get(80/* readOnly */)),this._inDiffEditor.set(options.get(53/* inDiffEditor */)),this._editorColumnSelection.set(options.get(18/* columnSelection */))}_updateFromSelection(){const selections=this._editor.getSelections();selections?(this._hasMultipleSelections.set(selections.length>1),this._hasNonEmptySelection.set(selections.some((s=>!s.isEmpty())))):(this._hasMultipleSelections.reset(),this._hasNonEmptySelection.reset())}_updateFromFocus(){this._editorFocus.set(this._editor.hasWidgetFocus()&&!this._editor.isSimpleWidget),this._editorTextFocus.set(this._editor.hasTextFocus()&&!this._editor.isSimpleWidget),this._textInputFocus.set(this._editor.hasTextFocus())}_updateFromModel(){const model=this._editor.getModel();this._canUndo.set(Boolean(model&&model.canUndo())),this._canRedo.set(Boolean(model&&model.canRedo()))}}class EditorModeContext extends lifecycle/* Disposable */.JT{constructor(_editor,_contextKeyService){super(),this._editor=_editor,this._contextKeyService=_contextKeyService,this._langId=editorContextKeys/* EditorContextKeys */.u.languageId.bindTo(_contextKeyService),this._hasCompletionItemProvider=editorContextKeys/* EditorContextKeys */.u.hasCompletionItemProvider.bindTo(_contextKeyService),this._hasCodeActionsProvider=editorContextKeys/* EditorContextKeys */.u.hasCodeActionsProvider.bindTo(_contextKeyService),this._hasCodeLensProvider=editorContextKeys/* EditorContextKeys */.u.hasCodeLensProvider.bindTo(_contextKeyService),this._hasDefinitionProvider=editorContextKeys/* EditorContextKeys */.u.hasDefinitionProvider.bindTo(_contextKeyService),this._hasDeclarationProvider=editorContextKeys/* EditorContextKeys */.u.hasDeclarationProvider.bindTo(_contextKeyService),this._hasImplementationProvider=editorContextKeys/* EditorContextKeys */.u.hasImplementationProvider.bindTo(_contextKeyService),this._hasTypeDefinitionProvider=editorContextKeys/* EditorContextKeys */.u.hasTypeDefinitionProvider.bindTo(_contextKeyService),this._hasHoverProvider=editorContextKeys/* EditorContextKeys */.u.hasHoverProvider.bindTo(_contextKeyService),this._hasDocumentHighlightProvider=editorContextKeys/* EditorContextKeys */.u.hasDocumentHighlightProvider.bindTo(_contextKeyService),this._hasDocumentSymbolProvider=editorContextKeys/* EditorContextKeys */.u.hasDocumentSymbolProvider.bindTo(_contextKeyService),this._hasReferenceProvider=editorContextKeys/* EditorContextKeys */.u.hasReferenceProvider.bindTo(_contextKeyService),this._hasRenameProvider=editorContextKeys/* EditorContextKeys */.u.hasRenameProvider.bindTo(_contextKeyService),this._hasSignatureHelpProvider=editorContextKeys/* EditorContextKeys */.u.hasSignatureHelpProvider.bindTo(_contextKeyService),this._hasInlayHintsProvider=editorContextKeys/* EditorContextKeys */.u.hasInlayHintsProvider.bindTo(_contextKeyService),this._hasDocumentFormattingProvider=editorContextKeys/* EditorContextKeys */.u.hasDocumentFormattingProvider.bindTo(_contextKeyService),this._hasDocumentSelectionFormattingProvider=editorContextKeys/* EditorContextKeys */.u.hasDocumentSelectionFormattingProvider.bindTo(_contextKeyService),this._hasMultipleDocumentFormattingProvider=editorContextKeys/* EditorContextKeys */.u.hasMultipleDocumentFormattingProvider.bindTo(_contextKeyService),this._hasMultipleDocumentSelectionFormattingProvider=editorContextKeys/* EditorContextKeys */.u.hasMultipleDocumentSelectionFormattingProvider.bindTo(_contextKeyService),this._isInWalkThrough=editorContextKeys/* EditorContextKeys */.u.isInWalkThroughSnippet.bindTo(_contextKeyService);const update=()=>this._update()
// update when model/mode changes;
this._register(_editor.onDidChangeModel(update)),this._register(_editor.onDidChangeModelLanguage(update)),
// update when registries change
this._register(modes/* CompletionProviderRegistry */.KZ.onDidChange(update)),this._register(modes/* CodeActionProviderRegistry */.H9.onDidChange(update)),this._register(modes/* CodeLensProviderRegistry */.He.onDidChange(update)),this._register(modes/* DefinitionProviderRegistry */.Ct.onDidChange(update)),this._register(modes/* DeclarationProviderRegistry */.RN.onDidChange(update)),this._register(modes/* ImplementationProviderRegistry */.vI.onDidChange(update)),this._register(modes/* TypeDefinitionProviderRegistry */.tA.onDidChange(update)),this._register(modes/* HoverProviderRegistry */.xp.onDidChange(update)),this._register(modes/* DocumentHighlightProviderRegistry */.vH.onDidChange(update)),this._register(modes/* DocumentSymbolProviderRegistry */.vJ.onDidChange(update)),this._register(modes/* ReferenceProviderRegistry */.FL.onDidChange(update)),this._register(modes/* RenameProviderRegistry */.G0.onDidChange(update)),this._register(modes/* DocumentFormattingEditProviderRegistry */.Az.onDidChange(update)),this._register(modes/* DocumentRangeFormattingEditProviderRegistry */.vN.onDidChange(update)),this._register(modes/* SignatureHelpProviderRegistry */.nD.onDidChange(update)),this._register(modes/* InlayHintsProviderRegistry */.mX.onDidChange(update)),update()}dispose(){super.dispose()}reset(){this._contextKeyService.bufferChangeEvents((()=>{this._langId.reset(),this._hasCompletionItemProvider.reset(),this._hasCodeActionsProvider.reset(),this._hasCodeLensProvider.reset(),this._hasDefinitionProvider.reset(),this._hasDeclarationProvider.reset(),this._hasImplementationProvider.reset(),this._hasTypeDefinitionProvider.reset(),this._hasHoverProvider.reset(),this._hasDocumentHighlightProvider.reset(),this._hasDocumentSymbolProvider.reset(),this._hasReferenceProvider.reset(),this._hasRenameProvider.reset(),this._hasDocumentFormattingProvider.reset(),this._hasDocumentSelectionFormattingProvider.reset(),this._hasSignatureHelpProvider.reset(),this._isInWalkThrough.reset()}))}_update(){const model=this._editor.getModel();model?this._contextKeyService.bufferChangeEvents((()=>{this._langId.set(model.getLanguageId()),this._hasCompletionItemProvider.set(modes/* CompletionProviderRegistry */.KZ.has(model)),this._hasCodeActionsProvider.set(modes/* CodeActionProviderRegistry */.H9.has(model)),this._hasCodeLensProvider.set(modes/* CodeLensProviderRegistry */.He.has(model)),this._hasDefinitionProvider.set(modes/* DefinitionProviderRegistry */.Ct.has(model)),this._hasDeclarationProvider.set(modes/* DeclarationProviderRegistry */.RN.has(model)),this._hasImplementationProvider.set(modes/* ImplementationProviderRegistry */.vI.has(model)),this._hasTypeDefinitionProvider.set(modes/* TypeDefinitionProviderRegistry */.tA.has(model)),this._hasHoverProvider.set(modes/* HoverProviderRegistry */.xp.has(model)),this._hasDocumentHighlightProvider.set(modes/* DocumentHighlightProviderRegistry */.vH.has(model)),this._hasDocumentSymbolProvider.set(modes/* DocumentSymbolProviderRegistry */.vJ.has(model)),this._hasReferenceProvider.set(modes/* ReferenceProviderRegistry */.FL.has(model)),this._hasRenameProvider.set(modes/* RenameProviderRegistry */.G0.has(model)),this._hasSignatureHelpProvider.set(modes/* SignatureHelpProviderRegistry */.nD.has(model)),this._hasInlayHintsProvider.set(modes/* InlayHintsProviderRegistry */.mX.has(model)),this._hasDocumentFormattingProvider.set(modes/* DocumentFormattingEditProviderRegistry */.Az.has(model)||modes/* DocumentRangeFormattingEditProviderRegistry */.vN.has(model)),this._hasDocumentSelectionFormattingProvider.set(modes/* DocumentRangeFormattingEditProviderRegistry */.vN.has(model)),this._hasMultipleDocumentFormattingProvider.set(modes/* DocumentFormattingEditProviderRegistry */.Az.all(model).length+modes/* DocumentRangeFormattingEditProviderRegistry */.vN.all(model).length>1),this._hasMultipleDocumentSelectionFormattingProvider.set(modes/* DocumentRangeFormattingEditProviderRegistry */.vN.all(model).length>1),this._isInWalkThrough.set(model.uri.scheme===network/* Schemas */.lg.walkThroughSnippet)})):this.reset()}}class CodeEditorWidgetFocusTracker extends lifecycle/* Disposable */.JT{constructor(domElement){super(),this._onChange=this._register(new common_event/* Emitter */.Q5),this.onChange=this._onChange.event,this._hasFocus=!1,this._domFocusTracker=this._register(dom/* trackFocus */.go(domElement)),this._register(this._domFocusTracker.onDidFocus((()=>{this._hasFocus=!0,this._onChange.fire(void 0)}))),this._register(this._domFocusTracker.onDidBlur((()=>{this._hasFocus=!1,this._onChange.fire(void 0)})))}hasFocus(){return this._hasFocus}}const squigglyStart=encodeURIComponent("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 3' enable-background='new 0 0 6 3' height='3' width='6'><g fill='"),squigglyEnd=encodeURIComponent("'><polygon points='5.5,0 2.5,3 1.1,3 4.1,0'/><polygon points='4,0 6,2 6,0.6 5.4,0'/><polygon points='0,2 1,3 2.4,3 0,0.6'/></g></svg>");function getSquigglySVGData(color){return squigglyStart+encodeURIComponent(color.toString())+squigglyEnd}const dotdotdotStart=encodeURIComponent('<svg xmlns="http://www.w3.org/2000/svg" height="3" width="12"><g fill="'),dotdotdotEnd=encodeURIComponent('"><circle cx="1" cy="1" r="1"/><circle cx="5" cy="1" r="1"/><circle cx="9" cy="1" r="1"/></g></svg>');function getDotDotDotSVGData(color){return dotdotdotStart+encodeURIComponent(color.toString())+dotdotdotEnd}(0,themeService/* registerThemingParticipant */.Ic)(((theme,collector)=>{const errorBorderColor=theme.getColor(colorRegistry/* editorErrorBorder */.b6);errorBorderColor&&collector.addRule(`.monaco-editor .squiggly-error { border-bottom: 4px double ${errorBorderColor}; }`);const errorForeground=theme.getColor(colorRegistry/* editorErrorForeground */.lX);errorForeground&&collector.addRule(`.monaco-editor .squiggly-error { background: url("data:image/svg+xml,${getSquigglySVGData(errorForeground)}") repeat-x bottom left; }`);const errorBackground=theme.getColor(colorRegistry/* editorErrorBackground */.A2);errorBackground&&collector.addRule(`.monaco-editor .squiggly-error::before { display: block; content: ''; width: 100%; height: 100%; background: ${errorBackground}; }`);const warningBorderColor=theme.getColor(colorRegistry/* editorWarningBorder */.pW);warningBorderColor&&collector.addRule(`.monaco-editor .squiggly-warning { border-bottom: 4px double ${warningBorderColor}; }`);const warningForeground=theme.getColor(colorRegistry/* editorWarningForeground */.uo);warningForeground&&collector.addRule(`.monaco-editor .squiggly-warning { background: url("data:image/svg+xml,${getSquigglySVGData(warningForeground)}") repeat-x bottom left; }`);const warningBackground=theme.getColor(colorRegistry/* editorWarningBackground */.gp);warningBackground&&collector.addRule(`.monaco-editor .squiggly-warning::before { display: block; content: ''; width: 100%; height: 100%; background: ${warningBackground}; }`);const infoBorderColor=theme.getColor(colorRegistry/* editorInfoBorder */.T8);infoBorderColor&&collector.addRule(`.monaco-editor .squiggly-info { border-bottom: 4px double ${infoBorderColor}; }`);const infoForeground=theme.getColor(colorRegistry/* editorInfoForeground */.c6);infoForeground&&collector.addRule(`.monaco-editor .squiggly-info { background: url("data:image/svg+xml,${getSquigglySVGData(infoForeground)}") repeat-x bottom left; }`);const infoBackground=theme.getColor(colorRegistry/* editorInfoBackground */.fe);infoBackground&&collector.addRule(`.monaco-editor .squiggly-info::before { display: block; content: ''; width: 100%; height: 100%; background: ${infoBackground}; }`);const hintBorderColor=theme.getColor(colorRegistry/* editorHintBorder */.fE);hintBorderColor&&collector.addRule(`.monaco-editor .squiggly-hint { border-bottom: 2px dotted ${hintBorderColor}; }`);const hintForeground=theme.getColor(colorRegistry/* editorHintForeground */.Du);hintForeground&&collector.addRule(`.monaco-editor .squiggly-hint { background: url("data:image/svg+xml,${getDotDotDotSVGData(hintForeground)}") no-repeat bottom left; }`);const unnecessaryForeground=theme.getColor(editorColorRegistry/* editorUnnecessaryCodeOpacity */.zu);unnecessaryForeground&&collector.addRule(`.monaco-editor.showUnused .squiggly-inline-unnecessary { opacity: ${unnecessaryForeground.rgba.a}; }`);const unnecessaryBorder=theme.getColor(editorColorRegistry/* editorUnnecessaryCodeBorder */.kp);unnecessaryBorder&&collector.addRule(`.monaco-editor.showUnused .squiggly-unnecessary { border-bottom: 2px dashed ${unnecessaryBorder}; }`);const deprecatedForeground=theme.getColor(colorRegistry/* editorForeground */.NO)||"inherit";collector.addRule(`.monaco-editor.showDeprecated .squiggly-inline-deprecated { text-decoration: line-through; text-decoration-color: ${deprecatedForeground}}`)}))},
/***/414869:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
// EXPORTS
__webpack_require__.d(__webpack_exports__,{p:function(){/* binding */return DiffEditorWidget}});
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/nls.js
var _a,nls=__webpack_require__(663580),dom=__webpack_require__(965321),fastDomNode=__webpack_require__(838626),sash=__webpack_require__(173098),common_async=__webpack_require__(715393),common_event=__webpack_require__(104669),lifecycle=__webpack_require__(905976),configuration=__webpack_require__(887917),editorState=__webpack_require__(355812),services_codeEditorService=__webpack_require__(611640),codeEditorWidget=__webpack_require__(8702),actionbar=__webpack_require__(790317),scrollableElement=__webpack_require__(263161),common_actions=__webpack_require__(74741),editorExtensions=__webpack_require__(616830),editorOptions=__webpack_require__(364141),core_lineTokens=__webpack_require__(878411),position=__webpack_require__(50187),editorColorRegistry=__webpack_require__(627869),viewLineRenderer=__webpack_require__(777736),viewModel=__webpack_require__(513824),contextkey=__webpack_require__(938819),colorRegistry=__webpack_require__(173910),themeService=__webpack_require__(897781),codicons=__webpack_require__(773046),iconRegistry=__webpack_require__(759554),modeService=__webpack_require__(771531),__decorate=function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}},__awaiter=function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/base/browser/dom.js
const DIFF_LINES_PADDING=3;class DiffEntry{constructor(originalLineStart,originalLineEnd,modifiedLineStart,modifiedLineEnd){this.originalLineStart=originalLineStart,this.originalLineEnd=originalLineEnd,this.modifiedLineStart=modifiedLineStart,this.modifiedLineEnd=modifiedLineEnd}getType(){return 0===this.originalLineStart?1/* Insert */:0===this.modifiedLineStart?2/* Delete */:0/* Equal */}}class Diff{constructor(entries){this.entries=entries}}const diffReviewInsertIcon=(0,iconRegistry/* registerIcon */.q5)("diff-review-insert",codicons/* Codicon */.lA.add,nls/* localize */.N("diffReviewInsertIcon","Icon for 'Insert' in diff review.")),diffReviewRemoveIcon=(0,iconRegistry/* registerIcon */.q5)("diff-review-remove",codicons/* Codicon */.lA.remove,nls/* localize */.N("diffReviewRemoveIcon","Icon for 'Remove' in diff review.")),diffReviewCloseIcon=(0,iconRegistry/* registerIcon */.q5)("diff-review-close",codicons/* Codicon */.lA.close,nls/* localize */.N("diffReviewCloseIcon","Icon for 'Close' in diff review."));let DiffReview=class DiffReview extends lifecycle/* Disposable */.JT{constructor(diffEditor,_modeService){super(),this._modeService=_modeService,this._width=0,this._diffEditor=diffEditor,this._isVisible=!1,this.shadow=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this.shadow.setClassName("diff-review-shadow"),this.actionBarContainer=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this.actionBarContainer.setClassName("diff-review-actions"),this._actionBar=this._register(new actionbar/* ActionBar */.o(this.actionBarContainer.domNode)),this._actionBar.push(new common_actions/* Action */.aU("diffreview.close",nls/* localize */.N("label.close","Close"),"close-diff-review "+themeService/* ThemeIcon */.kS.asClassName(diffReviewCloseIcon),!0,(()=>__awaiter(this,void 0,void 0,(function*(){return this.hide()})))),{label:!1,icon:!0}),this.domNode=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this.domNode.setClassName("diff-review monaco-editor-background"),this._content=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this._content.setClassName("diff-review-content"),this._content.setAttribute("role","code"),this.scrollbar=this._register(new scrollableElement/* DomScrollableElement */.s$(this._content.domNode,{})),this.domNode.domNode.appendChild(this.scrollbar.getDomNode()),this._register(diffEditor.onDidUpdateDiff((()=>{this._isVisible&&(this._diffs=this._compute(),this._render())}))),this._register(diffEditor.getModifiedEditor().onDidChangeCursorPosition((()=>{this._isVisible&&this._render()}))),this._register(dom/* addStandardDisposableListener */.mu(this.domNode.domNode,"click",(e=>{e.preventDefault();let row=dom/* findParentWithClass */.Fx(e.target,"diff-review-row");row&&this._goToRow(row)}))),this._register(dom/* addStandardDisposableListener */.mu(this.domNode.domNode,"keydown",(e=>{(e.equals(18/* DownArrow */)||e.equals(2066/* DownArrow */)||e.equals(530/* DownArrow */))&&(e.preventDefault(),this._goToRow(this._getNextRow())),(e.equals(16/* UpArrow */)||e.equals(2064/* UpArrow */)||e.equals(528/* UpArrow */))&&(e.preventDefault(),this._goToRow(this._getPrevRow())),(e.equals(9/* Escape */)||e.equals(2057/* Escape */)||e.equals(521/* Escape */)||e.equals(1033/* Escape */))&&(e.preventDefault(),this.hide()),(e.equals(10/* Space */)||e.equals(3/* Enter */))&&(e.preventDefault(),this.accept())}))),this._diffs=[],this._currentDiff=null}prev(){let index=0;if(this._isVisible||(this._diffs=this._compute()),this._isVisible){let currentIndex=-1;for(let i=0,len=this._diffs.length;i<len;i++)if(this._diffs[i]===this._currentDiff){currentIndex=i;break}index=this._diffs.length+currentIndex-1}else index=this._findDiffIndex(this._diffEditor.getPosition());if(0===this._diffs.length)
// Nothing to do
return;index%=this._diffs.length;const entries=this._diffs[index].entries;this._diffEditor.setPosition(new position/* Position */.L(entries[0].modifiedLineStart,1)),this._diffEditor.setSelection({startColumn:1,startLineNumber:entries[0].modifiedLineStart,endColumn:1073741824/* MAX_SAFE_SMALL_INTEGER */,endLineNumber:entries[entries.length-1].modifiedLineEnd}),this._isVisible=!0,this._diffEditor.doLayout(),this._render(),this._goToRow(this._getNextRow())}next(){let index=0;if(this._isVisible||(this._diffs=this._compute()),this._isVisible){let currentIndex=-1;for(let i=0,len=this._diffs.length;i<len;i++)if(this._diffs[i]===this._currentDiff){currentIndex=i;break}index=currentIndex+1}else index=this._findDiffIndex(this._diffEditor.getPosition());if(0===this._diffs.length)
// Nothing to do
return;index%=this._diffs.length;const entries=this._diffs[index].entries;this._diffEditor.setPosition(new position/* Position */.L(entries[0].modifiedLineStart,1)),this._diffEditor.setSelection({startColumn:1,startLineNumber:entries[0].modifiedLineStart,endColumn:1073741824/* MAX_SAFE_SMALL_INTEGER */,endLineNumber:entries[entries.length-1].modifiedLineEnd}),this._isVisible=!0,this._diffEditor.doLayout(),this._render(),this._goToRow(this._getNextRow())}accept(){let jumpToLineNumber=-1,current=this._getCurrentFocusedRow();if(current){let lineNumber=parseInt(current.getAttribute("data-line"),10);isNaN(lineNumber)||(jumpToLineNumber=lineNumber)}this.hide(),-1!==jumpToLineNumber&&(this._diffEditor.setPosition(new position/* Position */.L(jumpToLineNumber,1)),this._diffEditor.revealPosition(new position/* Position */.L(jumpToLineNumber,1),1/* Immediate */))}hide(){this._isVisible=!1,this._diffEditor.updateOptions({readOnly:!1}),this._diffEditor.focus(),this._diffEditor.doLayout(),this._render()}_getPrevRow(){let current=this._getCurrentFocusedRow();return current?current.previousElementSibling?current.previousElementSibling:current:this._getFirstRow()}_getNextRow(){let current=this._getCurrentFocusedRow();return current?current.nextElementSibling?current.nextElementSibling:current:this._getFirstRow()}_getFirstRow(){return this.domNode.domNode.querySelector(".diff-review-row")}_getCurrentFocusedRow(){let result=document.activeElement;return result&&/diff-review-row/.test(result.className)?result:null}_goToRow(row){let prev=this._getCurrentFocusedRow();row.tabIndex=0,row.focus(),prev&&prev!==row&&(prev.tabIndex=-1),this.scrollbar.scanDomNode()}isVisible(){return this._isVisible}layout(top,width,height){this._width=width,this.shadow.setTop(top-6),this.shadow.setWidth(width),this.shadow.setHeight(this._isVisible?6:0),this.domNode.setTop(top),this.domNode.setWidth(width),this.domNode.setHeight(height),this._content.setHeight(height),this._content.setWidth(width),this._isVisible?(this.actionBarContainer.setAttribute("aria-hidden","false"),this.actionBarContainer.setDisplay("block")):(this.actionBarContainer.setAttribute("aria-hidden","true"),this.actionBarContainer.setDisplay("none"))}_compute(){const lineChanges=this._diffEditor.getLineChanges();if(!lineChanges||0===lineChanges.length)return[];const originalModel=this._diffEditor.getOriginalEditor().getModel(),modifiedModel=this._diffEditor.getModifiedEditor().getModel();return originalModel&&modifiedModel?DiffReview._mergeAdjacent(lineChanges,originalModel.getLineCount(),modifiedModel.getLineCount()):[]}static _mergeAdjacent(lineChanges,originalLineCount,modifiedLineCount){if(!lineChanges||0===lineChanges.length)return[];let diffs=[],diffsLength=0;for(let i=0,len=lineChanges.length;i<len;i++){const lineChange=lineChanges[i],originalStart=lineChange.originalStartLineNumber,originalEnd=lineChange.originalEndLineNumber,modifiedStart=lineChange.modifiedStartLineNumber,modifiedEnd=lineChange.modifiedEndLineNumber;let r=[],rLength=0;
// Emit before anchors
{const originalEqualAbove=0===originalEnd?originalStart:originalStart-1,modifiedEqualAbove=0===modifiedEnd?modifiedStart:modifiedStart-1;
// Make sure we don't step into the previous diff
let minOriginal=1,minModified=1;if(i>0){const prevLineChange=lineChanges[i-1];minOriginal=0===prevLineChange.originalEndLineNumber?prevLineChange.originalStartLineNumber+1:prevLineChange.originalEndLineNumber+1,minModified=0===prevLineChange.modifiedEndLineNumber?prevLineChange.modifiedStartLineNumber+1:prevLineChange.modifiedEndLineNumber+1}let fromOriginal=originalEqualAbove-DIFF_LINES_PADDING+1,fromModified=modifiedEqualAbove-DIFF_LINES_PADDING+1;if(fromOriginal<minOriginal){const delta=minOriginal-fromOriginal;fromOriginal+=delta,fromModified+=delta}if(fromModified<minModified){const delta=minModified-fromModified;fromOriginal+=delta,fromModified+=delta}r[rLength++]=new DiffEntry(fromOriginal,originalEqualAbove,fromModified,modifiedEqualAbove)}
// Emit deleted lines
0!==originalEnd&&(r[rLength++]=new DiffEntry(originalStart,originalEnd,0,0)),0!==modifiedEnd&&(r[rLength++]=new DiffEntry(0,0,modifiedStart,modifiedEnd));
// Emit after anchors
{const originalEqualBelow=0===originalEnd?originalStart+1:originalEnd+1,modifiedEqualBelow=0===modifiedEnd?modifiedStart+1:modifiedEnd+1;
// Make sure we don't step into the next diff
let maxOriginal=originalLineCount,maxModified=modifiedLineCount;if(i+1<len){const nextLineChange=lineChanges[i+1];maxOriginal=0===nextLineChange.originalEndLineNumber?nextLineChange.originalStartLineNumber:nextLineChange.originalStartLineNumber-1,maxModified=0===nextLineChange.modifiedEndLineNumber?nextLineChange.modifiedStartLineNumber:nextLineChange.modifiedStartLineNumber-1}let toOriginal=originalEqualBelow+DIFF_LINES_PADDING-1,toModified=modifiedEqualBelow+DIFF_LINES_PADDING-1;if(toOriginal>maxOriginal){const delta=maxOriginal-toOriginal;toOriginal+=delta,toModified+=delta}if(toModified>maxModified){const delta=maxModified-toModified;toOriginal+=delta,toModified+=delta}r[rLength++]=new DiffEntry(originalEqualBelow,toOriginal,modifiedEqualBelow,toModified)}diffs[diffsLength++]=new Diff(r)}
// Merge adjacent diffs
let curr=diffs[0].entries,r=[],rLength=0;for(let i=1,len=diffs.length;i<len;i++){const thisDiff=diffs[i].entries,currLast=curr[curr.length-1],thisFirst=thisDiff[0];0/* Equal */===currLast.getType()&&0/* Equal */===thisFirst.getType()&&thisFirst.originalLineStart<=currLast.originalLineEnd?(
// We are dealing with equal lines that overlap
curr[curr.length-1]=new DiffEntry(currLast.originalLineStart,thisFirst.originalLineEnd,currLast.modifiedLineStart,thisFirst.modifiedLineEnd),curr=curr.concat(thisDiff.slice(1))):(r[rLength++]=new Diff(curr),curr=thisDiff)}return r[rLength++]=new Diff(curr),r}_findDiffIndex(pos){const lineNumber=pos.lineNumber;for(let i=0,len=this._diffs.length;i<len;i++){const diff=this._diffs[i].entries,lastModifiedLine=diff[diff.length-1].modifiedLineEnd;if(lineNumber<=lastModifiedLine)return i}return 0}_render(){const originalOptions=this._diffEditor.getOriginalEditor().getOptions(),modifiedOptions=this._diffEditor.getModifiedEditor().getOptions(),originalModel=this._diffEditor.getOriginalEditor().getModel(),modifiedModel=this._diffEditor.getModifiedEditor().getModel(),originalModelOpts=originalModel.getOptions(),modifiedModelOpts=modifiedModel.getOptions();if(!this._isVisible||!originalModel||!modifiedModel)return dom/* clearNode */.PO(this._content.domNode),this._currentDiff=null,void this.scrollbar.scanDomNode();this._diffEditor.updateOptions({readOnly:!0});const diffIndex=this._findDiffIndex(this._diffEditor.getPosition());if(this._diffs[diffIndex]===this._currentDiff)return;this._currentDiff=this._diffs[diffIndex];const diffs=this._diffs[diffIndex].entries;let container=document.createElement("div");container.className="diff-review-table",container.setAttribute("role","list"),container.setAttribute("aria-label",'Difference review. Use "Stage | Unstage | Revert Selected Ranges" commands'),configuration/* Configuration */.V.applyFontInfoSlow(container,modifiedOptions.get(43/* fontInfo */));let minOriginalLine=0,maxOriginalLine=0,minModifiedLine=0,maxModifiedLine=0;for(let i=0,len=diffs.length;i<len;i++){const diffEntry=diffs[i],originalLineStart=diffEntry.originalLineStart,originalLineEnd=diffEntry.originalLineEnd,modifiedLineStart=diffEntry.modifiedLineStart,modifiedLineEnd=diffEntry.modifiedLineEnd;0!==originalLineStart&&(0===minOriginalLine||originalLineStart<minOriginalLine)&&(minOriginalLine=originalLineStart),0!==originalLineEnd&&(0===maxOriginalLine||originalLineEnd>maxOriginalLine)&&(maxOriginalLine=originalLineEnd),0!==modifiedLineStart&&(0===minModifiedLine||modifiedLineStart<minModifiedLine)&&(minModifiedLine=modifiedLineStart),0!==modifiedLineEnd&&(0===maxModifiedLine||modifiedLineEnd>maxModifiedLine)&&(maxModifiedLine=modifiedLineEnd)}let header=document.createElement("div");header.className="diff-review-row";let cell=document.createElement("div");cell.className="diff-review-cell diff-review-summary";const originalChangedLinesCnt=maxOriginalLine-minOriginalLine+1,modifiedChangedLinesCnt=maxModifiedLine-minModifiedLine+1;cell.appendChild(document.createTextNode(`${diffIndex+1}/${this._diffs.length}: @@ -${minOriginalLine},${originalChangedLinesCnt} +${minModifiedLine},${modifiedChangedLinesCnt} @@`)),header.setAttribute("data-line",String(minModifiedLine));const getAriaLines=lines=>0===lines?nls/* localize */.N("no_lines_changed","no lines changed"):1===lines?nls/* localize */.N("one_line_changed","1 line changed"):nls/* localize */.N("more_lines_changed","{0} lines changed",lines),originalChangedLinesCntAria=getAriaLines(originalChangedLinesCnt),modifiedChangedLinesCntAria=getAriaLines(modifiedChangedLinesCnt);header.setAttribute("aria-label",nls/* localize */.N({key:"header",comment:["This is the ARIA label for a git diff header.","A git diff header looks like this: @@ -154,12 +159,39 @@.","That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.","Variables 0 and 1 refer to the diff index out of total number of diffs.","Variables 2 and 4 will be numbers (a line number).",'Variables 3 and 5 will be "no lines changed", "1 line changed" or "X lines changed", localized separately.']},"Difference {0} of {1}: original line {2}, {3}, modified line {4}, {5}",diffIndex+1,this._diffs.length,minOriginalLine,originalChangedLinesCntAria,minModifiedLine,modifiedChangedLinesCntAria)),header.appendChild(cell),
// @@ -504,7 +517,7 @@
header.setAttribute("role","listitem"),container.appendChild(header);const lineHeight=modifiedOptions.get(58/* lineHeight */);let modLine=minModifiedLine;for(let i=0,len=diffs.length;i<len;i++){const diffEntry=diffs[i];DiffReview._renderSection(container,diffEntry,modLine,lineHeight,this._width,originalOptions,originalModel,originalModelOpts,modifiedOptions,modifiedModel,modifiedModelOpts,this._modeService.languageIdCodec),0!==diffEntry.modifiedLineStart&&(modLine=diffEntry.modifiedLineEnd)}dom/* clearNode */.PO(this._content.domNode),this._content.domNode.appendChild(container),this.scrollbar.scanDomNode()}static _renderSection(dest,diffEntry,modLine,lineHeight,width,originalOptions,originalModel,originalModelOpts,modifiedOptions,modifiedModel,modifiedModelOpts,languageIdCodec){const type=diffEntry.getType();let rowClassName="diff-review-row",lineNumbersExtraClassName="";const spacerClassName="diff-review-spacer";let spacerIcon=null;switch(type){case 1/* Insert */:rowClassName="diff-review-row line-insert",lineNumbersExtraClassName=" char-insert",spacerIcon=diffReviewInsertIcon;break;case 2/* Delete */:rowClassName="diff-review-row line-delete",lineNumbersExtraClassName=" char-delete",spacerIcon=diffReviewRemoveIcon;break}const originalLineStart=diffEntry.originalLineStart,originalLineEnd=diffEntry.originalLineEnd,modifiedLineStart=diffEntry.modifiedLineStart,modifiedLineEnd=diffEntry.modifiedLineEnd,cnt=Math.max(modifiedLineEnd-modifiedLineStart,originalLineEnd-originalLineStart),originalLayoutInfo=originalOptions.get(129/* layoutInfo */),originalLineNumbersWidth=originalLayoutInfo.glyphMarginWidth+originalLayoutInfo.lineNumbersWidth,modifiedLayoutInfo=modifiedOptions.get(129/* layoutInfo */),modifiedLineNumbersWidth=10+modifiedLayoutInfo.glyphMarginWidth+modifiedLayoutInfo.lineNumbersWidth;for(let i=0;i<=cnt;i++){const originalLine=0===originalLineStart?0:originalLineStart+i,modifiedLine=0===modifiedLineStart?0:modifiedLineStart+i,row=document.createElement("div");row.style.minWidth=width+"px",row.className=rowClassName,row.setAttribute("role","listitem"),0!==modifiedLine&&(modLine=modifiedLine),row.setAttribute("data-line",String(modLine));let cell=document.createElement("div");cell.className="diff-review-cell",cell.style.height=`${lineHeight}px`,row.appendChild(cell);const originalLineNumber=document.createElement("span");originalLineNumber.style.width=originalLineNumbersWidth+"px",originalLineNumber.style.minWidth=originalLineNumbersWidth+"px",originalLineNumber.className="diff-review-line-number"+lineNumbersExtraClassName,0!==originalLine?originalLineNumber.appendChild(document.createTextNode(String(originalLine))):originalLineNumber.innerText=" ",cell.appendChild(originalLineNumber);const modifiedLineNumber=document.createElement("span");modifiedLineNumber.style.width=modifiedLineNumbersWidth+"px",modifiedLineNumber.style.minWidth=modifiedLineNumbersWidth+"px",modifiedLineNumber.style.paddingRight="10px",modifiedLineNumber.className="diff-review-line-number"+lineNumbersExtraClassName,0!==modifiedLine?modifiedLineNumber.appendChild(document.createTextNode(String(modifiedLine))):modifiedLineNumber.innerText=" ",cell.appendChild(modifiedLineNumber);const spacer=document.createElement("span");if(spacer.className=spacerClassName,spacerIcon){const spacerCodicon=document.createElement("span");spacerCodicon.className=themeService/* ThemeIcon */.kS.asClassName(spacerIcon),spacerCodicon.innerText="  ",spacer.appendChild(spacerCodicon)}else spacer.innerText="  ";let lineContent;if(cell.appendChild(spacer),0!==modifiedLine){let html=this._renderLine(modifiedModel,modifiedOptions,modifiedModelOpts.tabSize,modifiedLine,languageIdCodec);DiffReview._ttPolicy&&(html=DiffReview._ttPolicy.createHTML(html)),cell.insertAdjacentHTML("beforeend",html),lineContent=modifiedModel.getLineContent(modifiedLine)}else{let html=this._renderLine(originalModel,originalOptions,originalModelOpts.tabSize,originalLine,languageIdCodec);DiffReview._ttPolicy&&(html=DiffReview._ttPolicy.createHTML(html)),cell.insertAdjacentHTML("beforeend",html),lineContent=originalModel.getLineContent(originalLine)}0===lineContent.length&&(lineContent=nls/* localize */.N("blankLine","blank"));let ariaLabel="";switch(type){case 0/* Equal */:ariaLabel=originalLine===modifiedLine?nls/* localize */.N({key:"unchangedLine",comment:["The placeholders are contents of the line and should not be translated."]},"{0} unchanged line {1}",lineContent,originalLine):nls/* localize */.N("equalLine","{0} original line {1} modified line {2}",lineContent,originalLine,modifiedLine);break;case 1/* Insert */:ariaLabel=nls/* localize */.N("insertLine","+ {0} modified line {1}",lineContent,modifiedLine);break;case 2/* Delete */:ariaLabel=nls/* localize */.N("deleteLine","- {0} original line {1}",lineContent,originalLine);break}row.setAttribute("aria-label",ariaLabel),dest.appendChild(row)}}static _renderLine(model,options,tabSize,lineNumber,languageIdCodec){const lineContent=model.getLineContent(lineNumber),fontInfo=options.get(43/* fontInfo */),lineTokens=core_lineTokens/* LineTokens */.A.createEmpty(lineContent,languageIdCodec),isBasicASCII=viewModel/* ViewLineRenderingData */.wA.isBasicASCII(lineContent,model.mightContainNonBasicASCII()),containsRTL=viewModel/* ViewLineRenderingData */.wA.containsRTL(lineContent,isBasicASCII,model.mightContainRTL()),r=(0,viewLineRenderer/* renderViewLine2 */.tF)(new viewLineRenderer/* RenderLineInput */.IJ(fontInfo.isMonospace&&!options.get(29/* disableMonospaceOptimizations */),fontInfo.canUseHalfwidthRightwardsArrow,lineContent,!1,isBasicASCII,containsRTL,0,lineTokens,[],tabSize,0,fontInfo.spaceWidth,fontInfo.middotWidth,fontInfo.wsmiddotWidth,options.get(104/* stopRenderingLineAfter */),options.get(87/* renderWhitespace */),options.get(82/* renderControlCharacters */),options.get(44/* fontLigatures */)!==editorOptions/* EditorFontLigatures */.n0.OFF,null));return r.html}};DiffReview._ttPolicy=null===(_a=window.trustedTypes)||void 0===_a?void 0:_a.createPolicy("diffReview",{createHTML:value=>value}),DiffReview=__decorate([__param(1,modeService/* IModeService */.h)],DiffReview),
// theming
(0,themeService/* registerThemingParticipant */.Ic)(((theme,collector)=>{const lineNumbers=theme.getColor(editorColorRegistry/* editorLineNumbers */.hw);lineNumbers&&collector.addRule(`.monaco-diff-editor .diff-review-line-number { color: ${lineNumbers}; }`);const shadow=theme.getColor(colorRegistry/* scrollbarShadow */._w);shadow&&collector.addRule(`.monaco-diff-editor .diff-review-shadow { box-shadow: ${shadow} 0 -6px 6px -6px inset; }`)}));class DiffReviewNext extends editorExtensions/* EditorAction */.R6{constructor(){super({id:"editor.action.diffReview.next",label:nls/* localize */.N("editor.action.diffReview.next","Go to Next Difference"),alias:"Go to Next Difference",precondition:contextkey/* ContextKeyExpr */.Ao.has("isInDiffEditor"),kbOpts:{kbExpr:null,primary:65/* F7 */,weight:100/* EditorContrib */}})}run(accessor,editor){const diffEditor=findFocusedDiffEditor(accessor);diffEditor&&diffEditor.diffReviewNext()}}class DiffReviewPrev extends editorExtensions/* EditorAction */.R6{constructor(){super({id:"editor.action.diffReview.prev",label:nls/* localize */.N("editor.action.diffReview.prev","Go to Previous Difference"),alias:"Go to Previous Difference",precondition:contextkey/* ContextKeyExpr */.Ao.has("isInDiffEditor"),kbOpts:{kbExpr:null,primary:1089/* F7 */,weight:100/* EditorContrib */}})}run(accessor,editor){const diffEditor=findFocusedDiffEditor(accessor);diffEditor&&diffEditor.diffReviewPrev()}}function findFocusedDiffEditor(accessor){const codeEditorService=accessor.get(services_codeEditorService/* ICodeEditorService */.$),diffEditors=codeEditorService.listDiffEditors(),activeCodeEditor=codeEditorService.getActiveCodeEditor();if(!activeCodeEditor)return null;for(let i=0,len=diffEditors.length;i<len;i++){const diffEditor=diffEditors[i];if(diffEditor.getModifiedEditor().getId()===activeCodeEditor.getId()||diffEditor.getOriginalEditor().getId()===activeCodeEditor.getId())return diffEditor}return null}(0,editorExtensions/* registerEditorAction */.Qr)(DiffReviewNext),(0,editorExtensions/* registerEditorAction */.Qr)(DiffReviewPrev);
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/core/range.js
var core_range=__webpack_require__(624314),stringBuilder=__webpack_require__(150072),editorCommon=__webpack_require__(296518),textModel=__webpack_require__(724979),editorWorkerService=__webpack_require__(590469),overviewZoneManager=__webpack_require__(92003),lineDecorations=__webpack_require__(92550),instantiation=__webpack_require__(472065),serviceCollection=__webpack_require__(260972),notification=__webpack_require__(759422),contextView=__webpack_require__(705606),inlineDiffMargin_awaiter=function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/editor/common/core/stringBuilder.js
class InlineDiffMargin extends lifecycle/* Disposable */.JT{constructor(_viewZoneId,_marginDomNode,editor,diff,_contextMenuService,_clipboardService){super(),this._viewZoneId=_viewZoneId,this._marginDomNode=_marginDomNode,this.editor=editor,this.diff=diff,this._contextMenuService=_contextMenuService,this._clipboardService=_clipboardService,this._visibility=!1,
// make sure the diff margin shows above overlay.
this._marginDomNode.style.zIndex="10",this._diffActions=document.createElement("div"),this._diffActions.className=codicons/* Codicon */.lA.lightBulb.classNames+" lightbulb-glyph",this._diffActions.style.position="absolute";const lineHeight=editor.getOption(58/* lineHeight */),lineFeed=editor.getModel().getEOL();this._diffActions.style.right="0px",this._diffActions.style.visibility="hidden",this._diffActions.style.height=`${lineHeight}px`,this._diffActions.style.lineHeight=`${lineHeight}px`,this._marginDomNode.appendChild(this._diffActions);const actions=[],isDeletion=0===diff.modifiedEndLineNumber;
// default action
actions.push(new common_actions/* Action */.aU("diff.clipboard.copyDeletedContent",isDeletion?diff.originalEndLineNumber>diff.modifiedStartLineNumber?nls/* localize */.N("diff.clipboard.copyDeletedLinesContent.label","Copy deleted lines"):nls/* localize */.N("diff.clipboard.copyDeletedLinesContent.single.label","Copy deleted line"):diff.originalEndLineNumber>diff.modifiedStartLineNumber?nls/* localize */.N("diff.clipboard.copyChangedLinesContent.label","Copy changed lines"):nls/* localize */.N("diff.clipboard.copyChangedLinesContent.single.label","Copy changed line"),void 0,!0,(()=>inlineDiffMargin_awaiter(this,void 0,void 0,(function*(){const range=new core_range/* Range */.e(diff.originalStartLineNumber,1,diff.originalEndLineNumber+1,1),deletedText=diff.originalModel.getValueInRange(range);yield this._clipboardService.writeText(deletedText)})))));let copyLineAction,currentLineNumberOffset=0;diff.originalEndLineNumber>diff.modifiedStartLineNumber&&(copyLineAction=new common_actions/* Action */.aU("diff.clipboard.copyDeletedLineContent",isDeletion?nls/* localize */.N("diff.clipboard.copyDeletedLineContent.label","Copy deleted line ({0})",diff.originalStartLineNumber):nls/* localize */.N("diff.clipboard.copyChangedLineContent.label","Copy changed line ({0})",diff.originalStartLineNumber),void 0,!0,(()=>inlineDiffMargin_awaiter(this,void 0,void 0,(function*(){const lineContent=diff.originalModel.getLineContent(diff.originalStartLineNumber+currentLineNumberOffset);if(""===lineContent){
// empty line
const eof=diff.originalModel.getEndOfLineSequence();yield this._clipboardService.writeText(0/* LF */===eof?"\n":"\r\n")}else yield this._clipboardService.writeText(lineContent)})))),actions.push(copyLineAction));const readOnly=editor.getOption(80/* readOnly */);readOnly||actions.push(new common_actions/* Action */.aU("diff.inline.revertChange",nls/* localize */.N("diff.inline.revertChange.label","Revert this change"),void 0,!0,(()=>inlineDiffMargin_awaiter(this,void 0,void 0,(function*(){const range=new core_range/* Range */.e(diff.originalStartLineNumber,1,diff.originalEndLineNumber,diff.originalModel.getLineMaxColumn(diff.originalEndLineNumber)),deletedText=diff.originalModel.getValueInRange(range);if(0===diff.modifiedEndLineNumber){
// deletion only
const column=editor.getModel().getLineMaxColumn(diff.modifiedStartLineNumber);editor.executeEdits("diffEditor",[{range:new core_range/* Range */.e(diff.modifiedStartLineNumber,column,diff.modifiedStartLineNumber,column),text:lineFeed+deletedText}])}else{const column=editor.getModel().getLineMaxColumn(diff.modifiedEndLineNumber);editor.executeEdits("diffEditor",[{range:new core_range/* Range */.e(diff.modifiedStartLineNumber,1,diff.modifiedEndLineNumber,column),text:deletedText}])}})))));const showContextMenu=(x,y)=>{this._contextMenuService.showContextMenu({getAnchor:()=>({x:x,y:y}),getActions:()=>(copyLineAction&&(copyLineAction.label=isDeletion?nls/* localize */.N("diff.clipboard.copyDeletedLineContent.label","Copy deleted line ({0})",diff.originalStartLineNumber+currentLineNumberOffset):nls/* localize */.N("diff.clipboard.copyChangedLineContent.label","Copy changed line ({0})",diff.originalStartLineNumber+currentLineNumberOffset)),actions),autoSelectFirstItem:!0})};this._register(dom/* addStandardDisposableListener */.mu(this._diffActions,"mousedown",(e=>{const{top:top,height:height}=dom/* getDomNodePagePosition */.i(this._diffActions);let pad=Math.floor(lineHeight/3);e.preventDefault(),showContextMenu(e.posx,top+height+pad)}))),this._register(editor.onMouseMove((e=>{if(8/* CONTENT_VIEW_ZONE */===e.target.type||5/* GUTTER_VIEW_ZONE */===e.target.type){const viewZoneId=e.target.detail.viewZoneId;viewZoneId===this._viewZoneId?(this.visibility=!0,currentLineNumberOffset=this._updateLightBulbPosition(this._marginDomNode,e.event.browserEvent.y,lineHeight)):this.visibility=!1}else this.visibility=!1}))),this._register(editor.onMouseDown((e=>{if(e.event.rightButton&&(8/* CONTENT_VIEW_ZONE */===e.target.type||5/* GUTTER_VIEW_ZONE */===e.target.type)){const viewZoneId=e.target.detail.viewZoneId;viewZoneId===this._viewZoneId&&(e.event.preventDefault(),currentLineNumberOffset=this._updateLightBulbPosition(this._marginDomNode,e.event.browserEvent.y,lineHeight),showContextMenu(e.event.posx,e.event.posy+lineHeight))}})))}get visibility(){return this._visibility}set visibility(_visibility){this._visibility!==_visibility&&(this._visibility=_visibility,this._diffActions.style.visibility=_visibility?"visible":"hidden")}_updateLightBulbPosition(marginDomNode,y,lineHeight){const{top:top}=dom/* getDomNodePagePosition */.i(marginDomNode),offset=y-top,lineNumberOffset=Math.floor(offset/lineHeight),newTop=lineNumberOffset*lineHeight;if(this._diffActions.style.top=`${newTop}px`,this.diff.viewLineCounts){let acc=0;for(let i=0;i<this.diff.viewLineCounts.length;i++)if(acc+=this.diff.viewLineCounts[i],lineNumberOffset<acc)return i}return lineNumberOffset}}
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js
var diffEditorWidget_a,clipboardService=__webpack_require__(184972),errors=__webpack_require__(817301),progress=__webpack_require__(190535),elementSizeObserver=__webpack_require__(254534),mouseCursor=__webpack_require__(596542),diffEditorWidget_decorate=function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},diffEditorWidget_param=function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};
// EXTERNAL MODULE: ./node_modules/monaco-editor/esm/vs/base/common/errors.js
class VisualEditorState{constructor(_contextMenuService,_clipboardService){this._contextMenuService=_contextMenuService,this._clipboardService=_clipboardService,this._zones=[],this._inlineDiffMargins=[],this._zonesMap={},this._decorations=[]}getForeignViewZones(allViewZones){return allViewZones.filter((z=>!this._zonesMap[String(z.id)]))}clean(editor){
// (1) View zones
this._zones.length>0&&editor.changeViewZones((viewChangeAccessor=>{for(const zoneId of this._zones)viewChangeAccessor.removeZone(zoneId)})),this._zones=[],this._zonesMap={},
// (2) Model decorations
this._decorations=editor.deltaDecorations(this._decorations,[])}apply(editor,overviewRuler,newDecorations,restoreScrollState){const scrollState=restoreScrollState?editorState/* StableEditorScrollState */.ZF.capture(editor):null;
// view zones
editor.changeViewZones((viewChangeAccessor=>{var _a;for(const zoneId of this._zones)viewChangeAccessor.removeZone(zoneId);for(const inlineDiffMargin of this._inlineDiffMargins)inlineDiffMargin.dispose();this._zones=[],this._zonesMap={},this._inlineDiffMargins=[];for(let i=0,length=newDecorations.zones.length;i<length;i++){const viewZone=newDecorations.zones[i];viewZone.suppressMouseDown=!0;const zoneId=viewChangeAccessor.addZone(viewZone);this._zones.push(zoneId),this._zonesMap[String(zoneId)]=!0,newDecorations.zones[i].diff&&viewZone.marginDomNode&&(viewZone.suppressMouseDown=!1,0!==(null===(_a=newDecorations.zones[i].diff)||void 0===_a?void 0:_a.originalModel.getValueLength())&&
// do not contribute diff margin actions for newly created files
this._inlineDiffMargins.push(new InlineDiffMargin(zoneId,viewZone.marginDomNode,editor,newDecorations.zones[i].diff,this._contextMenuService,this._clipboardService)))}})),scrollState&&scrollState.restore(editor),
// decorations
this._decorations=editor.deltaDecorations(this._decorations,newDecorations.decorations),
// overview ruler
overviewRuler&&overviewRuler.setZones(newDecorations.overviewZones)}}let DIFF_EDITOR_ID=0;const diffInsertIcon=(0,iconRegistry/* registerIcon */.q5)("diff-insert",codicons/* Codicon */.lA.add,nls/* localize */.N("diffInsertIcon","Line decoration for inserts in the diff editor.")),diffRemoveIcon=(0,iconRegistry/* registerIcon */.q5)("diff-remove",codicons/* Codicon */.lA.remove,nls/* localize */.N("diffRemoveIcon","Line decoration for removals in the diff editor.")),ttPolicy=null===(diffEditorWidget_a=window.trustedTypes)||void 0===diffEditorWidget_a?void 0:diffEditorWidget_a.createPolicy("diffEditorWidget",{createHTML:value=>value});let DiffEditorWidget=class DiffEditorWidget extends lifecycle/* Disposable */.JT{constructor(domElement,options,codeEditorWidgetOptions,clipboardService,editorWorkerService,contextKeyService,instantiationService,codeEditorService,themeService,notificationService,contextMenuService,_editorProgressService){super(),this._editorProgressService=_editorProgressService,this._onDidDispose=this._register(new common_event/* Emitter */.Q5),this.onDidDispose=this._onDidDispose.event,this._onDidUpdateDiff=this._register(new common_event/* Emitter */.Q5),this.onDidUpdateDiff=this._onDidUpdateDiff.event,this._onDidContentSizeChange=this._register(new common_event/* Emitter */.Q5),this._lastOriginalWarning=null,this._lastModifiedWarning=null,this._editorWorkerService=editorWorkerService,this._codeEditorService=codeEditorService,this._contextKeyService=this._register(contextKeyService.createScoped(domElement)),this._instantiationService=instantiationService.createChild(new serviceCollection/* ServiceCollection */.y([contextkey/* IContextKeyService */.i6,this._contextKeyService])),this._contextKeyService.createKey("isInDiffEditor",!0),this._themeService=themeService,this._notificationService=notificationService,this._id=++DIFF_EDITOR_ID,this._state=0/* Idle */,this._updatingDiffProgress=null,this._domElement=domElement,options=options||{},this._options=validateDiffEditorOptions(options,{enableSplitViewResizing:!0,renderSideBySide:!0,maxComputationTime:5e3,maxFileSize:50,ignoreTrimWhitespace:!0,renderIndicators:!0,originalEditable:!1,diffCodeLens:!1,renderOverviewRuler:!0,diffWordWrap:"inherit"}),"undefined"!==typeof options.isInEmbeddedEditor?this._contextKeyService.createKey("isInEmbeddedDiffEditor",options.isInEmbeddedEditor):this._contextKeyService.createKey("isInEmbeddedDiffEditor",!1),this._updateDecorationsRunner=this._register(new common_async/* RunOnceScheduler */.pY((()=>this._updateDecorations()),0)),this._containerDomElement=document.createElement("div"),this._containerDomElement.className=DiffEditorWidget._getClassName(this._themeService.getColorTheme(),this._options.renderSideBySide),this._containerDomElement.style.position="relative",this._containerDomElement.style.height="100%",this._domElement.appendChild(this._containerDomElement),this._overviewViewportDomElement=(0,fastDomNode/* createFastDomNode */.X)(document.createElement("div")),this._overviewViewportDomElement.setClassName("diffViewport"),this._overviewViewportDomElement.setPosition("absolute"),this._overviewDomElement=document.createElement("div"),this._overviewDomElement.className="diffOverview",this._overviewDomElement.style.position="absolute",this._overviewDomElement.appendChild(this._overviewViewportDomElement.domNode),this._register(dom/* addStandardDisposableListener */.mu(this._overviewDomElement,"mousedown",(e=>{this._modifiedEditor.delegateVerticalScrollbarMouseDown(e)}))),this._options.renderOverviewRuler&&this._containerDomElement.appendChild(this._overviewDomElement),
// Create left side
this._originalDomNode=document.createElement("div"),this._originalDomNode.className="editor original",this._originalDomNode.style.position="absolute",this._originalDomNode.style.height="100%",this._containerDomElement.appendChild(this._originalDomNode),
// Create right side
this._modifiedDomNode=document.createElement("div"),this._modifiedDomNode.className="editor modified",this._modifiedDomNode.style.position="absolute",this._modifiedDomNode.style.height="100%",this._containerDomElement.appendChild(this._modifiedDomNode),this._beginUpdateDecorationsTimeout=-1,this._currentlyChangingViewZones=!1,this._diffComputationToken=0,this._originalEditorState=new VisualEditorState(contextMenuService,clipboardService),this._modifiedEditorState=new VisualEditorState(contextMenuService,clipboardService),this._isVisible=!0,this._isHandlingScrollEvent=!1,this._elementSizeObserver=this._register(new elementSizeObserver/* ElementSizeObserver */.I(this._containerDomElement,options.dimension,(()=>this._onDidContainerSizeChanged()))),options.automaticLayout&&this._elementSizeObserver.startObserving(),this._diffComputationResult=null,this._originalEditor=this._createLeftHandSideEditor(options,codeEditorWidgetOptions.originalEditor||{}),this._modifiedEditor=this._createRightHandSideEditor(options,codeEditorWidgetOptions.modifiedEditor||{}),this._originalOverviewRuler=null,this._modifiedOverviewRuler=null,this._reviewPane=instantiationService.createInstance(DiffReview,this),this._containerDomElement.appendChild(this._reviewPane.domNode.domNode),this._containerDomElement.appendChild(this._reviewPane.shadow.domNode),this._containerDomElement.appendChild(this._reviewPane.actionBarContainer.domNode),this._options.renderSideBySide?this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(),this._options.enableSplitViewResizing)):this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(),this._options.enableSplitViewResizing)),this._register(themeService.onDidColorThemeChange((t=>{this._strategy&&this._strategy.applyColors(t)&&this._updateDecorationsRunner.schedule(),this._containerDomElement.className=DiffEditorWidget._getClassName(this._themeService.getColorTheme(),this._options.renderSideBySide)})));const contributions=editorExtensions/* EditorExtensionsRegistry */.Uc.getDiffEditorContributions();for(const desc of contributions)try{this._register(instantiationService.createInstance(desc.ctor,this))}catch(err){(0,errors/* onUnexpectedError */.dL)(err)}this._codeEditorService.addDiffEditor(this)}_setState(newState){this._state!==newState&&(this._state=newState,this._updatingDiffProgress&&(this._updatingDiffProgress.done(),this._updatingDiffProgress=null),1/* ComputingDiff */===this._state&&(this._updatingDiffProgress=this._editorProgressService.show(!0,1e3)))}diffReviewNext(){this._reviewPane.next()}diffReviewPrev(){this._reviewPane.prev()}static _getClassName(theme,renderSideBySide){let result="monaco-diff-editor monaco-editor-background ";return renderSideBySide&&(result+="side-by-side "),result+=(0,themeService/* getThemeTypeSelector */.m6)(theme.type),result}_recreateOverviewRulers(){this._options.renderOverviewRuler&&(this._originalOverviewRuler&&(this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode()),this._originalOverviewRuler.dispose()),this._originalEditor.hasModel()&&(this._originalOverviewRuler=this._originalEditor.createOverviewRuler("original diffOverviewRuler"),this._overviewDomElement.appendChild(this._originalOverviewRuler.getDomNode())),this._modifiedOverviewRuler&&(this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode()),this._modifiedOverviewRuler.dispose()),this._modifiedEditor.hasModel()&&(this._modifiedOverviewRuler=this._modifiedEditor.createOverviewRuler("modified diffOverviewRuler"),this._overviewDomElement.appendChild(this._modifiedOverviewRuler.getDomNode())),this._layoutOverviewRulers())}_createLeftHandSideEditor(options,codeEditorWidgetOptions){const editor=this._createInnerEditor(this._instantiationService,this._originalDomNode,this._adjustOptionsForLeftHandSide(options),codeEditorWidgetOptions);this._register(editor.onDidScrollChange((e=>{this._isHandlingScrollEvent||(e.scrollTopChanged||e.scrollLeftChanged||e.scrollHeightChanged)&&(this._isHandlingScrollEvent=!0,this._modifiedEditor.setScrollPosition({scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}),this._isHandlingScrollEvent=!1,this._layoutOverviewViewport())}))),this._register(editor.onDidChangeViewZones((()=>{this._onViewZonesChanged()}))),this._register(editor.onDidChangeConfiguration((e=>{editor.getModel()&&(e.hasChanged(43/* fontInfo */)&&this._updateDecorationsRunner.schedule(),e.hasChanged(130/* wrappingInfo */)&&(this._updateDecorationsRunner.cancel(),this._updateDecorations()))}))),this._register(editor.onDidChangeHiddenAreas((()=>{this._updateDecorationsRunner.cancel(),this._updateDecorations()}))),this._register(editor.onDidChangeModelContent((()=>{this._isVisible&&this._beginUpdateDecorationsSoon()})));const isInDiffLeftEditorKey=this._contextKeyService.createKey("isInDiffLeftEditor",editor.hasWidgetFocus());return this._register(editor.onDidFocusEditorWidget((()=>isInDiffLeftEditorKey.set(!0)))),this._register(editor.onDidBlurEditorWidget((()=>isInDiffLeftEditorKey.set(!1)))),this._register(editor.onDidContentSizeChange((e=>{const width=this._originalEditor.getContentWidth()+this._modifiedEditor.getContentWidth()+DiffEditorWidget.ONE_OVERVIEW_WIDTH,height=Math.max(this._modifiedEditor.getContentHeight(),this._originalEditor.getContentHeight());this._onDidContentSizeChange.fire({contentHeight:height,contentWidth:width,contentHeightChanged:e.contentHeightChanged,contentWidthChanged:e.contentWidthChanged})}))),editor}_createRightHandSideEditor(options,codeEditorWidgetOptions){const editor=this._createInnerEditor(this._instantiationService,this._modifiedDomNode,this._adjustOptionsForRightHandSide(options),codeEditorWidgetOptions);this._register(editor.onDidScrollChange((e=>{this._isHandlingScrollEvent||(e.scrollTopChanged||e.scrollLeftChanged||e.scrollHeightChanged)&&(this._isHandlingScrollEvent=!0,this._originalEditor.setScrollPosition({scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}),this._isHandlingScrollEvent=!1,this._layoutOverviewViewport())}))),this._register(editor.onDidChangeViewZones((()=>{this._onViewZonesChanged()}))),this._register(editor.onDidChangeConfiguration((e=>{editor.getModel()&&(e.hasChanged(43/* fontInfo */)&&this._updateDecorationsRunner.schedule(),e.hasChanged(130/* wrappingInfo */)&&(this._updateDecorationsRunner.cancel(),this._updateDecorations()))}))),this._register(editor.onDidChangeHiddenAreas((()=>{this._updateDecorationsRunner.cancel(),this._updateDecorations()}))),this._register(editor.onDidChangeModelContent((()=>{this._isVisible&&this._beginUpdateDecorationsSoon()}))),this._register(editor.onDidChangeModelOptions((e=>{e.tabSize&&this._updateDecorationsRunner.schedule()})));const isInDiffRightEditorKey=this._contextKeyService.createKey("isInDiffRightEditor",editor.hasWidgetFocus());return this._register(editor.onDidFocusEditorWidget((()=>isInDiffRightEditorKey.set(!0)))),this._register(editor.onDidBlurEditorWidget((()=>isInDiffRightEditorKey.set(!1)))),this._register(editor.onDidContentSizeChange((e=>{const width=this._originalEditor.getContentWidth()+this._modifiedEditor.getContentWidth()+DiffEditorWidget.ONE_OVERVIEW_WIDTH,height=Math.max(this._modifiedEditor.getContentHeight(),this._originalEditor.getContentHeight());this._onDidContentSizeChange.fire({contentHeight:height,contentWidth:width,contentHeightChanged:e.contentHeightChanged,contentWidthChanged:e.contentWidthChanged})}))),editor}_createInnerEditor(instantiationService,container,options,editorWidgetOptions){return instantiationService.createInstance(codeEditorWidget/* CodeEditorWidget */.Gm,container,options,editorWidgetOptions)}dispose(){this._codeEditorService.removeDiffEditor(this),-1!==this._beginUpdateDecorationsTimeout&&(window.clearTimeout(this._beginUpdateDecorationsTimeout),this._beginUpdateDecorationsTimeout=-1),this._cleanViewZonesAndDecorations(),this._originalOverviewRuler&&(this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode()),this._originalOverviewRuler.dispose()),this._modifiedOverviewRuler&&(this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode()),this._modifiedOverviewRuler.dispose()),this._overviewDomElement.removeChild(this._overviewViewportDomElement.domNode),this._options.renderOverviewRuler&&this._containerDomElement.removeChild(this._overviewDomElement),this._containerDomElement.removeChild(this._originalDomNode),this._originalEditor.dispose(),this._containerDomElement.removeChild(this._modifiedDomNode),this._modifiedEditor.dispose(),this._strategy.dispose(),this._containerDomElement.removeChild(this._reviewPane.domNode.domNode),this._containerDomElement.removeChild(this._reviewPane.shadow.domNode),this._containerDomElement.removeChild(this._reviewPane.actionBarContainer.domNode),this._reviewPane.dispose(),this._domElement.removeChild(this._containerDomElement),this._onDidDispose.fire(),super.dispose()}
//------------ begin IDiffEditor methods
getId(){return this.getEditorType()+":"+this._id}getEditorType(){return editorCommon/* EditorType */.g.IDiffEditor}getLineChanges(){return this._diffComputationResult?this._diffComputationResult.changes:null}getOriginalEditor(){return this._originalEditor}getModifiedEditor(){return this._modifiedEditor}updateOptions(_newOptions){const newOptions=validateDiffEditorOptions(_newOptions,this._options),changed=changedDiffEditorOptions(this._options,newOptions);this._options=newOptions;const beginUpdateDecorations=changed.ignoreTrimWhitespace||changed.renderIndicators,beginUpdateDecorationsSoon=this._isVisible&&(changed.maxComputationTime||changed.maxFileSize);beginUpdateDecorations?this._beginUpdateDecorations():beginUpdateDecorationsSoon&&this._beginUpdateDecorationsSoon(),this._modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(_newOptions)),this._originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(_newOptions)),
// enableSplitViewResizing
this._strategy.setEnableSplitViewResizing(this._options.enableSplitViewResizing),
// renderSideBySide
changed.renderSideBySide&&(this._options.renderSideBySide?this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(),this._options.enableSplitViewResizing)):this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(),this._options.enableSplitViewResizing)),
// Update class name
this._containerDomElement.className=DiffEditorWidget._getClassName(this._themeService.getColorTheme(),this._options.renderSideBySide)),
// renderOverviewRuler
changed.renderOverviewRuler&&(this._options.renderOverviewRuler?this._containerDomElement.appendChild(this._overviewDomElement):this._containerDomElement.removeChild(this._overviewDomElement))}getModel(){return{original:this._originalEditor.getModel(),modified:this._modifiedEditor.getModel()}}setModel(model){
// Guard us against partial null model
if(model&&(!model.original||!model.modified))throw new Error(model.original?"DiffEditorWidget.setModel: Modified model is null":"DiffEditorWidget.setModel: Original model is null");
// Remove all view zones & decorations
this._cleanViewZonesAndDecorations(),
// Update code editor models
this._originalEditor.setModel(model?model.original:null),this._modifiedEditor.setModel(model?model.modified:null),this._updateDecorationsRunner.cancel(),
// this.originalEditor.onDidChangeModelOptions
model&&(this._originalEditor.setScrollTop(0),this._modifiedEditor.setScrollTop(0)),
// Disable any diff computations that will come in
this._diffComputationResult=null,this._diffComputationToken++,this._setState(0/* Idle */),model&&(this._recreateOverviewRulers(),
// Begin comparing
this._beginUpdateDecorations()),this._layoutOverviewViewport()}getDomNode(){return this._domElement}getVisibleColumnFromPosition(position){return this._modifiedEditor.getVisibleColumnFromPosition(position)}getPosition(){return this._modifiedEditor.getPosition()}setPosition(position){this._modifiedEditor.setPosition(position)}revealLine(lineNumber,scrollType=0/* Smooth */){this._modifiedEditor.revealLine(lineNumber,scrollType)}revealLineInCenter(lineNumber,scrollType=0/* Smooth */){this._modifiedEditor.revealLineInCenter(lineNumber,scrollType)}revealLineInCenterIfOutsideViewport(lineNumber,scrollType=0/* Smooth */){this._modifiedEditor.revealLineInCenterIfOutsideViewport(lineNumber,scrollType)}revealLineNearTop(lineNumber,scrollType=0/* Smooth */){this._modifiedEditor.revealLineNearTop(lineNumber,scrollType)}revealPosition(position,scrollType=0/* Smooth */){this._modifiedEditor.revealPosition(position,scrollType)}revealPositionInCenter(position,scrollType=0/* Smooth */){this._modifiedEditor.revealPositionInCenter(position,scrollType)}revealPositionInCenterIfOutsideViewport(position,scrollType=0/* Smooth */){this._modifiedEditor.revealPositionInCenterIfOutsideViewport(position,scrollType)}revealPositionNearTop(position,scrollType=0/* Smooth */){this._modifiedEditor.revealPositionNearTop(position,scrollType)}getSelection(){return this._modifiedEditor.getSelection()}getSelections(){return this._modifiedEditor.getSelections()}setSelection(something){this._modifiedEditor.setSelection(something)}setSelections(ranges){this._modifiedEditor.setSelections(ranges)}revealLines(startLineNumber,endLineNumber,scrollType=0/* Smooth */){this._modifiedEditor.revealLines(startLineNumber,endLineNumber,scrollType)}revealLinesInCenter(startLineNumber,endLineNumber,scrollType=0/* Smooth */){this._modifiedEditor.revealLinesInCenter(startLineNumber,endLineNumber,scrollType)}revealLinesInCenterIfOutsideViewport(startLineNumber,endLineNumber,scrollType=0/* Smooth */){this._modifiedEditor.revealLinesInCenterIfOutsideViewport(startLineNumber,endLineNumber,scrollType)}revealLinesNearTop(startLineNumber,endLineNumber,scrollType=0/* Smooth */){this._modifiedEditor.revealLinesNearTop(startLineNumber,endLineNumber,scrollType)}revealRange(range,scrollType=0/* Smooth */,revealVerticalInCenter=!1,revealHorizontal=!0){this._modifiedEditor.revealRange(range,scrollType,revealVerticalInCenter,revealHorizontal)}revealRangeInCenter(range,scrollType=0/* Smooth */){this._modifiedEditor.revealRangeInCenter(range,scrollType)}revealRangeInCenterIfOutsideViewport(range,scrollType=0/* Smooth */){this._modifiedEditor.revealRangeInCenterIfOutsideViewport(range,scrollType)}revealRangeNearTop(range,scrollType=0/* Smooth */){this._modifiedEditor.revealRangeNearTop(range,scrollType)}revealRangeNearTopIfOutsideViewport(range,scrollType=0/* Smooth */){this._modifiedEditor.revealRangeNearTopIfOutsideViewport(range,scrollType)}revealRangeAtTop(range,scrollType=0/* Smooth */){this._modifiedEditor.revealRangeAtTop(range,scrollType)}getSupportedActions(){return this._modifiedEditor.getSupportedActions()}saveViewState(){const originalViewState=this._originalEditor.saveViewState(),modifiedViewState=this._modifiedEditor.saveViewState();return{original:originalViewState,modified:modifiedViewState}}restoreViewState(s){if(s&&s.original&&s.modified){const diffEditorState=s;this._originalEditor.restoreViewState(diffEditorState.original),this._modifiedEditor.restoreViewState(diffEditorState.modified)}}layout(dimension){this._elementSizeObserver.observe(dimension)}focus(){this._modifiedEditor.focus()}hasTextFocus(){return this._originalEditor.hasTextFocus()||this._modifiedEditor.hasTextFocus()}trigger(source,handlerId,payload){this._modifiedEditor.trigger(source,handlerId,payload)}changeDecorations(callback){return this._modifiedEditor.changeDecorations(callback)}
//------------ end IDiffEditor methods
//------------ begin layouting methods
_onDidContainerSizeChanged(){this._doLayout()}_getReviewHeight(){return this._reviewPane.isVisible()?this._elementSizeObserver.getHeight():0}_layoutOverviewRulers(){if(!this._options.renderOverviewRuler)return;if(!this._originalOverviewRuler||!this._modifiedOverviewRuler)return;const height=this._elementSizeObserver.getHeight(),reviewHeight=this._getReviewHeight(),freeSpace=DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH-2*DiffEditorWidget.ONE_OVERVIEW_WIDTH,layoutInfo=this._modifiedEditor.getLayoutInfo();layoutInfo&&(this._originalOverviewRuler.setLayout({top:0,width:DiffEditorWidget.ONE_OVERVIEW_WIDTH,right:freeSpace+DiffEditorWidget.ONE_OVERVIEW_WIDTH,height:height-reviewHeight}),this._modifiedOverviewRuler.setLayout({top:0,right:0,width:DiffEditorWidget.ONE_OVERVIEW_WIDTH,height:height-reviewHeight}))}
//------------ end layouting methods
_onViewZonesChanged(){this._currentlyChangingViewZones||this._updateDecorationsRunner.schedule()}_beginUpdateDecorationsSoon(){
// Clear previous timeout if necessary
-1!==this._beginUpdateDecorationsTimeout&&(window.clearTimeout(this._beginUpdateDecorationsTimeout),this._beginUpdateDecorationsTimeout=-1),this._beginUpdateDecorationsTimeout=window.setTimeout((()=>this._beginUpdateDecorations()),DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY)}static _equals(a,b){return!a&&!b||!(!a||!b)&&a.toString()===b.toString()}_beginUpdateDecorations(){this._beginUpdateDecorationsTimeout=-1;const currentOriginalModel=this._originalEditor.getModel(),currentModifiedModel=this._modifiedEditor.getModel();if(!currentOriginalModel||!currentModifiedModel)return;
// Prevent old diff requests to come if a new request has been initiated
// The best method would be to call cancel on the Promise, but this is not
// yet supported, so using tokens for now.
this._diffComputationToken++;const currentToken=this._diffComputationToken,diffLimit=1024*this._options.maxFileSize*1024,canSyncModelForDiff=model=>{const bufferTextLength=model.getValueLength();return 0===diffLimit||bufferTextLength<=diffLimit};canSyncModelForDiff(currentOriginalModel)&&canSyncModelForDiff(currentModifiedModel)?(this._setState(1/* ComputingDiff */),this._editorWorkerService.computeDiff(currentOriginalModel.uri,currentModifiedModel.uri,this._options.ignoreTrimWhitespace,this._options.maxComputationTime).then((result=>{currentToken===this._diffComputationToken&&currentOriginalModel===this._originalEditor.getModel()&&currentModifiedModel===this._modifiedEditor.getModel()&&(this._setState(2/* DiffComputed */),this._diffComputationResult=result,this._updateDecorationsRunner.schedule(),this._onDidUpdateDiff.fire())}),(error=>{currentToken===this._diffComputationToken&&currentOriginalModel===this._originalEditor.getModel()&&currentModifiedModel===this._modifiedEditor.getModel()&&(this._setState(2/* DiffComputed */),this._diffComputationResult=null,this._updateDecorationsRunner.schedule())}))):DiffEditorWidget._equals(currentOriginalModel.uri,this._lastOriginalWarning)&&DiffEditorWidget._equals(currentModifiedModel.uri,this._lastModifiedWarning)||(this._lastOriginalWarning=currentOriginalModel.uri,this._lastModifiedWarning=currentModifiedModel.uri,this._notificationService.warn(nls/* localize */.N("diff.tooLarge","Cannot compare files because one file is too large.")))}_cleanViewZonesAndDecorations(){this._originalEditorState.clean(this._originalEditor),this._modifiedEditorState.clean(this._modifiedEditor)}_updateDecorations(){if(!this._originalEditor.getModel()||!this._modifiedEditor.getModel())return;const lineChanges=this._diffComputationResult?this._diffComputationResult.changes:[],foreignOriginal=this._originalEditorState.getForeignViewZones(this._originalEditor.getWhitespaces()),foreignModified=this._modifiedEditorState.getForeignViewZones(this._modifiedEditor.getWhitespaces()),diffDecorations=this._strategy.getEditorsDiffDecorations(lineChanges,this._options.ignoreTrimWhitespace,this._options.renderIndicators,foreignOriginal,foreignModified);try{this._currentlyChangingViewZones=!0,this._originalEditorState.apply(this._originalEditor,this._originalOverviewRuler,diffDecorations.original,!1),this._modifiedEditorState.apply(this._modifiedEditor,this._modifiedOverviewRuler,diffDecorations.modified,!0)}finally{this._currentlyChangingViewZones=!1}}_adjustOptionsForSubEditor(options){const clonedOptions=Object.assign({},options);return clonedOptions.inDiffEditor=!0,clonedOptions.automaticLayout=!1,
// Clone scrollbar options before changing them
clonedOptions.scrollbar=Object.assign({},clonedOptions.scrollbar||{}),clonedOptions.scrollbar.vertical="visible",clonedOptions.folding=!1,clonedOptions.codeLens=this._options.diffCodeLens,clonedOptions.fixedOverflowWidgets=!0,
// clonedOptions.lineDecorationsWidth = '2ch';
// Clone minimap options before changing them
clonedOptions.minimap=Object.assign({},clonedOptions.minimap||{}),clonedOptions.minimap.enabled=!1,clonedOptions}_adjustOptionsForLeftHandSide(options){const result=this._adjustOptionsForSubEditor(options);return this._options.renderSideBySide?result.wordWrapOverride1=this._options.diffWordWrap:
// never wrap hidden editor
result.wordWrapOverride1="off",options.originalAriaLabel&&(result.ariaLabel=options.originalAriaLabel),result.readOnly=!this._options.originalEditable,result.extraEditorClassName="original-in-monaco-diff-editor",Object.assign(Object.assign({},result),{dimension:{height:0,width:0}})}_adjustOptionsForRightHandSide(options){const result=this._adjustOptionsForSubEditor(options);return options.modifiedAriaLabel&&(result.ariaLabel=options.modifiedAriaLabel),result.wordWrapOverride1=this._options.diffWordWrap,result.revealHorizontalRightPadding=editorOptions/* EditorOptions */.BH.revealHorizontalRightPadding.defaultValue+DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH,result.scrollbar.verticalHasArrows=!1,result.extraEditorClassName="modified-in-monaco-diff-editor",Object.assign(Object.assign({},result),{dimension:{height:0,width:0}})}doLayout(){this._elementSizeObserver.observe(),this._doLayout()}_doLayout(){const width=this._elementSizeObserver.getWidth(),height=this._elementSizeObserver.getHeight(),reviewHeight=this._getReviewHeight(),splitPoint=this._strategy.layout();this._originalDomNode.style.width=splitPoint+"px",this._originalDomNode.style.left="0px",this._modifiedDomNode.style.width=width-splitPoint+"px",this._modifiedDomNode.style.left=splitPoint+"px",this._overviewDomElement.style.top="0px",this._overviewDomElement.style.height=height-reviewHeight+"px",this._overviewDomElement.style.width=DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH+"px",this._overviewDomElement.style.left=width-DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH+"px",this._overviewViewportDomElement.setWidth(DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH),this._overviewViewportDomElement.setHeight(30),this._originalEditor.layout({width:splitPoint,height:height-reviewHeight}),this._modifiedEditor.layout({width:width-splitPoint-(this._options.renderOverviewRuler?DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH:0),height:height-reviewHeight}),(this._originalOverviewRuler||this._modifiedOverviewRuler)&&this._layoutOverviewRulers(),this._reviewPane.layout(height-reviewHeight,width,reviewHeight),this._layoutOverviewViewport()}_layoutOverviewViewport(){const layout=this._computeOverviewViewport();layout?(this._overviewViewportDomElement.setTop(layout.top),this._overviewViewportDomElement.setHeight(layout.height)):(this._overviewViewportDomElement.setTop(0),this._overviewViewportDomElement.setHeight(0))}_computeOverviewViewport(){const layoutInfo=this._modifiedEditor.getLayoutInfo();if(!layoutInfo)return null;const scrollTop=this._modifiedEditor.getScrollTop(),scrollHeight=this._modifiedEditor.getScrollHeight(),computedAvailableSize=Math.max(0,layoutInfo.height),computedRepresentableSize=Math.max(0,computedAvailableSize-0),computedRatio=scrollHeight>0?computedRepresentableSize/scrollHeight:0,computedSliderSize=Math.max(0,Math.floor(layoutInfo.height*computedRatio)),computedSliderPosition=Math.floor(scrollTop*computedRatio);return{height:computedSliderSize,top:computedSliderPosition}}_createDataSource(){return{getWidth:()=>this._elementSizeObserver.getWidth(),getHeight:()=>this._elementSizeObserver.getHeight()-this._getReviewHeight(),getOptions:()=>({renderOverviewRuler:this._options.renderOverviewRuler}),getContainerDomNode:()=>this._containerDomElement,relayoutEditors:()=>{this._doLayout()},getOriginalEditor:()=>this._originalEditor,getModifiedEditor:()=>this._modifiedEditor}}_setStrategy(newStrategy){this._strategy&&this._strategy.dispose(),this._strategy=newStrategy,newStrategy.applyColors(this._themeService.getColorTheme()),this._diffComputationResult&&this._updateDecorations(),
// Just do a layout, the strategy might need it
this._doLayout()}_getLineChangeAtOrBeforeLineNumber(lineNumber,startLineNumberExtractor){const lineChanges=this._diffComputationResult?this._diffComputationResult.changes:[];if(0===lineChanges.length||lineNumber<startLineNumberExtractor(lineChanges[0]))
// There are no changes or `lineNumber` is before the first change
return null;let min=0,max=lineChanges.length-1;while(min<max){const mid=Math.floor((min+max)/2),midStart=startLineNumberExtractor(lineChanges[mid]),midEnd=mid+1<=max?startLineNumberExtractor(lineChanges[mid+1]):1073741824/* MAX_SAFE_SMALL_INTEGER */;lineNumber<midStart?max=mid-1:lineNumber>=midEnd?min=mid+1:(
// HIT!
min=mid,max=mid)}return lineChanges[min]}_getEquivalentLineForOriginalLineNumber(lineNumber){const lineChange=this._getLineChangeAtOrBeforeLineNumber(lineNumber,(lineChange=>lineChange.originalStartLineNumber));if(!lineChange)return lineNumber;const originalEquivalentLineNumber=lineChange.originalStartLineNumber+(lineChange.originalEndLineNumber>0?-1:0),modifiedEquivalentLineNumber=lineChange.modifiedStartLineNumber+(lineChange.modifiedEndLineNumber>0?-1:0),lineChangeOriginalLength=lineChange.originalEndLineNumber>0?lineChange.originalEndLineNumber-lineChange.originalStartLineNumber+1:0,lineChangeModifiedLength=lineChange.modifiedEndLineNumber>0?lineChange.modifiedEndLineNumber-lineChange.modifiedStartLineNumber+1:0,delta=lineNumber-originalEquivalentLineNumber;return delta<=lineChangeOriginalLength?modifiedEquivalentLineNumber+Math.min(delta,lineChangeModifiedLength):modifiedEquivalentLineNumber+lineChangeModifiedLength-lineChangeOriginalLength+delta}_getEquivalentLineForModifiedLineNumber(lineNumber){const lineChange=this._getLineChangeAtOrBeforeLineNumber(lineNumber,(lineChange=>lineChange.modifiedStartLineNumber));if(!lineChange)return lineNumber;const originalEquivalentLineNumber=lineChange.originalStartLineNumber+(lineChange.originalEndLineNumber>0?-1:0),modifiedEquivalentLineNumber=lineChange.modifiedStartLineNumber+(lineChange.modifiedEndLineNumber>0?-1:0),lineChangeOriginalLength=lineChange.originalEndLineNumber>0?lineChange.originalEndLineNumber-lineChange.originalStartLineNumber+1:0,lineChangeModifiedLength=lineChange.modifiedEndLineNumber>0?lineChange.modifiedEndLineNumber-lineChange.modifiedStartLineNumber+1:0,delta=lineNumber-modifiedEquivalentLineNumber;return delta<=lineChangeModifiedLength?originalEquivalentLineNumber+Math.min(delta,lineChangeOriginalLength):originalEquivalentLineNumber+lineChangeOriginalLength-lineChangeModifiedLength+delta}getDiffLineInformationForOriginal(lineNumber){return this._diffComputationResult?{equivalentLineNumber:this._getEquivalentLineForOriginalLineNumber(lineNumber)}:null}getDiffLineInformationForModified(lineNumber){return this._diffComputationResult?{equivalentLineNumber:this._getEquivalentLineForModifiedLineNumber(lineNumber)}:null}};DiffEditorWidget.ONE_OVERVIEW_WIDTH=15,DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH=30,DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY=200,// ms
DiffEditorWidget=diffEditorWidget_decorate([diffEditorWidget_param(3,clipboardService/* IClipboardService */.p),diffEditorWidget_param(4,editorWorkerService/* IEditorWorkerService */.p),diffEditorWidget_param(5,contextkey/* IContextKeyService */.i6),diffEditorWidget_param(6,instantiation/* IInstantiationService */.TG),diffEditorWidget_param(7,services_codeEditorService/* ICodeEditorService */.$),diffEditorWidget_param(8,themeService/* IThemeService */.XE),diffEditorWidget_param(9,notification/* INotificationService */.lT),diffEditorWidget_param(10,contextView/* IContextMenuService */.i),diffEditorWidget_param(11,progress/* IEditorProgressService */.e)],DiffEditorWidget);class DiffEditorWidgetStyle extends lifecycle/* Disposable */.JT{constructor(dataSource){super(),this._dataSource=dataSource,this._insertColor=null,this._removeColor=null}applyColors(theme){const newInsertColor=(theme.getColor(colorRegistry/* diffInserted */.yp)||colorRegistry/* defaultInsertColor */.Cz).transparent(2),newRemoveColor=(theme.getColor(colorRegistry/* diffRemoved */.P4)||colorRegistry/* defaultRemoveColor */.ke).transparent(2),hasChanges=!newInsertColor.equals(this._insertColor)||!newRemoveColor.equals(this._removeColor);return this._insertColor=newInsertColor,this._removeColor=newRemoveColor,hasChanges}getEditorsDiffDecorations(lineChanges,ignoreTrimWhitespace,renderIndicators,originalWhitespaces,modifiedWhitespaces){
// Get view zones
modifiedWhitespaces=modifiedWhitespaces.sort(((a,b)=>a.afterLineNumber-b.afterLineNumber)),originalWhitespaces=originalWhitespaces.sort(((a,b)=>a.afterLineNumber-b.afterLineNumber));const zones=this._getViewZones(lineChanges,originalWhitespaces,modifiedWhitespaces,renderIndicators),originalDecorations=this._getOriginalEditorDecorations(lineChanges,ignoreTrimWhitespace,renderIndicators),modifiedDecorations=this._getModifiedEditorDecorations(lineChanges,ignoreTrimWhitespace,renderIndicators);
// Get decorations & overview ruler zones
return{original:{decorations:originalDecorations.decorations,overviewZones:originalDecorations.overviewZones,zones:zones.original},modified:{decorations:modifiedDecorations.decorations,overviewZones:modifiedDecorations.overviewZones,zones:zones.modified}}}}class ForeignViewZonesIterator{constructor(source){this._source=source,this._index=-1,this.current=null,this.advance()}advance(){this._index++,this._index<this._source.length?this.current=this._source[this._index]:this.current=null}}class ViewZonesComputer{constructor(_lineChanges,_originalForeignVZ,_modifiedForeignVZ,_originalEditor,_modifiedEditor){this._lineChanges=_lineChanges,this._originalForeignVZ=_originalForeignVZ,this._modifiedForeignVZ=_modifiedForeignVZ,this._originalEditor=_originalEditor,this._modifiedEditor=_modifiedEditor}static _getViewLineCount(editor,startLineNumber,endLineNumber){const model=editor.getModel(),viewModel=editor._getViewModel();if(model&&viewModel){const viewRange=getViewRange(model,viewModel,startLineNumber,endLineNumber);return viewRange.endLineNumber-viewRange.startLineNumber+1}return endLineNumber-startLineNumber+1}getViewZones(){const originalLineHeight=this._originalEditor.getOption(58/* lineHeight */),modifiedLineHeight=this._modifiedEditor.getOption(58/* lineHeight */),originalHasWrapping=-1!==this._originalEditor.getOption(130/* wrappingInfo */).wrappingColumn,modifiedHasWrapping=-1!==this._modifiedEditor.getOption(130/* wrappingInfo */).wrappingColumn,hasWrapping=originalHasWrapping||modifiedHasWrapping,originalModel=this._originalEditor.getModel(),originalCoordinatesConverter=this._originalEditor._getViewModel().coordinatesConverter,modifiedCoordinatesConverter=this._modifiedEditor._getViewModel().coordinatesConverter,result={original:[],modified:[]};let lineChangeModifiedLength=0,lineChangeOriginalLength=0,originalEquivalentLineNumber=0,modifiedEquivalentLineNumber=0,originalEndEquivalentLineNumber=0,modifiedEndEquivalentLineNumber=0;const sortMyViewZones=(a,b)=>a.afterLineNumber-b.afterLineNumber,addAndCombineIfPossible=(destination,item)=>{if(null===item.domNode&&destination.length>0){const lastItem=destination[destination.length-1];if(lastItem.afterLineNumber===item.afterLineNumber&&null===lastItem.domNode)return void(lastItem.heightInLines+=item.heightInLines)}destination.push(item)},modifiedForeignVZ=new ForeignViewZonesIterator(this._modifiedForeignVZ),originalForeignVZ=new ForeignViewZonesIterator(this._originalForeignVZ);let lastOriginalLineNumber=1,lastModifiedLineNumber=1;
// In order to include foreign view zones after the last line change, the for loop will iterate once more after the end of the `lineChanges` array
for(let i=0,length=this._lineChanges.length;i<=length;i++){const lineChange=i<length?this._lineChanges[i]:null;null!==lineChange?(originalEquivalentLineNumber=lineChange.originalStartLineNumber+(lineChange.originalEndLineNumber>0?-1:0),modifiedEquivalentLineNumber=lineChange.modifiedStartLineNumber+(lineChange.modifiedEndLineNumber>0?-1:0),lineChangeOriginalLength=lineChange.originalEndLineNumber>0?ViewZonesComputer._getViewLineCount(this._originalEditor,lineChange.originalStartLineNumber,lineChange.originalEndLineNumber):0,lineChangeModifiedLength=lineChange.modifiedEndLineNumber>0?ViewZonesComputer._getViewLineCount(this._modifiedEditor,lineChange.modifiedStartLineNumber,lineChange.modifiedEndLineNumber):0,originalEndEquivalentLineNumber=Math.max(lineChange.originalStartLineNumber,lineChange.originalEndLineNumber),modifiedEndEquivalentLineNumber=Math.max(lineChange.modifiedStartLineNumber,lineChange.modifiedEndLineNumber)):(
// Increase to very large value to get the producing tests of foreign view zones running
originalEquivalentLineNumber+=1e7+lineChangeOriginalLength,modifiedEquivalentLineNumber+=1e7+lineChangeModifiedLength,originalEndEquivalentLineNumber=originalEquivalentLineNumber,modifiedEndEquivalentLineNumber=modifiedEquivalentLineNumber);
// Each step produces view zones, and after producing them, we try to cancel them out, to avoid empty-empty view zone cases
let stepOriginal=[],stepModified=[];
// ---------------------------- PRODUCE VIEW ZONES
// [PRODUCE] View zones due to line mapping differences (equal lines but wrapped differently)
if(hasWrapping){let count;count=lineChange?lineChange.originalEndLineNumber>0?lineChange.originalStartLineNumber-lastOriginalLineNumber:lineChange.modifiedStartLineNumber-lastModifiedLineNumber:originalModel.getLineCount()-lastOriginalLineNumber;for(let i=0;i<count;i++){const originalLineNumber=lastOriginalLineNumber+i,modifiedLineNumber=lastModifiedLineNumber+i,originalViewLineCount=originalCoordinatesConverter.getModelLineViewLineCount(originalLineNumber),modifiedViewLineCount=modifiedCoordinatesConverter.getModelLineViewLineCount(modifiedLineNumber);originalViewLineCount<modifiedViewLineCount?stepOriginal.push({afterLineNumber:originalLineNumber,heightInLines:modifiedViewLineCount-originalViewLineCount,domNode:null,marginDomNode:null}):originalViewLineCount>modifiedViewLineCount&&stepModified.push({afterLineNumber:modifiedLineNumber,heightInLines:originalViewLineCount-modifiedViewLineCount,domNode:null,marginDomNode:null})}lineChange&&(lastOriginalLineNumber=(lineChange.originalEndLineNumber>0?lineChange.originalEndLineNumber:lineChange.originalStartLineNumber)+1,lastModifiedLineNumber=(lineChange.modifiedEndLineNumber>0?lineChange.modifiedEndLineNumber:lineChange.modifiedStartLineNumber)+1)}
// [PRODUCE] View zone(s) in original-side due to foreign view zone(s) in modified-side
while(modifiedForeignVZ.current&&modifiedForeignVZ.current.afterLineNumber<=modifiedEndEquivalentLineNumber){let viewZoneLineNumber;viewZoneLineNumber=modifiedForeignVZ.current.afterLineNumber<=modifiedEquivalentLineNumber?originalEquivalentLineNumber-modifiedEquivalentLineNumber+modifiedForeignVZ.current.afterLineNumber:originalEndEquivalentLineNumber;let marginDomNode=null;lineChange&&lineChange.modifiedStartLineNumber<=modifiedForeignVZ.current.afterLineNumber&&modifiedForeignVZ.current.afterLineNumber<=lineChange.modifiedEndLineNumber&&(marginDomNode=this._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion()),stepOriginal.push({afterLineNumber:viewZoneLineNumber,heightInLines:modifiedForeignVZ.current.height/modifiedLineHeight,domNode:null,marginDomNode:marginDomNode}),modifiedForeignVZ.advance()}
// [PRODUCE] View zone(s) in modified-side due to foreign view zone(s) in original-side
while(originalForeignVZ.current&&originalForeignVZ.current.afterLineNumber<=originalEndEquivalentLineNumber){let viewZoneLineNumber;viewZoneLineNumber=originalForeignVZ.current.afterLineNumber<=originalEquivalentLineNumber?modifiedEquivalentLineNumber-originalEquivalentLineNumber+originalForeignVZ.current.afterLineNumber:modifiedEndEquivalentLineNumber,stepModified.push({afterLineNumber:viewZoneLineNumber,heightInLines:originalForeignVZ.current.height/originalLineHeight,domNode:null}),originalForeignVZ.advance()}if(null!==lineChange&&isChangeOrInsert(lineChange)){const r=this._produceOriginalFromDiff(lineChange,lineChangeOriginalLength,lineChangeModifiedLength);r&&stepOriginal.push(r)}if(null!==lineChange&&isChangeOrDelete(lineChange)){const r=this._produceModifiedFromDiff(lineChange,lineChangeOriginalLength,lineChangeModifiedLength);r&&stepModified.push(r)}
// ---------------------------- END PRODUCE VIEW ZONES
// ---------------------------- EMIT MINIMAL VIEW ZONES
// [CANCEL & EMIT] Try to cancel view zones out
let stepOriginalIndex=0,stepModifiedIndex=0;stepOriginal=stepOriginal.sort(sortMyViewZones),stepModified=stepModified.sort(sortMyViewZones);while(stepOriginalIndex<stepOriginal.length&&stepModifiedIndex<stepModified.length){const original=stepOriginal[stepOriginalIndex],modified=stepModified[stepModifiedIndex],originalDelta=original.afterLineNumber-originalEquivalentLineNumber,modifiedDelta=modified.afterLineNumber-modifiedEquivalentLineNumber;originalDelta<modifiedDelta?(addAndCombineIfPossible(result.original,original),stepOriginalIndex++):modifiedDelta<originalDelta?(addAndCombineIfPossible(result.modified,modified),stepModifiedIndex++):original.shouldNotShrink?(addAndCombineIfPossible(result.original,original),stepOriginalIndex++):modified.shouldNotShrink?(addAndCombineIfPossible(result.modified,modified),stepModifiedIndex++):original.heightInLines>=modified.heightInLines?(
// modified view zone gets removed
original.heightInLines-=modified.heightInLines,stepModifiedIndex++):(
// original view zone gets removed
modified.heightInLines-=original.heightInLines,stepOriginalIndex++)}
// [EMIT] Remaining original view zones
while(stepOriginalIndex<stepOriginal.length)addAndCombineIfPossible(result.original,stepOriginal[stepOriginalIndex]),stepOriginalIndex++;
// [EMIT] Remaining modified view zones
while(stepModifiedIndex<stepModified.length)addAndCombineIfPossible(result.modified,stepModified[stepModifiedIndex]),stepModifiedIndex++;
// ---------------------------- END EMIT MINIMAL VIEW ZONES
}return{original:ViewZonesComputer._ensureDomNodes(result.original),modified:ViewZonesComputer._ensureDomNodes(result.modified)}}static _ensureDomNodes(zones){return zones.map((z=>(z.domNode||(z.domNode=createFakeLinesDiv()),z)))}}function createDecoration(startLineNumber,startColumn,endLineNumber,endColumn,options){return{range:new core_range/* Range */.e(startLineNumber,startColumn,endLineNumber,endColumn),options:options}}const DECORATIONS={charDelete:textModel/* ModelDecorationOptions */.qx.register({description:"diff-editor-char-delete",className:"char-delete"}),charDeleteWholeLine:textModel/* ModelDecorationOptions */.qx.register({description:"diff-editor-char-delete-whole-line",className:"char-delete",isWholeLine:!0}),charInsert:textModel/* ModelDecorationOptions */.qx.register({description:"diff-editor-char-insert",className:"char-insert"}),charInsertWholeLine:textModel/* ModelDecorationOptions */.qx.register({description:"diff-editor-char-insert-whole-line",className:"char-insert",isWholeLine:!0}),lineInsert:textModel/* ModelDecorationOptions */.qx.register({description:"diff-editor-line-insert",className:"line-insert",marginClassName:"line-insert",isWholeLine:!0}),lineInsertWithSign:textModel/* ModelDecorationOptions */.qx.register({description:"diff-editor-line-insert-with-sign",className:"line-insert",linesDecorationsClassName:"insert-sign "+themeService/* ThemeIcon */.kS.asClassName(diffInsertIcon),marginClassName:"line-insert",isWholeLine:!0}),lineDelete:textModel/* ModelDecorationOptions */.qx.register({description:"diff-editor-line-delete",className:"line-delete",marginClassName:"line-delete",isWholeLine:!0}),lineDeleteWithSign:textModel/* ModelDecorationOptions */.qx.register({description:"diff-editor-line-delete-with-sign",className:"line-delete",linesDecorationsClassName:"delete-sign "+themeService/* ThemeIcon */.kS.asClassName(diffRemoveIcon),marginClassName:"line-delete",isWholeLine:!0}),lineDeleteMargin:textModel/* ModelDecorationOptions */.qx.register({description:"diff-editor-line-delete-margin",marginClassName:"line-delete"})};class DiffEditorWidgetSideBySide extends DiffEditorWidgetStyle{constructor(dataSource,enableSplitViewResizing){super(dataSource),this._disableSash=!1===enableSplitViewResizing,this._sashRatio=null,this._sashPosition=null,this._startSashPosition=null,this._sash=this._register(new sash/* Sash */.g(this._dataSource.getContainerDomNode(),this,{orientation:0/* VERTICAL */})),this._disableSash&&(this._sash.state=0/* Disabled */),this._sash.onDidStart((()=>this._onSashDragStart())),this._sash.onDidChange((e=>this._onSashDrag(e))),this._sash.onDidEnd((()=>this._onSashDragEnd())),this._sash.onDidReset((()=>this._onSashReset()))}setEnableSplitViewResizing(enableSplitViewResizing){const newDisableSash=!1===enableSplitViewResizing;this._disableSash!==newDisableSash&&(this._disableSash=newDisableSash,this._sash.state=this._disableSash?0/* Disabled */:3/* Enabled */)}layout(sashRatio=this._sashRatio){const w=this._dataSource.getWidth(),contentWidth=w-(this._dataSource.getOptions().renderOverviewRuler?DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH:0);let sashPosition=Math.floor((sashRatio||.5)*contentWidth);const midPoint=Math.floor(.5*contentWidth);return sashPosition=this._disableSash?midPoint:sashPosition||midPoint,contentWidth>2*DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH?(sashPosition<DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH&&(sashPosition=DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH),sashPosition>contentWidth-DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH&&(sashPosition=contentWidth-DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH)):sashPosition=midPoint,this._sashPosition!==sashPosition&&(this._sashPosition=sashPosition,this._sash.layout()),this._sashPosition}_onSashDragStart(){this._startSashPosition=this._sashPosition}_onSashDrag(e){const w=this._dataSource.getWidth(),contentWidth=w-(this._dataSource.getOptions().renderOverviewRuler?DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH:0),sashPosition=this.layout((this._startSashPosition+(e.currentX-e.startX))/contentWidth);this._sashRatio=sashPosition/contentWidth,this._dataSource.relayoutEditors()}_onSashDragEnd(){this._sash.layout()}_onSashReset(){this._sashRatio=.5,this._dataSource.relayoutEditors(),this._sash.layout()}getVerticalSashTop(sash){return 0}getVerticalSashLeft(sash){return this._sashPosition}getVerticalSashHeight(sash){return this._dataSource.getHeight()}_getViewZones(lineChanges,originalForeignVZ,modifiedForeignVZ){const originalEditor=this._dataSource.getOriginalEditor(),modifiedEditor=this._dataSource.getModifiedEditor(),c=new SideBySideViewZonesComputer(lineChanges,originalForeignVZ,modifiedForeignVZ,originalEditor,modifiedEditor);return c.getViewZones()}_getOriginalEditorDecorations(lineChanges,ignoreTrimWhitespace,renderIndicators){const originalEditor=this._dataSource.getOriginalEditor(),overviewZoneColor=String(this._removeColor),result={decorations:[],overviewZones:[]},originalModel=originalEditor.getModel(),originalViewModel=originalEditor._getViewModel();for(const lineChange of lineChanges)if(isChangeOrDelete(lineChange)){result.decorations.push({range:new core_range/* Range */.e(lineChange.originalStartLineNumber,1,lineChange.originalEndLineNumber,1073741824/* MAX_SAFE_SMALL_INTEGER */),options:renderIndicators?DECORATIONS.lineDeleteWithSign:DECORATIONS.lineDelete}),isChangeOrInsert(lineChange)&&lineChange.charChanges||result.decorations.push(createDecoration(lineChange.originalStartLineNumber,1,lineChange.originalEndLineNumber,1073741824/* MAX_SAFE_SMALL_INTEGER */,DECORATIONS.charDeleteWholeLine));const viewRange=getViewRange(originalModel,originalViewModel,lineChange.originalStartLineNumber,lineChange.originalEndLineNumber);if(result.overviewZones.push(new overviewZoneManager/* OverviewRulerZone */.EY(viewRange.startLineNumber,viewRange.endLineNumber,overviewZoneColor)),lineChange.charChanges)for(const charChange of lineChange.charChanges)if(isChangeOrDelete(charChange))if(ignoreTrimWhitespace)for(let lineNumber=charChange.originalStartLineNumber;lineNumber<=charChange.originalEndLineNumber;lineNumber++){let startColumn,endColumn;startColumn=lineNumber===charChange.originalStartLineNumber?charChange.originalStartColumn:originalModel.getLineFirstNonWhitespaceColumn(lineNumber),endColumn=lineNumber===charChange.originalEndLineNumber?charChange.originalEndColumn:originalModel.getLineLastNonWhitespaceColumn(lineNumber),result.decorations.push(createDecoration(lineNumber,startColumn,lineNumber,endColumn,DECORATIONS.charDelete))}else result.decorations.push(createDecoration(charChange.originalStartLineNumber,charChange.originalStartColumn,charChange.originalEndLineNumber,charChange.originalEndColumn,DECORATIONS.charDelete))}return result}_getModifiedEditorDecorations(lineChanges,ignoreTrimWhitespace,renderIndicators){const modifiedEditor=this._dataSource.getModifiedEditor(),overviewZoneColor=String(this._insertColor),result={decorations:[],overviewZones:[]},modifiedModel=modifiedEditor.getModel(),modifiedViewModel=modifiedEditor._getViewModel();for(const lineChange of lineChanges)if(isChangeOrInsert(lineChange)){result.decorations.push({range:new core_range/* Range */.e(lineChange.modifiedStartLineNumber,1,lineChange.modifiedEndLineNumber,1073741824/* MAX_SAFE_SMALL_INTEGER */),options:renderIndicators?DECORATIONS.lineInsertWithSign:DECORATIONS.lineInsert}),isChangeOrDelete(lineChange)&&lineChange.charChanges||result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber,1,lineChange.modifiedEndLineNumber,1073741824/* MAX_SAFE_SMALL_INTEGER */,DECORATIONS.charInsertWholeLine));const viewRange=getViewRange(modifiedModel,modifiedViewModel,lineChange.modifiedStartLineNumber,lineChange.modifiedEndLineNumber);if(result.overviewZones.push(new overviewZoneManager/* OverviewRulerZone */.EY(viewRange.startLineNumber,viewRange.endLineNumber,overviewZoneColor)),lineChange.charChanges)for(const charChange of lineChange.charChanges)if(isChangeOrInsert(charChange))if(ignoreTrimWhitespace)for(let lineNumber=charChange.modifiedStartLineNumber;lineNumber<=charChange.modifiedEndLineNumber;lineNumber++){let startColumn,endColumn;startColumn=lineNumber===charChange.modifiedStartLineNumber?charChange.modifiedStartColumn:modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber),endColumn=lineNumber===charChange.modifiedEndLineNumber?charChange.modifiedEndColumn:modifiedModel.getLineLastNonWhitespaceColumn(lineNumber),result.decorations.push(createDecoration(lineNumber,startColumn,lineNumber,endColumn,DECORATIONS.charInsert))}else result.decorations.push(createDecoration(charChange.modifiedStartLineNumber,charChange.modifiedStartColumn,charChange.modifiedEndLineNumber,charChange.modifiedEndColumn,DECORATIONS.charInsert))}return result}}DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH=100;class SideBySideViewZonesComputer extends ViewZonesComputer{constructor(lineChanges,originalForeignVZ,modifiedForeignVZ,originalEditor,modifiedEditor){super(lineChanges,originalForeignVZ,modifiedForeignVZ,originalEditor,modifiedEditor)}_createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion(){return null}_produceOriginalFromDiff(lineChange,lineChangeOriginalLength,lineChangeModifiedLength){return lineChangeModifiedLength>lineChangeOriginalLength?{afterLineNumber:Math.max(lineChange.originalStartLineNumber,lineChange.originalEndLineNumber),heightInLines:lineChangeModifiedLength-lineChangeOriginalLength,domNode:null}:null}_produceModifiedFromDiff(lineChange,lineChangeOriginalLength,lineChangeModifiedLength){return lineChangeOriginalLength>lineChangeModifiedLength?{afterLineNumber:Math.max(lineChange.modifiedStartLineNumber,lineChange.modifiedEndLineNumber),heightInLines:lineChangeOriginalLength-lineChangeModifiedLength,domNode:null}:null}}class DiffEditorWidgetInline extends DiffEditorWidgetStyle{constructor(dataSource,enableSplitViewResizing){super(dataSource),this._decorationsLeft=dataSource.getOriginalEditor().getLayoutInfo().decorationsLeft,this._register(dataSource.getOriginalEditor().onDidLayoutChange((layoutInfo=>{this._decorationsLeft!==layoutInfo.decorationsLeft&&(this._decorationsLeft=layoutInfo.decorationsLeft,dataSource.relayoutEditors())})))}setEnableSplitViewResizing(enableSplitViewResizing){
// Nothing to do..
}_getViewZones(lineChanges,originalForeignVZ,modifiedForeignVZ,renderIndicators){const originalEditor=this._dataSource.getOriginalEditor(),modifiedEditor=this._dataSource.getModifiedEditor(),computer=new InlineViewZonesComputer(lineChanges,originalForeignVZ,modifiedForeignVZ,originalEditor,modifiedEditor,renderIndicators);return computer.getViewZones()}_getOriginalEditorDecorations(lineChanges,ignoreTrimWhitespace,renderIndicators){const overviewZoneColor=String(this._removeColor),result={decorations:[],overviewZones:[]},originalEditor=this._dataSource.getOriginalEditor(),originalModel=originalEditor.getModel(),originalViewModel=originalEditor._getViewModel();for(const lineChange of lineChanges)
// Add overview zones in the overview ruler
if(isChangeOrDelete(lineChange)){result.decorations.push({range:new core_range/* Range */.e(lineChange.originalStartLineNumber,1,lineChange.originalEndLineNumber,1073741824/* MAX_SAFE_SMALL_INTEGER */),options:DECORATIONS.lineDeleteMargin});const viewRange=getViewRange(originalModel,originalViewModel,lineChange.originalStartLineNumber,lineChange.originalEndLineNumber);result.overviewZones.push(new overviewZoneManager/* OverviewRulerZone */.EY(viewRange.startLineNumber,viewRange.endLineNumber,overviewZoneColor))}return result}_getModifiedEditorDecorations(lineChanges,ignoreTrimWhitespace,renderIndicators){const modifiedEditor=this._dataSource.getModifiedEditor(),overviewZoneColor=String(this._insertColor),result={decorations:[],overviewZones:[]},modifiedModel=modifiedEditor.getModel(),modifiedViewModel=modifiedEditor._getViewModel();for(const lineChange of lineChanges)
// Add decorations & overview zones
if(isChangeOrInsert(lineChange)){result.decorations.push({range:new core_range/* Range */.e(lineChange.modifiedStartLineNumber,1,lineChange.modifiedEndLineNumber,1073741824/* MAX_SAFE_SMALL_INTEGER */),options:renderIndicators?DECORATIONS.lineInsertWithSign:DECORATIONS.lineInsert});const viewRange=getViewRange(modifiedModel,modifiedViewModel,lineChange.modifiedStartLineNumber,lineChange.modifiedEndLineNumber);if(result.overviewZones.push(new overviewZoneManager/* OverviewRulerZone */.EY(viewRange.startLineNumber,viewRange.endLineNumber,overviewZoneColor)),lineChange.charChanges){for(const charChange of lineChange.charChanges)if(isChangeOrInsert(charChange))if(ignoreTrimWhitespace)for(let lineNumber=charChange.modifiedStartLineNumber;lineNumber<=charChange.modifiedEndLineNumber;lineNumber++){let startColumn,endColumn;startColumn=lineNumber===charChange.modifiedStartLineNumber?charChange.modifiedStartColumn:modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber),endColumn=lineNumber===charChange.modifiedEndLineNumber?charChange.modifiedEndColumn:modifiedModel.getLineLastNonWhitespaceColumn(lineNumber),result.decorations.push(createDecoration(lineNumber,startColumn,lineNumber,endColumn,DECORATIONS.charInsert))}else result.decorations.push(createDecoration(charChange.modifiedStartLineNumber,charChange.modifiedStartColumn,charChange.modifiedEndLineNumber,charChange.modifiedEndColumn,DECORATIONS.charInsert))}else result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber,1,lineChange.modifiedEndLineNumber,1073741824/* MAX_SAFE_SMALL_INTEGER */,DECORATIONS.charInsertWholeLine))}return result}layout(){
// An editor should not be smaller than 5px
return Math.max(5,this._decorationsLeft)}}class InlineViewZonesComputer extends ViewZonesComputer{constructor(lineChanges,originalForeignVZ,modifiedForeignVZ,originalEditor,modifiedEditor,renderIndicators){super(lineChanges,originalForeignVZ,modifiedForeignVZ,originalEditor,modifiedEditor),this._originalModel=originalEditor.getModel(),this._renderIndicators=renderIndicators,this._pendingLineChange=[],this._pendingViewZones=[],this._lineBreaksComputer=this._modifiedEditor._getViewModel().createLineBreaksComputer()}getViewZones(){const result=super.getViewZones();return this._finalize(result),result}_createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion(){const result=document.createElement("div");return result.className="inline-added-margin-view-zone",result}_produceOriginalFromDiff(lineChange,lineChangeOriginalLength,lineChangeModifiedLength){const marginDomNode=document.createElement("div");return marginDomNode.className="inline-added-margin-view-zone",{afterLineNumber:Math.max(lineChange.originalStartLineNumber,lineChange.originalEndLineNumber),heightInLines:lineChangeModifiedLength,domNode:document.createElement("div"),marginDomNode:marginDomNode}}_produceModifiedFromDiff(lineChange,lineChangeOriginalLength,lineChangeModifiedLength){const domNode=document.createElement("div");domNode.className=`view-lines line-delete ${mouseCursor/* MOUSE_CURSOR_TEXT_CSS_CLASS_NAME */.S}`;const marginDomNode=document.createElement("div");marginDomNode.className="inline-deleted-margin-view-zone";const viewZone={shouldNotShrink:!0,afterLineNumber:0===lineChange.modifiedEndLineNumber?lineChange.modifiedStartLineNumber:lineChange.modifiedStartLineNumber-1,heightInLines:lineChangeOriginalLength,minWidthInPx:0,domNode:domNode,marginDomNode:marginDomNode,diff:{originalStartLineNumber:lineChange.originalStartLineNumber,originalEndLineNumber:lineChange.originalEndLineNumber,modifiedStartLineNumber:lineChange.modifiedStartLineNumber,modifiedEndLineNumber:lineChange.modifiedEndLineNumber,originalModel:this._originalModel,viewLineCounts:null}};for(let lineNumber=lineChange.originalStartLineNumber;lineNumber<=lineChange.originalEndLineNumber;lineNumber++)this._lineBreaksComputer.addRequest(this._originalModel.getLineContent(lineNumber),null,null);return this._pendingLineChange.push(lineChange),this._pendingViewZones.push(viewZone),viewZone}_finalize(result){const modifiedEditorOptions=this._modifiedEditor.getOptions(),tabSize=this._modifiedEditor.getModel().getOptions().tabSize,fontInfo=modifiedEditorOptions.get(43/* fontInfo */),disableMonospaceOptimizations=modifiedEditorOptions.get(29/* disableMonospaceOptimizations */),typicalHalfwidthCharacterWidth=fontInfo.typicalHalfwidthCharacterWidth,scrollBeyondLastColumn=modifiedEditorOptions.get(92/* scrollBeyondLastColumn */),mightContainNonBasicASCII=this._originalModel.mightContainNonBasicASCII(),mightContainRTL=this._originalModel.mightContainRTL(),lineHeight=modifiedEditorOptions.get(58/* lineHeight */),layoutInfo=modifiedEditorOptions.get(129/* layoutInfo */),lineDecorationsWidth=layoutInfo.decorationsWidth,stopRenderingLineAfter=modifiedEditorOptions.get(104/* stopRenderingLineAfter */),renderWhitespace=modifiedEditorOptions.get(87/* renderWhitespace */),renderControlCharacters=modifiedEditorOptions.get(82/* renderControlCharacters */),fontLigatures=modifiedEditorOptions.get(44/* fontLigatures */),lineBreaks=this._lineBreaksComputer.finalize();let lineBreakIndex=0;for(let i=0;i<this._pendingLineChange.length;i++){const lineChange=this._pendingLineChange[i],viewZone=this._pendingViewZones[i],domNode=viewZone.domNode;configuration/* Configuration */.V.applyFontInfoSlow(domNode,fontInfo);const marginDomNode=viewZone.marginDomNode;configuration/* Configuration */.V.applyFontInfoSlow(marginDomNode,fontInfo);const decorations=[];if(lineChange.charChanges)for(const charChange of lineChange.charChanges)isChangeOrDelete(charChange)&&decorations.push(new viewModel/* InlineDecoration */.$t(new core_range/* Range */.e(charChange.originalStartLineNumber,charChange.originalStartColumn,charChange.originalEndLineNumber,charChange.originalEndColumn),"char-delete",0/* Regular */));const hasCharChanges=decorations.length>0,sb=(0,stringBuilder/* createStringBuilder */.l$)(1e4);let maxCharsPerLine=0,renderedLineCount=0,viewLineCounts=null;for(let lineNumber=lineChange.originalStartLineNumber;lineNumber<=lineChange.originalEndLineNumber;lineNumber++){const lineIndex=lineNumber-lineChange.originalStartLineNumber,lineTokens=this._originalModel.getLineTokens(lineNumber),lineContent=lineTokens.getLineContent(),lineBreakData=lineBreaks[lineBreakIndex++],actualDecorations=lineDecorations/* LineDecoration */.Kp.filter(decorations,lineNumber,1,lineContent.length+1);if(lineBreakData){let lastBreakOffset=0;for(const breakOffset of lineBreakData.breakOffsets){const viewLineTokens=lineTokens.sliceAndInflate(lastBreakOffset,breakOffset,0),viewLineContent=lineContent.substring(lastBreakOffset,breakOffset);maxCharsPerLine=Math.max(maxCharsPerLine,this._renderOriginalLine(renderedLineCount++,viewLineContent,viewLineTokens,lineDecorations/* LineDecoration */.Kp.extractWrapped(actualDecorations,lastBreakOffset,breakOffset),hasCharChanges,mightContainNonBasicASCII,mightContainRTL,fontInfo,disableMonospaceOptimizations,lineHeight,lineDecorationsWidth,stopRenderingLineAfter,renderWhitespace,renderControlCharacters,fontLigatures,tabSize,sb,marginDomNode)),lastBreakOffset=breakOffset}viewLineCounts||(viewLineCounts=[]);
// make sure all lines before this one have an entry in `viewLineCounts`
while(viewLineCounts.length<lineIndex)viewLineCounts[viewLineCounts.length]=1;viewLineCounts[lineIndex]=lineBreakData.breakOffsets.length,viewZone.heightInLines+=lineBreakData.breakOffsets.length-1;const marginDomNode2=document.createElement("div");marginDomNode2.className="line-delete",result.original.push({afterLineNumber:lineNumber,afterColumn:0,heightInLines:lineBreakData.breakOffsets.length-1,domNode:createFakeLinesDiv(),marginDomNode:marginDomNode2})}else maxCharsPerLine=Math.max(maxCharsPerLine,this._renderOriginalLine(renderedLineCount++,lineContent,lineTokens,actualDecorations,hasCharChanges,mightContainNonBasicASCII,mightContainRTL,fontInfo,disableMonospaceOptimizations,lineHeight,lineDecorationsWidth,stopRenderingLineAfter,renderWhitespace,renderControlCharacters,fontLigatures,tabSize,sb,marginDomNode))}maxCharsPerLine+=scrollBeyondLastColumn;const html=sb.build(),trustedhtml=ttPolicy?ttPolicy.createHTML(html):html;if(domNode.innerHTML=trustedhtml,viewZone.minWidthInPx=maxCharsPerLine*typicalHalfwidthCharacterWidth,viewLineCounts){
// make sure all lines have an entry in `viewLineCounts`
const cnt=lineChange.originalEndLineNumber-lineChange.originalStartLineNumber;while(viewLineCounts.length<=cnt)viewLineCounts[viewLineCounts.length]=1}viewZone.diff.viewLineCounts=viewLineCounts}result.original.sort(((a,b)=>a.afterLineNumber-b.afterLineNumber))}_renderOriginalLine(renderedLineCount,lineContent,lineTokens,decorations,hasCharChanges,mightContainNonBasicASCII,mightContainRTL,fontInfo,disableMonospaceOptimizations,lineHeight,lineDecorationsWidth,stopRenderingLineAfter,renderWhitespace,renderControlCharacters,fontLigatures,tabSize,sb,marginDomNode){sb.appendASCIIString('<div class="view-line'),hasCharChanges||
// No char changes
sb.appendASCIIString(" char-delete"),sb.appendASCIIString('" style="top:'),sb.appendASCIIString(String(renderedLineCount*lineHeight)),sb.appendASCIIString('px;width:1000000px;">');const isBasicASCII=viewModel/* ViewLineRenderingData */.wA.isBasicASCII(lineContent,mightContainNonBasicASCII),containsRTL=viewModel/* ViewLineRenderingData */.wA.containsRTL(lineContent,isBasicASCII,mightContainRTL),output=(0,viewLineRenderer/* renderViewLine */.d1)(new viewLineRenderer/* RenderLineInput */.IJ(fontInfo.isMonospace&&!disableMonospaceOptimizations,fontInfo.canUseHalfwidthRightwardsArrow,lineContent,!1,isBasicASCII,containsRTL,0,lineTokens,decorations,tabSize,0,fontInfo.spaceWidth,fontInfo.middotWidth,fontInfo.wsmiddotWidth,stopRenderingLineAfter,renderWhitespace,renderControlCharacters,fontLigatures!==editorOptions/* EditorFontLigatures */.n0.OFF,null),sb);if(sb.appendASCIIString("</div>"),this._renderIndicators){const marginElement=document.createElement("div");marginElement.className=`delete-sign ${themeService/* ThemeIcon */.kS.asClassName(diffRemoveIcon)}`,marginElement.setAttribute("style",`position:absolute;top:${renderedLineCount*lineHeight}px;width:${lineDecorationsWidth}px;height:${lineHeight}px;right:0;`),marginDomNode.appendChild(marginElement)}return output.characterMapping.getAbsoluteOffset(output.characterMapping.length)}}function validateDiffWordWrap(value,defaultValue){return(0,editorOptions/* stringSet */.NY)(value,defaultValue,["off","on","inherit"])}function isChangeOrInsert(lineChange){return lineChange.modifiedEndLineNumber>0}function isChangeOrDelete(lineChange){return lineChange.originalEndLineNumber>0}function createFakeLinesDiv(){const r=document.createElement("div");return r.className="diagonal-fill",r}function getViewRange(model,viewModel,startLineNumber,endLineNumber){const lineCount=model.getLineCount();return startLineNumber=Math.min(lineCount,Math.max(1,startLineNumber)),endLineNumber=Math.min(lineCount,Math.max(1,endLineNumber)),viewModel.coordinatesConverter.convertModelRangeToViewRange(new core_range/* Range */.e(startLineNumber,model.getLineMinColumn(startLineNumber),endLineNumber,model.getLineMaxColumn(endLineNumber)))}function validateDiffEditorOptions(options,defaults){return{enableSplitViewResizing:(0,editorOptions/* boolean */.O7)(options.enableSplitViewResizing,defaults.enableSplitViewResizing),renderSideBySide:(0,editorOptions/* boolean */.O7)(options.renderSideBySide,defaults.renderSideBySide),maxComputationTime:(0,editorOptions/* clampedInt */.Zc)(options.maxComputationTime,defaults.maxComputationTime,0,1073741824/* MAX_SAFE_SMALL_INTEGER */),maxFileSize:(0,editorOptions/* clampedInt */.Zc)(options.maxFileSize,defaults.maxFileSize,0,1073741824/* MAX_SAFE_SMALL_INTEGER */),ignoreTrimWhitespace:(0,editorOptions/* boolean */.O7)(options.ignoreTrimWhitespace,defaults.ignoreTrimWhitespace),renderIndicators:(0,editorOptions/* boolean */.O7)(options.renderIndicators,defaults.renderIndicators),originalEditable:(0,editorOptions/* boolean */.O7)(options.originalEditable,defaults.originalEditable),diffCodeLens:(0,editorOptions/* boolean */.O7)(options.diffCodeLens,defaults.diffCodeLens),renderOverviewRuler:(0,editorOptions/* boolean */.O7)(options.renderOverviewRuler,defaults.renderOverviewRuler),diffWordWrap:validateDiffWordWrap(options.diffWordWrap,defaults.diffWordWrap)}}function changedDiffEditorOptions(a,b){return{enableSplitViewResizing:a.enableSplitViewResizing!==b.enableSplitViewResizing,renderSideBySide:a.renderSideBySide!==b.renderSideBySide,maxComputationTime:a.maxComputationTime!==b.maxComputationTime,maxFileSize:a.maxFileSize!==b.maxFileSize,ignoreTrimWhitespace:a.ignoreTrimWhitespace!==b.ignoreTrimWhitespace,renderIndicators:a.renderIndicators!==b.renderIndicators,originalEditable:a.originalEditable!==b.originalEditable,diffCodeLens:a.diffCodeLens!==b.diffCodeLens,renderOverviewRuler:a.renderOverviewRuler!==b.renderOverviewRuler,diffWordWrap:a.diffWordWrap!==b.diffWordWrap}}(0,themeService/* registerThemingParticipant */.Ic)(((theme,collector)=>{const added=theme.getColor(colorRegistry/* diffInserted */.yp);added&&(collector.addRule(`.monaco-editor .line-insert, .monaco-editor .char-insert { background-color: ${added}; }`),collector.addRule(`.monaco-diff-editor .line-insert, .monaco-diff-editor .char-insert { background-color: ${added}; }`),collector.addRule(`.monaco-editor .inline-added-margin-view-zone { background-color: ${added}; }`));const removed=theme.getColor(colorRegistry/* diffRemoved */.P4);removed&&(collector.addRule(`.monaco-editor .line-delete, .monaco-editor .char-delete { background-color: ${removed}; }`),collector.addRule(`.monaco-diff-editor .line-delete, .monaco-diff-editor .char-delete { background-color: ${removed}; }`),collector.addRule(`.monaco-editor .inline-deleted-margin-view-zone { background-color: ${removed}; }`));const addedOutline=theme.getColor(colorRegistry/* diffInsertedOutline */.XL);addedOutline&&collector.addRule(`.monaco-editor .line-insert, .monaco-editor .char-insert { border: 1px ${"hc"===theme.type?"dashed":"solid"} ${addedOutline}; }`);const removedOutline=theme.getColor(colorRegistry/* diffRemovedOutline */.mH);removedOutline&&collector.addRule(`.monaco-editor .line-delete, .monaco-editor .char-delete { border: 1px ${"hc"===theme.type?"dashed":"solid"} ${removedOutline}; }`);const shadow=theme.getColor(colorRegistry/* scrollbarShadow */._w);shadow&&collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { box-shadow: -6px 0 5px -5px ${shadow}; }`);const border=theme.getColor(colorRegistry/* diffBorder */.LL);border&&collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { border-left: 1px solid ${border}; }`);const scrollbarSliderBackgroundColor=theme.getColor(colorRegistry/* scrollbarSliderBackground */.et);scrollbarSliderBackgroundColor&&collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport {\n\t\t\t\tbackground: ${scrollbarSliderBackgroundColor};\n\t\t\t}\n\t\t`);const scrollbarSliderHoverBackgroundColor=theme.getColor(colorRegistry/* scrollbarSliderHoverBackground */.AB);scrollbarSliderHoverBackgroundColor&&collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:hover {\n\t\t\t\tbackground: ${scrollbarSliderHoverBackgroundColor};\n\t\t\t}\n\t\t`);const scrollbarSliderActiveBackgroundColor=theme.getColor(colorRegistry/* scrollbarSliderActiveBackground */.yn);scrollbarSliderActiveBackgroundColor&&collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:active {\n\t\t\t\tbackground: ${scrollbarSliderActiveBackgroundColor};\n\t\t\t}\n\t\t`);const diffDiagonalFillColor=theme.getColor(colorRegistry/* diffDiagonalFill */.L_);collector.addRule(`\n\t.monaco-editor .diagonal-fill {\n\t\tbackground-image: linear-gradient(\n\t\t\t-45deg,\n\t\t\t${diffDiagonalFillColor} 12.5%,\n\t\t\t#0000 12.5%, #0000 50%,\n\t\t\t${diffDiagonalFillColor} 50%, ${diffDiagonalFillColor} 62.5%,\n\t\t\t#0000 62.5%, #0000 100%\n\t\t);\n\t\tbackground-size: 8px 8px;\n\t}\n\t`)}))},
/***/475623:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
/* harmony export */__webpack_require__.d(__webpack_exports__,{
/* harmony export */F:function(){/* binding */return DiffNavigator}
/* harmony export */});
/* harmony import */var _base_common_assert_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(935146),_base_common_event_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(104669),_base_common_lifecycle_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(905976),_base_common_objects_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(936248),_common_core_range_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(624314);
/* harmony import */
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
const defaultOptions={followsCaret:!0,ignoreCharChanges:!0,alwaysRevealFirst:!0};
/**
 * Create a new diff navigator for the provided diff editor.
 */class DiffNavigator extends _base_common_lifecycle_js__WEBPACK_IMPORTED_MODULE_1__/* .Disposable */.JT{constructor(editor,options={}){super(),this._onDidUpdate=this._register(new _base_common_event_js__WEBPACK_IMPORTED_MODULE_0__/* .Emitter */.Q5),this._editor=editor,this._options=_base_common_objects_js__WEBPACK_IMPORTED_MODULE_2__/* .mixin */.jB(options,defaultOptions,!1),this.disposed=!1,this.nextIdx=-1,this.ranges=[],this.ignoreSelectionChange=!1,this.revealFirst=Boolean(this._options.alwaysRevealFirst),
// hook up to diff editor for diff, disposal, and caret move
this._register(this._editor.onDidDispose((()=>this.dispose()))),this._register(this._editor.onDidUpdateDiff((()=>this._onDiffUpdated()))),this._options.followsCaret&&this._register(this._editor.getModifiedEditor().onDidChangeCursorPosition((e=>{this.ignoreSelectionChange||(this.nextIdx=-1)}))),this._options.alwaysRevealFirst&&this._register(this._editor.getModifiedEditor().onDidChangeModel((e=>{this.revealFirst=!0}))),
// init things
this._init()}_init(){this._editor.getLineChanges()}_onDiffUpdated(){this._init(),this._compute(this._editor.getLineChanges()),this.revealFirst&&null!==this._editor.getLineChanges()&&(this.revealFirst=!1,this.nextIdx=-1,this.next(1/* Immediate */))}_compute(lineChanges){
// new ranges
this.ranges=[],lineChanges&&
// create ranges from changes
lineChanges.forEach((lineChange=>{!this._options.ignoreCharChanges&&lineChange.charChanges?lineChange.charChanges.forEach((charChange=>{this.ranges.push({rhs:!0,range:new _common_core_range_js__WEBPACK_IMPORTED_MODULE_3__/* .Range */.e(charChange.modifiedStartLineNumber,charChange.modifiedStartColumn,charChange.modifiedEndLineNumber,charChange.modifiedEndColumn)})})):0===lineChange.modifiedEndLineNumber?
// a deletion
this.ranges.push({rhs:!0,range:new _common_core_range_js__WEBPACK_IMPORTED_MODULE_3__/* .Range */.e(lineChange.modifiedStartLineNumber,1,lineChange.modifiedStartLineNumber+1,1)}):
// an insertion or modification
this.ranges.push({rhs:!0,range:new _common_core_range_js__WEBPACK_IMPORTED_MODULE_3__/* .Range */.e(lineChange.modifiedStartLineNumber,1,lineChange.modifiedEndLineNumber+1,1)})})),
// sort
this.ranges.sort(((left,right)=>_common_core_range_js__WEBPACK_IMPORTED_MODULE_3__/* .Range */.e.compareRangesUsingStarts(left.range,right.range))),this._onDidUpdate.fire(this)}_initIdx(fwd){let found=!1,position=this._editor.getPosition();if(position){for(let i=0,len=this.ranges.length;i<len&&!found;i++){let range=this.ranges[i].range;position.isBeforeOrEqual(range.getStartPosition())&&(this.nextIdx=i+(fwd?0:-1),found=!0)}found||(
// after the last change
this.nextIdx=fwd?0:this.ranges.length-1),this.nextIdx<0&&(this.nextIdx=this.ranges.length-1)}else this.nextIdx=0}_move(fwd,scrollType){if(_base_common_assert_js__WEBPACK_IMPORTED_MODULE_4__.ok(!this.disposed,"Illegal State - diff navigator has been disposed"),!this.canNavigate())return;-1===this.nextIdx?this._initIdx(fwd):fwd?(this.nextIdx+=1,this.nextIdx>=this.ranges.length&&(this.nextIdx=0)):(this.nextIdx-=1,this.nextIdx<0&&(this.nextIdx=this.ranges.length-1));let info=this.ranges[this.nextIdx];this.ignoreSelectionChange=!0;try{let pos=info.range.getStartPosition();this._editor.setPosition(pos),this._editor.revealRangeInCenter(info.range,scrollType)}finally{this.ignoreSelectionChange=!1}}canNavigate(){return this.ranges&&this.ranges.length>0}next(scrollType=0/* Smooth */){this._move(!0,scrollType)}previous(scrollType=0/* Smooth */){this._move(!1,scrollType)}dispose(){super.dispose(),this.ranges=[],this.disposed=!0}}
/***/},
/***/284527:
/***/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){
/* harmony export */__webpack_require__.d(__webpack_exports__,{
/* harmony export */H:function(){/* binding */return EmbeddedCodeEditorWidget}
/* harmony export */});
/* harmony import */var _base_common_objects_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(936248),_services_codeEditorService_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(611640),_codeEditorWidget_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(8702),_platform_commands_common_commands_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(820942),_platform_contextkey_common_contextkey_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(938819),_platform_instantiation_common_instantiation_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(472065),_platform_notification_common_notification_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(759422),_platform_theme_common_themeService_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(897781),_platform_accessibility_common_accessibility_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(331106),__decorate=function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};
/* harmony import */let EmbeddedCodeEditorWidget=class extends _codeEditorWidget_js__WEBPACK_IMPORTED_MODULE_2__/* .CodeEditorWidget */.Gm{constructor(domElement,options,parentEditor,instantiationService,codeEditorService,commandService,contextKeyService,themeService,notificationService,accessibilityService){super(domElement,Object.assign(Object.assign({},parentEditor.getRawOptions()),{overflowWidgetsDomNode:parentEditor.getOverflowWidgetsDomNode()}),{},instantiationService,codeEditorService,commandService,contextKeyService,themeService,notificationService,accessibilityService),this._parentEditor=parentEditor,this._overwriteOptions=options,
// Overwrite parent's options
super.updateOptions(this._overwriteOptions),this._register(parentEditor.onDidChangeConfiguration((e=>this._onParentConfigurationChanged(e))))}getParentEditor(){return this._parentEditor}_onParentConfigurationChanged(e){super.updateOptions(this._parentEditor.getRawOptions()),super.updateOptions(this._overwriteOptions)}updateOptions(newOptions){_base_common_objects_js__WEBPACK_IMPORTED_MODULE_0__/* .mixin */.jB(this._overwriteOptions,newOptions,!0),super.updateOptions(this._overwriteOptions)}};EmbeddedCodeEditorWidget=__decorate([__param(3,_platform_instantiation_common_instantiation_js__WEBPACK_IMPORTED_MODULE_5__/* .IInstantiationService */.TG),__param(4,_services_codeEditorService_js__WEBPACK_IMPORTED_MODULE_1__/* .ICodeEditorService */.$),__param(5,_platform_commands_common_commands_js__WEBPACK_IMPORTED_MODULE_3__/* .ICommandService */.H),__param(6,_platform_contextkey_common_contextkey_js__WEBPACK_IMPORTED_MODULE_4__/* .IContextKeyService */.i6),__param(7,_platform_theme_common_themeService_js__WEBPACK_IMPORTED_MODULE_7__/* .IThemeService */.XE),__param(8,_platform_notification_common_notification_js__WEBPACK_IMPORTED_MODULE_6__/* .INotificationService */.lT),__param(9,_platform_accessibility_common_accessibility_js__WEBPACK_IMPORTED_MODULE_8__/* .IAccessibilityService */.F)],EmbeddedCodeEditorWidget)}}]);
//# sourceMappingURL=http://localhost:5050/sourcemaps/js/chunk-common-a0e8a848.js.map